// ==UserScript==
// @name        PT-Manager
// @namespace   https://blog.rhilip.info/
// @version     0.0.1.1627141323
// @author      Rhilip <rhilipruan@gmail.com>
// @source      https://github.com/Rhilip/PT-Manager
// @license     MIT
// @include     *://ptm.rhilip.info/*
// @include     *://localhost:8080/*
// @require     https://unpkg.com/sizzle@^2.3.6/dist/sizzle.js
// @grant       GM_xmlhttpRequest
// @grant       GM_setClipboard
// @grant       GM_setValue
// @grant       GM_getValue
// @grant       GM_listValues
// @grant       GM_deleteValue
// @grant       GM_info
// @grant       unsafeWindow
// @connect     *
// @run-at      document-start
// ==/UserScript==

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 278);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ ETorrentStatus; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ ETorrentBaseTagColor; });

// CONCATENATED MODULE: ./src/shared/types/torrent.ts
// 种子当前状态
var ETorrentStatus;
(function (ETorrentStatus) {
    ETorrentStatus[ETorrentStatus["unknown"] = 0] = "unknown";
    ETorrentStatus[ETorrentStatus["downloading"] = 1] = "downloading";
    ETorrentStatus[ETorrentStatus["seeding"] = 2] = "seeding";
    ETorrentStatus[ETorrentStatus["inactive"] = 3] = "inactive";
    ETorrentStatus[ETorrentStatus["completed"] = 4] = "completed";
})(ETorrentStatus || (ETorrentStatus = {}));
// 一些比较基础的 Tag 及其对应颜色
var ETorrentBaseTagColor;
(function (ETorrentBaseTagColor) {
    ETorrentBaseTagColor["Free"] = "blue";
    ETorrentBaseTagColor["2xFree"] = "green";
    ETorrentBaseTagColor["2xUp"] = "lime";
    ETorrentBaseTagColor["2x50%"] = "light-green";
    ETorrentBaseTagColor["25%"] = "purple";
    ETorrentBaseTagColor["30%"] = "indigo";
    ETorrentBaseTagColor["35%"] = "#283593";
    ETorrentBaseTagColor["50%"] = "orange";
    ETorrentBaseTagColor["70%"] = "blue-grey";
    ETorrentBaseTagColor["75%"] = "#9e9d24";
    ETorrentBaseTagColor["VIP"] = "#f57c00";
    ETorrentBaseTagColor["Excl."] = "#f4511e";
})(ETorrentBaseTagColor || (ETorrentBaseTagColor = {}));

// CONCATENATED MODULE: ./src/shared/types/userinfo.ts


// CONCATENATED MODULE: ./src/shared/types/search.ts


// CONCATENATED MODULE: ./src/shared/types/site.ts


// CONCATENATED MODULE: ./src/shared/types/utils.ts


// CONCATENATED MODULE: ./src/shared/types.ts







/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ sizePattern; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ parseSizeString; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ findThenParseSizeString; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ findThenParseNumberString; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ cfDecodeEmail; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ extractContent; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ createDocument; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ parseValidTimeString; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ parseTimeToLive; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ parseTimeWithZone; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* binding */ sleep; });

// UNUSED EXPORTS: formatSizeString, dateUnit, nonStandDateUnitMap, getFixedRatio, getRandomString

// EXTERNAL MODULE: ./node_modules/filesize/lib/filesize.min.js
var filesize_min = __webpack_require__(80);
var filesize_min_default = /*#__PURE__*/__webpack_require__.n(filesize_min);

// CONCATENATED MODULE: ./src/shared/filters/size.ts

const sizePattern = /^(\d*\.?\d+)(.*[^ZEPTGMK])?([ZEPTGMK](B|iB))s?$/i;
function parseSizeString(size) {
    size = size.replace(/,/g, ''); // 建议在传入前就替换掉，但是以防万一还是在这里再做一次替换
    const sizeRawMatch = size.match(sizePattern);
    if (sizeRawMatch) {
        const sizeNumber = parseFloat(sizeRawMatch[1]);
        const sizeType = sizeRawMatch[3];
        switch (true) {
            case /Zi?B/i.test(sizeType):
                return sizeNumber * Math.pow(2, 70);
            case /Ei?B/i.test(sizeType):
                return sizeNumber * Math.pow(2, 60);
            case /Pi?B/i.test(sizeType):
                return sizeNumber * Math.pow(2, 50);
            case /Ti?B/i.test(sizeType):
                return sizeNumber * Math.pow(2, 40);
            case /Gi?B/i.test(sizeType):
                return sizeNumber * Math.pow(2, 30);
            case /Mi?B/i.test(sizeType):
                return sizeNumber * Math.pow(2, 20);
            case /Ki?B/i.test(sizeType):
                return sizeNumber * Math.pow(2, 10);
            default:
                return sizeNumber;
        }
    }
    return 0;
}
function findThenParseSizeString(query) {
    const queryMatch = query.trim().replace(/[ ,\n]/g, '').match(/([\d.]+ ?[ZEPTGMK]?i?B)/);
    return queryMatch && queryMatch.length >= 2 ? parseSizeString(queryMatch[1]) : 0;
}
function formatSizeString(size, options = {}) {
    return filesize_min_default()(size, { standard: 'iec', ...options });
}

// CONCATENATED MODULE: ./src/shared/filters/number.ts
function findThenParseNumberString(query) {
    const queryMatch = query.trim().replace(/[ ,\n]/g, '').match(/([\d.]+)/);
    return queryMatch && queryMatch.length >= 2 ? parseFloat(queryMatch[1]) : 0;
}
// TODO format number

// CONCATENATED MODULE: ./src/shared/filters/html.ts
/**
 * cloudflare Email 解码方法，来自 https://usamaejaz.com/cloudflare-email-decoding/
 * @param {*} encodedString
 */
function cfDecodeEmail(encodedString) {
    let email = '';
    const r = parseInt(encodedString.substr(0, 2), 16);
    for (let n = 2; encodedString.length - n; n += 2) {
        const i = parseInt(encodedString.substr(n, 2), 16) ^ r;
        email += String.fromCharCode(i);
    }
    return email;
}
// From: https://stackoverflow.com/a/28899585/8824471
function extractContent(s) {
    const span = document.createElement('span');
    span.innerHTML = s;
    return span.textContent || span.innerText;
}
function createDocument(str, type = 'text/html') {
    return (new DOMParser()).parseFromString(str, type);
}

// EXTERNAL MODULE: ./src/shared/dayjs.ts
var dayjs = __webpack_require__(3);

// CONCATENATED MODULE: ./src/shared/filters/date.ts

function parseValidTimeString(query, format) {
    const time = Object(dayjs["a" /* default */])(query, format);
    return time.isValid() ? time.valueOf() : query;
}
const dateUnit = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second'];
const nonStandDateUnitMap = new Map([
    // 中文
    ['分', 'minute'], ['时', 'hour'], ['天', 'day'], ['月', 'month'], ['年', 'year'],
    // 英文缩写
    ['hr', 'hour'], ['min', 'minute'], ['sec', 'second']
]);
function parseTimeToLive(ttl) {
    // 处理原始字符串中的非标准Unit
    nonStandDateUnitMap.forEach((v, k) => {
        ttl = ttl.replace(k, v);
    });
    let nowDayJs = Object(dayjs["a" /* default */])();
    dateUnit.forEach(v => {
        const matched = ttl.match(new RegExp(`([.\\d]+) ?(${v}s?)`));
        if (matched) {
            nowDayJs = nowDayJs.add(-parseFloat(matched[1]), matched[2]);
        }
    });
    return nowDayJs.valueOf();
}
function parseTimeWithZone(time, timezoneOffset = '+0000') {
    if (!timezoneOffset || !time) {
        return Object(dayjs["a" /* default */])(time).valueOf();
    }
    let result = time;
    // 标准时间戳需要 * 1000
    if (/^(\d){10}$/.test(result + '')) {
        result = parseInt(result + '') * 1000;
    }
    // 时间格式按 ISO 8601 标准设置，如：2020-01-01T00:00:01+0800
    const datetime = Object(dayjs["a" /* default */])(result).format('YYYY-MM-DDTHH:mm:ss');
    return new Date(`${datetime}${timezoneOffset}`).getTime();
}

// CONCATENATED MODULE: ./src/shared/filter.ts




function getFixedRatio(uploaded = 0, downloaded = 0) {
    const ratio = uploaded / downloaded;
    if (ratio === Infinity || ratio > 10000) {
        return '∞'; // Ratio过大时，将分享率设置为无限
    }
    else {
        return ratio.toFixed(2);
    }
}
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
/**
 * 生成随机字符串
 * @param length
 * @param noSimilar 是否包含容易混淆的字符[oO,Ll,9gq,Vv,Uu,I1]，默认为包含
 */
function getRandomString(length = 32, noSimilar = false) {
    const chars = noSimilar
        ? 'abcdefhijkmnprstwxyz2345678ABCDEFGHJKMNPQRSTWXYZ'
        : 'abcdefghijkmnopqrstuvwxyz0123456789ABCDEFGHIJKMNOPQRSTUVWXYZ';
    const maxLength = chars.length;
    const result = [];
    for (let i = 0; i < length; i++) {
        result.push(chars.charAt(Math.floor(Math.random() * maxLength)));
    }
    return result.join('');
}


/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = Sizzle;

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81);
/* harmony import */ var dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var dayjs_plugin_advancedFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82);
/* harmony import */ var dayjs_plugin_advancedFormat__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_advancedFormat__WEBPACK_IMPORTED_MODULE_2__);



dayjs__WEBPACK_IMPORTED_MODULE_0___default.a.extend(dayjs_plugin_advancedFormat__WEBPACK_IMPORTED_MODULE_2___default.a);
dayjs__WEBPACK_IMPORTED_MODULE_0___default.a.extend(dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_1___default.a);
/* harmony default export */ __webpack_exports__["a"] = (dayjs__WEBPACK_IMPORTED_MODULE_0___default.a);


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var required = __webpack_require__(93)
  , qs = __webpack_require__(94)
  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:[\\/]+/
  , protocolre = /^([a-z][a-z0-9.+-]*:)?([\\/]{1,})?([\S\s]*)/i
  , whitespace = '[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]'
  , left = new RegExp('^'+ whitespace +'+');

/**
 * Trim a given string.
 *
 * @param {String} str String to trim.
 * @public
 */
function trimLeft(str) {
  return (str ? str : '').toString().replace(left, '');
}

/**
 * These are the parse rules for the URL parser, it informs the parser
 * about:
 *
 * 0. The char it Needs to parse, if it's a string it should be done using
 *    indexOf, RegExp using exec and NaN means set as current value.
 * 1. The property we should set when parsing this value.
 * 2. Indication if it's backwards or forward parsing, when set as number it's
 *    the value of extra chars that should be split off.
 * 3. Inherit from location if non existing in the parser.
 * 4. `toLowerCase` the resulting value.
 */
var rules = [
  ['#', 'hash'],                        // Extract from the back.
  ['?', 'query'],                       // Extract from the back.
  function sanitize(address) {          // Sanitize what is left of the address
    return address.replace('\\', '/');
  },
  ['/', 'pathname'],                    // Extract from the back.
  ['@', 'auth', 1],                     // Extract from the front.
  [NaN, 'host', undefined, 1, 1],       // Set left over value.
  [/:(\d+)$/, 'port', undefined, 1],    // RegExp the back.
  [NaN, 'hostname', undefined, 1, 1]    // Set left over.
];

/**
 * These properties should not be copied or inherited from. This is only needed
 * for all non blob URL's as a blob URL does not include a hash, only the
 * origin.
 *
 * @type {Object}
 * @private
 */
var ignore = { hash: 1, query: 1 };

/**
 * The location object differs when your code is loaded through a normal page,
 * Worker or through a worker using a blob. And with the blobble begins the
 * trouble as the location object will contain the URL of the blob, not the
 * location of the page where our code is loaded in. The actual origin is
 * encoded in the `pathname` so we can thankfully generate a good "default"
 * location from it so we can generate proper relative URL's again.
 *
 * @param {Object|String} loc Optional default location object.
 * @returns {Object} lolcation object.
 * @public
 */
function lolcation(loc) {
  var globalVar;

  if (typeof window !== 'undefined') globalVar = window;
  else if (typeof global !== 'undefined') globalVar = global;
  else if (typeof self !== 'undefined') globalVar = self;
  else globalVar = {};

  var location = globalVar.location || {};
  loc = loc || location;

  var finaldestination = {}
    , type = typeof loc
    , key;

  if ('blob:' === loc.protocol) {
    finaldestination = new Url(unescape(loc.pathname), {});
  } else if ('string' === type) {
    finaldestination = new Url(loc, {});
    for (key in ignore) delete finaldestination[key];
  } else if ('object' === type) {
    for (key in loc) {
      if (key in ignore) continue;
      finaldestination[key] = loc[key];
    }

    if (finaldestination.slashes === undefined) {
      finaldestination.slashes = slashes.test(loc.href);
    }
  }

  return finaldestination;
}

/**
 * @typedef ProtocolExtract
 * @type Object
 * @property {String} protocol Protocol matched in the URL, in lowercase.
 * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
 * @property {String} rest Rest of the URL that is not part of the protocol.
 */

/**
 * Extract protocol information from a URL with/without double slash ("//").
 *
 * @param {String} address URL we want to extract from.
 * @return {ProtocolExtract} Extracted information.
 * @private
 */
function extractProtocol(address) {
  address = trimLeft(address);

  var match = protocolre.exec(address)
    , protocol = match[1] ? match[1].toLowerCase() : ''
    , slashes = !!(match[2] && match[2].length >= 2)
    , rest =  match[2] && match[2].length === 1 ? '/' + match[3] : match[3];

  return {
    protocol: protocol,
    slashes: slashes,
    rest: rest
  };
}

/**
 * Resolve a relative URL pathname against a base URL pathname.
 *
 * @param {String} relative Pathname of the relative URL.
 * @param {String} base Pathname of the base URL.
 * @return {String} Resolved pathname.
 * @private
 */
function resolve(relative, base) {
  if (relative === '') return base;

  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))
    , i = path.length
    , last = path[i - 1]
    , unshift = false
    , up = 0;

  while (i--) {
    if (path[i] === '.') {
      path.splice(i, 1);
    } else if (path[i] === '..') {
      path.splice(i, 1);
      up++;
    } else if (up) {
      if (i === 0) unshift = true;
      path.splice(i, 1);
      up--;
    }
  }

  if (unshift) path.unshift('');
  if (last === '.' || last === '..') path.push('');

  return path.join('/');
}

/**
 * The actual URL instance. Instead of returning an object we've opted-in to
 * create an actual constructor as it's much more memory efficient and
 * faster and it pleases my OCD.
 *
 * It is worth noting that we should not use `URL` as class name to prevent
 * clashes with the global URL instance that got introduced in browsers.
 *
 * @constructor
 * @param {String} address URL we want to parse.
 * @param {Object|String} [location] Location defaults for relative paths.
 * @param {Boolean|Function} [parser] Parser for the query string.
 * @private
 */
function Url(address, location, parser) {
  address = trimLeft(address);

  if (!(this instanceof Url)) {
    return new Url(address, location, parser);
  }

  var relative, extracted, parse, instruction, index, key
    , instructions = rules.slice()
    , type = typeof location
    , url = this
    , i = 0;

  //
  // The following if statements allows this module two have compatibility with
  // 2 different API:
  //
  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
  //    where the boolean indicates that the query string should also be parsed.
  //
  // 2. The `URL` interface of the browser which accepts a URL, object as
  //    arguments. The supplied object will be used as default values / fall-back
  //    for relative paths.
  //
  if ('object' !== type && 'string' !== type) {
    parser = location;
    location = null;
  }

  if (parser && 'function' !== typeof parser) parser = qs.parse;

  location = lolcation(location);

  //
  // Extract protocol information before running the instructions.
  //
  extracted = extractProtocol(address || '');
  relative = !extracted.protocol && !extracted.slashes;
  url.slashes = extracted.slashes || relative && location.slashes;
  url.protocol = extracted.protocol || location.protocol || '';
  address = extracted.rest;

  //
  // When the authority component is absent the URL starts with a path
  // component.
  //
  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];

  for (; i < instructions.length; i++) {
    instruction = instructions[i];

    if (typeof instruction === 'function') {
      address = instruction(address);
      continue;
    }

    parse = instruction[0];
    key = instruction[1];

    if (parse !== parse) {
      url[key] = address;
    } else if ('string' === typeof parse) {
      if (~(index = address.indexOf(parse))) {
        if ('number' === typeof instruction[2]) {
          url[key] = address.slice(0, index);
          address = address.slice(index + instruction[2]);
        } else {
          url[key] = address.slice(index);
          address = address.slice(0, index);
        }
      }
    } else if ((index = parse.exec(address))) {
      url[key] = index[1];
      address = address.slice(0, index.index);
    }

    url[key] = url[key] || (
      relative && instruction[3] ? location[key] || '' : ''
    );

    //
    // Hostname, host and protocol should be lowercased so they can be used to
    // create a proper `origin`.
    //
    if (instruction[4]) url[key] = url[key].toLowerCase();
  }

  //
  // Also parse the supplied query string in to an object. If we're supplied
  // with a custom parser as function use that instead of the default build-in
  // parser.
  //
  if (parser) url.query = parser(url.query);

  //
  // If the URL is relative, resolve the pathname against the base URL.
  //
  if (
      relative
    && location.slashes
    && url.pathname.charAt(0) !== '/'
    && (url.pathname !== '' || location.pathname !== '')
  ) {
    url.pathname = resolve(url.pathname, location.pathname);
  }

  //
  // Default to a / for pathname if none exists. This normalizes the URL
  // to always have a /
  //
  if (url.pathname.charAt(0) !== '/' && url.hostname) {
    url.pathname = '/' + url.pathname;
  }

  //
  // We should not add port numbers if they are already the default port number
  // for a given protocol. As the host also contains the port number we're going
  // override it with the hostname which contains no port number.
  //
  if (!required(url.port, url.protocol)) {
    url.host = url.hostname;
    url.port = '';
  }

  //
  // Parse down the `auth` for the username and password.
  //
  url.username = url.password = '';
  if (url.auth) {
    instruction = url.auth.split(':');
    url.username = instruction[0] || '';
    url.password = instruction[1] || '';
  }

  url.origin = url.protocol && url.host && url.protocol !== 'file:'
    ? url.protocol +'//'+ url.host
    : 'null';

  //
  // The href is just the compiled result.
  //
  url.href = url.toString();
}

/**
 * This is convenience method for changing properties in the URL instance to
 * insure that they all propagate correctly.
 *
 * @param {String} part          Property we need to adjust.
 * @param {Mixed} value          The newly assigned value.
 * @param {Boolean|Function} fn  When setting the query, it will be the function
 *                               used to parse the query.
 *                               When setting the protocol, double slash will be
 *                               removed from the final url if it is true.
 * @returns {URL} URL instance for chaining.
 * @public
 */
function set(part, value, fn) {
  var url = this;

  switch (part) {
    case 'query':
      if ('string' === typeof value && value.length) {
        value = (fn || qs.parse)(value);
      }

      url[part] = value;
      break;

    case 'port':
      url[part] = value;

      if (!required(value, url.protocol)) {
        url.host = url.hostname;
        url[part] = '';
      } else if (value) {
        url.host = url.hostname +':'+ value;
      }

      break;

    case 'hostname':
      url[part] = value;

      if (url.port) value += ':'+ url.port;
      url.host = value;
      break;

    case 'host':
      url[part] = value;

      if (/:\d+$/.test(value)) {
        value = value.split(':');
        url.port = value.pop();
        url.hostname = value.join(':');
      } else {
        url.hostname = value;
        url.port = '';
      }

      break;

    case 'protocol':
      url.protocol = value.toLowerCase();
      url.slashes = !fn;
      break;

    case 'pathname':
    case 'hash':
      if (value) {
        var char = part === 'pathname' ? '/' : '#';
        url[part] = value.charAt(0) !== char ? char + value : value;
      } else {
        url[part] = value;
      }
      break;

    default:
      url[part] = value;
  }

  for (var i = 0; i < rules.length; i++) {
    var ins = rules[i];

    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
  }

  url.origin = url.protocol && url.host && url.protocol !== 'file:'
    ? url.protocol +'//'+ url.host
    : 'null';

  url.href = url.toString();

  return url;
}

/**
 * Transform the properties back in to a valid and full URL string.
 *
 * @param {Function} stringify Optional query stringify function.
 * @returns {String} Compiled version of the URL.
 * @public
 */
function toString(stringify) {
  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;

  var query
    , url = this
    , protocol = url.protocol;

  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';

  var result = protocol + (url.slashes ? '//' : '');

  if (url.username) {
    result += url.username;
    if (url.password) result += ':'+ url.password;
    result += '@';
  }

  result += url.host + url.pathname;

  query = 'object' === typeof url.query ? stringify(url.query) : url.query;
  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

  if (url.hash) result += url.hash;

  return result;
}

Url.prototype = { set: set, toString: toString };

//
// Expose the URL parser and some additional properties that might be useful for
// others or testing.
//
Url.extractProtocol = extractProtocol;
Url.location = lolcation;
Url.trimLeft = trimLeft;
Url.qs = qs;

module.exports = Url;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(62)))

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ AbstractBittorrentSite_BittorrentSite; });

// EXTERNAL MODULE: ./src/shared/types.ts + 5 modules
var types = __webpack_require__(0);

// EXTERNAL MODULE: external "Sizzle"
var external_Sizzle_ = __webpack_require__(2);
var external_Sizzle_default = /*#__PURE__*/__webpack_require__.n(external_Sizzle_);

// EXTERNAL MODULE: ./node_modules/url-join/lib/url-join.js
var url_join = __webpack_require__(20);
var url_join_default = /*#__PURE__*/__webpack_require__.n(url_join);

// EXTERNAL MODULE: ./node_modules/url-parse/index.js
var url_parse = __webpack_require__(4);
var url_parse_default = /*#__PURE__*/__webpack_require__.n(url_parse);

// EXTERNAL MODULE: ./node_modules/lodash-es/mergeWith.js
var mergeWith = __webpack_require__(279);

// EXTERNAL MODULE: ./node_modules/lodash-es/merge.js
var merge = __webpack_require__(86);

// EXTERNAL MODULE: ./node_modules/lodash-es/pick.js + 8 modules
var pick = __webpack_require__(280);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseGet.js
var _baseGet = __webpack_require__(55);

// CONCATENATED MODULE: ./node_modules/lodash-es/get.js


/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : Object(_baseGet["a" /* default */])(object, path);
  return result === undefined ? defaultValue : result;
}

/* harmony default export */ var lodash_es_get = (get);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSlice.js
/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

/* harmony default export */ var _baseSlice = (baseSlice);

// EXTERNAL MODULE: ./node_modules/lodash-es/_isIterateeCall.js
var _isIterateeCall = __webpack_require__(52);

// CONCATENATED MODULE: ./node_modules/lodash-es/_trimmedEndIndex.js
/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

/* harmony default export */ var _trimmedEndIndex = (trimmedEndIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseTrim.js


/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, _trimmedEndIndex(string) + 1).replace(reTrimStart, '')
    : string;
}

/* harmony default export */ var _baseTrim = (baseTrim);

// EXTERNAL MODULE: ./node_modules/lodash-es/isObject.js
var isObject = __webpack_require__(8);

// EXTERNAL MODULE: ./node_modules/lodash-es/isSymbol.js
var isSymbol = __webpack_require__(25);

// CONCATENATED MODULE: ./node_modules/lodash-es/toNumber.js




/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (Object(isSymbol["a" /* default */])(value)) {
    return NAN;
  }
  if (Object(isObject["a" /* default */])(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = Object(isObject["a" /* default */])(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = _baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

/* harmony default export */ var lodash_es_toNumber = (toNumber);

// CONCATENATED MODULE: ./node_modules/lodash-es/toFinite.js


/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = lodash_es_toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

/* harmony default export */ var lodash_es_toFinite = (toFinite);

// CONCATENATED MODULE: ./node_modules/lodash-es/toInteger.js


/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = lodash_es_toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

/* harmony default export */ var lodash_es_toInteger = (toInteger);

// CONCATENATED MODULE: ./node_modules/lodash-es/chunk.js




/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;

/**
 * Creates an array of elements split into groups the length of `size`.
 * If `array` can't be split evenly, the final chunk will be the remaining
 * elements.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to process.
 * @param {number} [size=1] The length of each chunk
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the new array of chunks.
 * @example
 *
 * _.chunk(['a', 'b', 'c', 'd'], 2);
 * // => [['a', 'b'], ['c', 'd']]
 *
 * _.chunk(['a', 'b', 'c', 'd'], 3);
 * // => [['a', 'b', 'c'], ['d']]
 */
function chunk(array, size, guard) {
  if ((guard ? Object(_isIterateeCall["a" /* default */])(array, size, guard) : size === undefined)) {
    size = 1;
  } else {
    size = nativeMax(lodash_es_toInteger(size), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size < 1) {
    return [];
  }
  var index = 0,
      resIndex = 0,
      result = Array(nativeCeil(length / size));

  while (index < length) {
    result[resIndex++] = _baseSlice(array, index, (index += size));
  }
  return result;
}

/* harmony default export */ var lodash_es_chunk = (chunk);

// EXTERNAL MODULE: ./src/shared/filter.ts + 4 modules
var shared_filter = __webpack_require__(1);

// EXTERNAL MODULE: ./src/userscript/lib/axios.ts
var axios = __webpack_require__(36);

// CONCATENATED MODULE: ./src/userscript/sites/schema/AbstractBittorrentSite.ts







// 适用于公网BT站点，同时也作为 所有站点方法 的基类
class AbstractBittorrentSite_BittorrentSite {
    constructor(config = {}, siteMetaData) {
        /**
         * 作为这个class类的基本属性，一般用在模板定义中
         * @protected
         */
        this.initConfig = {};
        this._runtime = {
            cacheRequest: new Map()
        };
        this.userConfig = config;
        this.siteMetaData = siteMetaData;
    }
    get config() {
        if (!this._config) {
            /**
             * 使用 lodash 的 mergeWith 来合并站点默认配置和用户配置
             * 以免 { ...data } 解包形式覆盖深层配置
             */
            this._config = Object(mergeWith["a" /* default */])(this.initConfig, this.siteMetaData, this.userConfig, 
            // @ts-ignore
            (objValue, srcValue, key) => {
                if (Array.isArray(objValue) || Array.isArray(srcValue)) {
                    if (['filters', 'switchFilters'].includes(key)) { // 不合并 filters，每次都用最后并入的
                        return srcValue;
                    }
                    else {
                        // @ts-ignore
                        return [].concat(srcValue, objValue).filter(x => typeof x !== 'undefined'); // 保证后并入的配置优先
                    }
                }
            });
            // 解密url加密过的站点
            if (this._config.url.startsWith('aHR0c')) {
                this._config.url = atob(this._config.url);
            }
            if (this._config.legacyUrl) {
                this._config.legacyUrl = this._config.legacyUrl.map(url => url.startsWith('aHR0c') ? atob(url) : url);
            }
            // 防止host信息缺失
            if (!this._config.host) {
                this._config.host = url_parse_default()(this._config.url).host;
            }
        }
        return this._config;
    }
    get activateUrl() {
        var _a;
        return ((_a = this.config.config) === null || _a === void 0 ? void 0 : _a.activateUrl) || this.config.url;
    }
    get categoryMap() {
        var _a;
        return (_a = this.getCategory(['Category', '类别'])) === null || _a === void 0 ? void 0 : _a.options;
    }
    getCategory(catName) {
        var _a, _b;
        const catNames = [].concat(catName);
        return (_b = (_a = this.config.search) === null || _a === void 0 ? void 0 : _a.categories) === null || _b === void 0 ? void 0 : _b.find((d) => catNames.includes(d.name));
    }
    transferPostData(params, transTo) {
        let postData = params;
        if (transTo !== 'raw') {
            if (transTo === 'form') {
                postData = new FormData();
            }
            else if (transTo === 'params') {
                postData = new URLSearchParams();
            }
            Object.keys(params).forEach(k => {
                postData.append(k, params[k]);
            });
        }
        return postData;
    }
    /**
     * 根据搜索筛选条件，生成 AxiosRequestConfig
     * @param filter
     */
    async transformSearchFilter(filter) {
        var _a, _b, _c, _d, _e, _f;
        const config = { params: {}, data: {} };
        const params = {};
        if (filter.keywords) {
            params[((_a = this.config.search) === null || _a === void 0 ? void 0 : _a.keywordsParam) || 'keywords'] = filter.keywords || '';
        }
        if (filter.extraParams) {
            for (let i = 0; i < ((_b = filter.extraParams) === null || _b === void 0 ? void 0 : _b.length); i++) {
                const { key, value } = filter.extraParams[i];
                if (key === '#changeDomain') { // 更换 baseURL
                    config.baseURL = value;
                }
                else if (key === '#changePath') {
                    config.url = value;
                }
                else { //  其他参数视为params
                    /**
                     * 如果传入的 value 是 Array，我们认为这是 cross 模式，并作相应处理
                     * 但是如果此时未在对应 category 中做相应定义声明的话，将直接把对应信息交给 axios，而不做额外处理
                     */
                    if (Array.isArray(value)) {
                        // 检索 key 的定义情况
                        const definedCategoryForKey = this.getCategory(key);
                        if (definedCategoryForKey === null || definedCategoryForKey === void 0 ? void 0 : definedCategoryForKey.cross) {
                            const crossKey = definedCategoryForKey.cross.key || key;
                            if ((definedCategoryForKey === null || definedCategoryForKey === void 0 ? void 0 : definedCategoryForKey.cross.mode) === 'append') {
                                value.forEach((v) => {
                                    params[`${crossKey}${v}`] = 1;
                                });
                                continue; // 跳过，不再将原始字段值插入params
                            }
                            else if ((definedCategoryForKey === null || definedCategoryForKey === void 0 ? void 0 : definedCategoryForKey.cross.mode) === 'appendQuote') {
                                value.forEach((v) => {
                                    params[`${crossKey}[${v}]`] = 1;
                                });
                                continue; // 跳过，不再将原始字段值插入params
                            }
                        }
                    }
                    params[key] = value;
                }
            }
        }
        if (((_e = (_d = (_c = this.config.search) === null || _c === void 0 ? void 0 : _c.requestConfig) === null || _d === void 0 ? void 0 : _d.method) === null || _e === void 0 ? void 0 : _e.toLowerCase()) === 'post') { // POST
            config.data = this.transferPostData(params, ((_f = this.config.search) === null || _f === void 0 ? void 0 : _f.requestConfig.transferPostData) || 'raw');
        }
        else { // GET
            config.params = params;
        }
        return config;
    }
    // noinspection JSUnusedGlobalSymbols
    /**
     * 种子搜索方法
     * @param filter
     */
    async searchTorrents(filter = {}) {
        var _a;
        // 根据配置和搜索关键词生成 AxiosRequestConfig
        const axiosConfig = Object(merge["a" /* default */])({ url: '/', responseType: 'document' }, (_a = this.config.search) === null || _a === void 0 ? void 0 : _a.requestConfig, // 使用默认配置覆盖垫片配置
        await this.transformSearchFilter(filter) // 根据搜索信息生成配置
        );
        // 请求页面并转化为document
        const req = await this.request({ ...axiosConfig, checkLogin: true });
        const rawTorrent = await this.transformSearchPage(req.data);
        return rawTorrent.map(t => this.fixParsedTorrent(t, { filter, axiosConfig }));
    }
    async request(axiosConfig) {
        // 统一设置一些 AxiosRequestConfig， 当作默认值
        axiosConfig.baseURL = axiosConfig.baseURL || this.activateUrl;
        axiosConfig.url = axiosConfig.url || '/';
        // console.log(axiosConfig);
        let req;
        try {
            req = await axios["a" /* default */].request(axiosConfig);
            // 全局性的替换 span.__cf_email__
            if (axiosConfig.responseType === 'document') {
                const doc = req.data;
                // 进行简单的检查，防止无意义的替换
                if (doc instanceof Document &&
                    doc.documentElement.outerHTML.search('__cf_email__')) {
                    const cfProtectSpan = external_Sizzle_default()('.__cf_email__', doc);
                    cfProtectSpan.forEach(element => {
                        element.replaceWith(Object(shared_filter["a" /* cfDecodeEmail */])(element.dataset.cfemail));
                    });
                }
                req.data = doc;
            }
        }
        catch (e) {
            req = e.response;
            if (req.status >= 400) {
                throw Error(`Network Error: ${req.status} ${req.statusText || ''}`.trim());
            }
        }
        if (axiosConfig.checkLogin && !this.loggedCheck(req)) {
            throw Error('未登录'); // FIXME i18n
        }
        // 将结果缓存到 _runtime.cacheRequest 以实现跨方法调用
        const requestCacheName = axiosConfig.requestName || axiosConfig.url;
        this._runtime.cacheRequest.set(requestCacheName, req);
        return req;
    }
    /**
     * @warning 此方法不可以在 getFieldData 的 filters 中使用，
     *          对于约定的 url, link 本方法会自动调用进行补全
     * @param uri
     * @param requestConfig
     */
    fixLink(uri, requestConfig) {
        let url = uri;
        if (uri.length > 0 && !uri.startsWith('magnet:')) {
            const baseUrl = requestConfig.baseURL || this.activateUrl;
            if (uri.startsWith('//')) {
                // 当 传入的uri 以 /{2,} 开头时，被转换成类似 https?:///xxxx/xxxx 的形式，
                // 虽不符合url规范，但是浏览器容错高，所以不用担心 2333
                const urlHelper = url_parse_default()(baseUrl);
                url = `${urlHelper.protocol}:${uri}`;
            }
            else if (uri.substr(0, 4) !== 'http') {
                url = url_join_default()(baseUrl, uri.replace(/^\./, ''));
            }
        }
        return url;
    }
    /**
     * getFieldData 的上层方法，目的是直接获取一批数据，并以字典形式返回
     * @param element
     * @param selectorGroup
     * @param fields
     * @protected
     */
    getFieldsData(element, selectorGroup, fields) {
        const ret = {};
        for (const [key, selector] of Object.entries(Object(pick["a" /* default */])(this.config.selector[selectorGroup], fields))) {
            ret[key] = this.getFieldData(element, selector);
        }
        return ret;
    }
    getFieldData(element, elementQuery) {
        var _a, _b, _c;
        const { selector } = elementQuery;
        let query = String((_a = elementQuery.text) !== null && _a !== void 0 ? _a : '');
        let selectorId = 0;
        if (selector) {
            const selectors = [].concat(selector);
            for (; selectorId < selectors.length; selectorId++) {
                const selector = selectors[selectorId];
                if (element instanceof Node) {
                    // 这里我们预定义一个特殊的 Css Selector，即不进行子元素选择
                    const another = (selector === ':self' ? element : external_Sizzle_default()(selector, element)[0]);
                    if (another) {
                        if (elementQuery.elementProcess) {
                            query = this.runQueryFilters(another, elementQuery.elementProcess);
                        }
                        else if (elementQuery.case) {
                            for (const [match, value] of Object.entries(elementQuery.case)) {
                                if (external_Sizzle_default.a.matchesSelector(another, match)) {
                                    query = value !== null && value !== void 0 ? value : '';
                                    break;
                                }
                            }
                        }
                        else if (elementQuery.data) {
                            query = (_b = another.dataset[elementQuery.data]) !== null && _b !== void 0 ? _b : '';
                        }
                        else if (elementQuery.attr) {
                            query = (_c = another.getAttribute(elementQuery.attr)) !== null && _c !== void 0 ? _c : '';
                        }
                        else {
                            query = another.innerText.replace(/\n/ig, ' ') || '';
                        }
                    }
                }
                else {
                    query = selector === ':self' ? element : lodash_es_get(element, selector);
                }
                // noinspection SuspiciousTypeOfGuard
                if (typeof query === 'string') {
                    query = query.trim();
                }
                if (query !== '') {
                    break;
                }
            }
        }
        if (elementQuery.switchFilters && elementQuery.switchFilters.length > 0) {
            /**
             * 当所有selector都未匹配时 selectorId = selectors.length，此时可能
             * 导致 switchFilters[selectorId] === undefined ，所以此时不应运行 switchFilters
             */
            if (selectorId < elementQuery.switchFilters.length) {
                query = this.runQueryFilters(query, elementQuery.switchFilters[selectorId]);
            }
        }
        else if (elementQuery.filters && elementQuery.filters.length > 0) {
            query = this.runQueryFilters(query, elementQuery.filters);
        }
        // noinspection SuspiciousTypeOfGuard
        if (typeof query === 'string') {
            query = query.trim(); // 去除空格
            if (/^-?\d+$/.test(query)) { // 尽可能的将返回值转成数字类型
                query = isNaN(parseInt(query)) ? 0 : parseInt(query);
            }
        }
        return query;
    }
    // noinspection JSMethodCanBeStatic
    runDefinedFilter(query, filter) {
        switch (filter.name) {
            case 'parseNumber': {
                return Object(shared_filter["d" /* findThenParseNumberString */])(query);
            }
            case 'parseSize': {
                return Object(shared_filter["e" /* findThenParseSizeString */])(query);
            }
            case 'parseTime': {
                return Object(shared_filter["i" /* parseValidTimeString */])(query, filter.args);
            }
            case 'parseTTL': {
                return Object(shared_filter["g" /* parseTimeToLive */])(query);
            }
            case 'querystring': {
                const queryName = filter.args[0];
                return url_parse_default()(query, true).query[queryName] || '';
            }
            default:
                return query;
        }
    }
    runQueryFilters(query, filters) {
        const realFilters = [].concat(filters);
        for (let i = 0; i < realFilters.length; i++) {
            const fn = realFilters[i];
            if (typeof fn === 'function') {
                query = fn(query);
            }
            else {
                query = this.runDefinedFilter(query, fn);
            }
        }
        return query;
    }
    /**
     * 登录检查方法，对于公开站点，该方法一定直接返回 True
     * @param raw
     */
    loggedCheck(raw) {
        return true;
    }
    /**
     * 如何解析 JSON 或者 Document，获得种子详情列表
     * @param doc
     */
    async transformSearchPage(doc) {
        var _a, _b;
        if (!((_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.search) === null || _b === void 0 ? void 0 : _b.rows)) {
            throw Error('列表选择器未定义');
        }
        const rowsSelector = this.config.selector.search.rows;
        const torrents = [];
        let trs;
        if (doc instanceof Document) {
            trs = external_Sizzle_default()(rowsSelector.selector, doc);
            if (rowsSelector.filter) {
                trs = rowsSelector.filter(trs);
            }
            else {
                /**
                 * 应对某些站点连用多个tr表示一个种子的情况，将多个tr使用 <div> 包裹成一个 Element，
                 * 这种情况下，子选择器就可以写成 `tr:nth-child(1) xxxx` 来精确
                 */
                const rowMergeDeep = rowsSelector.merge || 1;
                if (trs.length > 0 && rowMergeDeep > 1) {
                    const newTrs = [];
                    lodash_es_chunk(trs, rowMergeDeep).forEach(chunkTr => {
                        const wrapperDiv = doc.createElement('div');
                        chunkTr.forEach(tr => { wrapperDiv.appendChild(tr); });
                        newTrs.push(wrapperDiv);
                    });
                    trs = newTrs;
                }
            }
        }
        else {
            // 同样定义一个 :self 以防止对于JSON返回的情况下，所有items在顶层字典（实际是 Object[] ）下
            trs = rowsSelector.selector === ':self' ? doc : lodash_es_get(doc, rowsSelector.selector);
            if (rowsSelector.filter) {
                trs = rowsSelector.filter(trs);
            }
        }
        trs === null || trs === void 0 ? void 0 : trs.forEach((tr) => {
            torrents.push(this.parseRowToTorrent(tr));
        });
        return torrents;
    }
    fixParsedTorrent(torrent, requestConfig) {
        // 检查种子的id属性是否存在，如果不存在，则由 url, link 属性替代
        if (!torrent.id) {
            if (torrent.url) {
                torrent.id = torrent.url;
            }
            else if (torrent.link) {
                torrent.id = torrent.link;
            }
        }
        for (const [key, value] of Object.entries(torrent)) {
            let updateValue = value;
            if (key === 'url' || key === 'link') {
                // 将相对链接补齐至绝对链接地址
                updateValue = this.fixLink(value, requestConfig.axiosConfig);
            }
            else if (key === 'size' && typeof value === 'string') {
                // 将获取到的 size 从 string 转化为 bytes
                updateValue = Object(shared_filter["f" /* parseSizeString */])(value);
            }
            else if (key === 'time') {
                // 不指定时区的话默认按0时区处理
                updateValue = Object(shared_filter["h" /* parseTimeWithZone */])(value, this.config.timezoneOffset || '+0000');
            }
            else if (['id', 'size', 'seeders', 'leechers', 'completed', 'comments', 'category', 'status'].includes(key)) {
                // 其他一些能够为数字的统一转化为数字
                if (typeof updateValue === 'string') {
                    updateValue = updateValue.replace(/[, ]/ig, ''); // 统一处理 `1,024` `1 024` 之类的情况
                    if (/^-?\d+$/.test(updateValue)) { // 尽可能的将返回值转成数字类型
                        updateValue = isNaN(parseInt(updateValue)) ? 0 : parseInt(updateValue);
                    }
                }
            }
            /**
             * 对 Category 属性进行转化，则要求我们在 this.config.search.categories 中定义一个
             * { name: 'Category', options: {value: string|number, name: string}[] }
             */
            if (key === 'category' && this.categoryMap) {
                const CategoryData = this.categoryMap.find((d) => d.value === updateValue);
                if (CategoryData) {
                    updateValue = CategoryData.name;
                }
            }
            // @ts-ignore
            torrent[key] = updateValue;
        }
        return { ...torrent, source: Object(pick["a" /* default */])(this.config, ['name', 'schema', 'url', 'favicon', 'host']) };
    }
    parseRowToTorrent(row, torrent = {}) {
        var _a, _b;
        const leftKeys = Object.keys(this.config.selector.search).filter(key => {
            return ![
                'rows',
                'tags' // tags 转由 parseTagsFromRow 方法处理
            ].includes(key) && !(key in torrent);
        });
        torrent = {
            ...torrent,
            ...this.getFieldsData(row, 'search', leftKeys)
        };
        // 处理Tags
        if ((_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.search) === null || _b === void 0 ? void 0 : _b.tags) {
            torrent.tags = this.parseTagsFromRow(row);
        }
        // 处理下载进度
        if (!torrent.progress || !torrent.status) {
            torrent = { ...torrent, ...this.parseDownloadProcessFromRow(row) };
        }
        return torrent;
    }
    parseTagsFromRow(row) {
        const tags = [];
        const tagsQuerys = this.config.selector.search.tags;
        for (let i = 0; i < tagsQuerys.length; i++) {
            const tagsQuery = tagsQuerys[i];
            if (!tagsQuery.color) { // 补全 tags 的颜色信息
                if (Object.keys(types["a" /* ETorrentBaseTagColor */]).includes(tagsQuery.name)) {
                    // @ts-ignore
                    tagsQuery.color = types["a" /* ETorrentBaseTagColor */][tagsQuery.name];
                }
                else {
                    tagsQuery.color = '#ffc107';
                }
            }
            const { selector, name, color } = tagsQuerys[i];
            if (row instanceof Element) {
                if (external_Sizzle_default()(selector, row).length > 0) {
                    tags.push({ name, color });
                }
            }
            else {
                if (lodash_es_get(row, selector)) {
                    tags.push({ name, color });
                }
            }
        }
        return tags;
    }
    parseDownloadProcessFromRow(row) {
        return {};
    }
    async getTorrentPageLink(torrent) {
        return torrent.url;
    }
    async getTorrentDownloadLink(torrent) {
        var _a, _b, _c;
        if (!torrent.link && ((_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.detail) === null || _b === void 0 ? void 0 : _b.link)) {
            const { data } = await this.request({
                url: torrent.url,
                responseType: ((_c = this.config.detail) === null || _c === void 0 ? void 0 : _c.type) || 'document'
            });
            return this.getFieldData(data, this.config.selector.detail.link);
        }
        return torrent.link;
    }
}


/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ AbstractPrivateSite_PrivateSite; });

// EXTERNAL MODULE: ./src/userscript/sites/schema/AbstractBittorrentSite.ts + 8 modules
var AbstractBittorrentSite = __webpack_require__(5);

// EXTERNAL MODULE: ./node_modules/lodash-es/pick.js + 8 modules
var pick = __webpack_require__(280);

// EXTERNAL MODULE: ./node_modules/lodash-es/_arrayMap.js
var _arrayMap = __webpack_require__(26);

// EXTERNAL MODULE: ./node_modules/lodash-es/_MapCache.js + 14 modules
var _MapCache = __webpack_require__(34);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setCacheAdd.js
/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/* harmony default export */ var _setCacheAdd = (setCacheAdd);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setCacheHas.js
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

/* harmony default export */ var _setCacheHas = (setCacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_SetCache.js




/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new _MapCache["a" /* default */];
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;
SetCache.prototype.has = _setCacheHas;

/* harmony default export */ var _SetCache = (SetCache);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFindIndex.js
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ var _baseFindIndex = (baseFindIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsNaN.js
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/* harmony default export */ var _baseIsNaN = (baseIsNaN);

// CONCATENATED MODULE: ./node_modules/lodash-es/_strictIndexOf.js
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ var _strictIndexOf = (strictIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIndexOf.js




/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? _strictIndexOf(array, value, fromIndex)
    : _baseFindIndex(array, _baseIsNaN, fromIndex);
}

/* harmony default export */ var _baseIndexOf = (baseIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayIncludes.js


/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && _baseIndexOf(array, value, 0) > -1;
}

/* harmony default export */ var _arrayIncludes = (arrayIncludes);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayIncludesWith.js
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ var _arrayIncludesWith = (arrayIncludesWith);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseUnary.js
var _baseUnary = __webpack_require__(43);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cacheHas.js
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/* harmony default export */ var _cacheHas = (cacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIntersection.js







/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */
function baseIntersection(arrays, iteratee, comparator) {
  var includes = comparator ? _arrayIncludesWith : _arrayIncludes,
      length = arrays[0].length,
      othLength = arrays.length,
      othIndex = othLength,
      caches = Array(othLength),
      maxLength = Infinity,
      result = [];

  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee) {
      array = Object(_arrayMap["a" /* default */])(array, Object(_baseUnary["a" /* default */])(iteratee));
    }
    maxLength = nativeMin(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
      ? new _SetCache(othIndex && array)
      : undefined;
  }
  array = arrays[0];

  var index = -1,
      seen = caches[0];

  outer:
  while (++index < length && result.length < maxLength) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (!(seen
          ? _cacheHas(seen, computed)
          : includes(result, computed, comparator)
        )) {
      othIndex = othLength;
      while (--othIndex) {
        var cache = caches[othIndex];
        if (!(cache
              ? _cacheHas(cache, computed)
              : includes(arrays[othIndex], computed, comparator))
            ) {
          continue outer;
        }
      }
      if (seen) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ var _baseIntersection = (baseIntersection);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseRest.js
var _baseRest = __webpack_require__(38);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArrayLikeObject.js
var isArrayLikeObject = __webpack_require__(32);

// CONCATENATED MODULE: ./node_modules/lodash-es/_castArrayLikeObject.js


/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
  return Object(isArrayLikeObject["a" /* default */])(value) ? value : [];
}

/* harmony default export */ var _castArrayLikeObject = (castArrayLikeObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/intersection.js





/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = Object(_baseRest["a" /* default */])(function(arrays) {
  var mapped = Object(_arrayMap["a" /* default */])(arrays, _castArrayLikeObject);
  return (mapped.length && mapped[0] === arrays[0])
    ? _baseIntersection(mapped)
    : [];
});

/* harmony default export */ var lodash_es_intersection = (intersection);

// EXTERNAL MODULE: ./node_modules/lodash-es/merge.js
var merge = __webpack_require__(86);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseDifference.js







/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = Object(_arrayMap["a" /* default */])(values, Object(_baseUnary["a" /* default */])(iteratee));
  }
  if (comparator) {
    includes = _arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = _cacheHas;
    isCommon = false;
    values = new _SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ var _baseDifference = (baseDifference);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseFlatten.js + 2 modules
var _baseFlatten = __webpack_require__(58);

// CONCATENATED MODULE: ./node_modules/lodash-es/difference.js





/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = Object(_baseRest["a" /* default */])(function(array, values) {
  return Object(isArrayLikeObject["a" /* default */])(array)
    ? _baseDifference(array, Object(_baseFlatten["a" /* default */])(values, 1, isArrayLikeObject["a" /* default */], true))
    : [];
});

/* harmony default export */ var lodash_es_difference = (difference);

// CONCATENATED MODULE: ./src/userscript/sites/schema/AbstractPrivateSite.ts


class AbstractPrivateSite_PrivateSite extends AbstractBittorrentSite["default"] {
    /**
     * 获得当前站点最新的用户信息用于更新
     * 因为此处仅抛出 Error，所以所有继承的子类应该完全覆写
     * 这里获取 lastUserInfo 以及 保存/更新 UserInfo 均由调用的上层完成
     */
    async flushUserInfo(lastUserInfo = {}) {
        var _a, _b;
        if (!this.config.userInfo) {
            throw new Error('尚不支持'); // FIXME
        }
        else {
            let flushUserInfo = {};
            if (this.config.userInfo.pickLast) {
                flushUserInfo = { ...flushUserInfo, ...Object(pick["a" /* default */])(lastUserInfo, this.config.userInfo.pickLast) };
            }
            for (let i = 0; i < this.config.userInfo.process.length; i++) {
                const thisUserInfo = this.config.userInfo.process[i];
                // 检查相关元素是否已有
                const existField = lodash_es_intersection(thisUserInfo.fields, Object.keys(flushUserInfo));
                if (existField.length === thisUserInfo.fields.length) {
                    continue; // 如果全部数据都有则直接跳过本轮
                }
                // 更新请求字段，如果字段缺失则跳出循环
                const requestConfig = Object(merge["a" /* default */])({ url: '/', params: {}, responseType: 'document' }, thisUserInfo.requestConfig);
                if (thisUserInfo.assertion) {
                    for (const [requiredField, paramsKey] of Object.entries(thisUserInfo.assertion)) {
                        if (flushUserInfo[requiredField]) {
                            if ((_a = requestConfig.url) === null || _a === void 0 ? void 0 : _a.includes(`$${paramsKey}$`)) {
                                requestConfig.url = requestConfig.url.replace(`$${paramsKey}$`, flushUserInfo[requiredField]);
                            }
                            else {
                                requestConfig.params[paramsKey] = flushUserInfo[requiredField];
                            }
                        }
                        else {
                            throw new Error(`断言字段 ${requiredField} 缺失`);
                        }
                    }
                }
                if (((_b = requestConfig.method) === null || _b === void 0 ? void 0 : _b.toLowerCase()) === 'post') {
                    const transferPostData = requestConfig.transferPostData || 'raw';
                    requestConfig.data = this.transferPostData(requestConfig.params, transferPostData);
                    if (transferPostData !== 'raw') {
                        requestConfig.params = {}; // 清空 params 参数
                    }
                }
                const { data: dataDocument } = await this.request(requestConfig);
                flushUserInfo = {
                    ...flushUserInfo,
                    ...this.getFieldsData(dataDocument, 'userInfo', lodash_es_difference(thisUserInfo.fields, Object.keys(flushUserInfo)))
                };
            }
            return flushUserInfo;
        }
    }
    /**
     * 这是一个比较通用的检查是否登录方法，如果不行请考虑覆写扩展
     * @param {AxiosResponse} res
     */
    loggedCheck(res) {
        var _a;
        const request = res.request;
        try {
            if (/doLogin|login|verify|checkpoint|returnto/ig.test(request.responseURL)) {
                return false; // 检查最终的URL看是不是需要登陆
            }
            else if (res.headers.refresh && /\d+; url=.+(login|verify|checkpoint|returnto).+/ig.test(res.headers.refresh)) {
                return false; // 检查responseHeader有没有重定向
            }
            else {
                const responseText = request.responseType === 'document' ? (_a = request.responseXML) === null || _a === void 0 ? void 0 : _a.documentElement.outerHTML : request.responseText;
                if (typeof responseText === 'undefined') {
                    return false; // 检查最终的Text，如果什么都没有也可能说明需要登陆
                }
                else if (responseText.length < 800 && /login|auth_form|not authorized/.test(responseText)) {
                    return false; // 对Text进行检查，断言 “过短，且中间出现login等字段“ 说明可能需要登陆
                }
            }
        }
        catch (e) {
            // Catch Nothing
        }
        return true;
    }
}


/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50);


/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] || freeSelf || Function('return this')();

/* harmony default export */ __webpack_exports__["a"] = (root);


/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/* harmony default export */ __webpack_exports__["a"] = (isObject);


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GazelleJSONAPI; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_3__);




class GazelleJSONAPI extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super(...arguments);
        this.initConfig = {
            search: {
                keywordsParam: 'searchstr',
                requestConfig: {
                    url: '/ajax.php',
                    responseType: 'json',
                    params: {
                        action: 'browse'
                    }
                }
            },
            selector: {
                userInfo: {
                    // "/ajax.php?action=index"
                    id: {
                        selector: ['response.id']
                    },
                    name: {
                        selector: ['response.username']
                    },
                    messageCount: {
                        selector: ['response.notifications.messages']
                    },
                    uploaded: {
                        selector: ['response.userstats.uploaded']
                    },
                    downloaded: {
                        selector: ['response.userstats.downloaded']
                    },
                    ratio: {
                        selector: ['response.userstats.ratio']
                    },
                    levelName: {
                        selector: ['response.userstats.class']
                    },
                    // "/ajax.php?action=user&id=$user.id$"
                    joinTime: {
                        selector: ['response.stats.joinedDate'],
                        filters: [
                            (query) => Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(query).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(query).valueOf() : query
                        ]
                    },
                    seeding: {
                        selector: ['response.community.seeding']
                    },
                    // "/torrents.php?type=seeding&userid=$user.id$"
                    bonus: {
                        text: 'N/A'
                    }
                }
            }
        };
    }
    async requestApi(action, params) {
        return await this.request({ url: '/ajax.php', params: { action, ...params }, requestName: `/ajax.php?action=${action}` });
    }
    async requestApiInfo() {
        const { data: apiInfo } = await this.requestApi('index', {});
        return apiInfo;
    }
    async getAuthKey() {
        if (!this._authKey) {
            const apiInfo = await this.requestApiInfo();
            this._authKey = { authkey: apiInfo.response.authkey, passkey: apiInfo.response.passkey };
        }
        return this._authKey;
    }
    async transformUnGroupTorrent(group) {
        const { authkey, passkey } = await this.getAuthKey();
        return {
            id: group.torrentId,
            title: group.groupName,
            url: `/torrents.php?id=${group.groupId}&torrentid=${group.torrentId}`,
            link: `/torrents.php?action=download&id=${group.torrentId}&authkey=${authkey}&torrent_pass=${passkey}`,
            time: Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseTimeWithZone */ "h"])(group.groupTime, this.config.timezoneOffset),
            size: group.size,
            author: '',
            seeders: group.seeders,
            leechers: group.leechers,
            completed: group.snatches,
            comments: 0,
            tags: group.tags.map(tag => { return { name: tag }; }),
            category: group.category
        };
    }
    async transformGroupTorrent(group, torrent) {
        const { authkey, passkey } = await this.getAuthKey();
        return {
            id: torrent.torrentId,
            title: `${group.artist} - ${group.groupName} [${group.groupYear}] [${group.releaseType}]`,
            subTitle: `${torrent.format} / ${torrent.encoding} / ${torrent.media}` +
                (torrent.hasLog ? ` / Log(${torrent.logScore})` : '') +
                (torrent.hasCue ? ' / Cue' : '') +
                (torrent.remastered ? ` / ${torrent.remasterYear}` : '') +
                (torrent.scene ? ' / Scene' : '') +
                (torrent.isFreeleech || torrent.isNeutralLeech || torrent.isPersonalFreeleech ? ' / Freeleech' : ''),
            url: `/torrents.php?id=${group.groupId}&torrentid=${torrent.torrentId}`,
            link: `/torrents.php?action=download&id=${torrent.torrentId}&authkey=${authkey}&torrent_pass=${passkey}`,
            time: Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseTimeWithZone */ "h"])(torrent.time, this.config.timezoneOffset),
            size: torrent.size,
            author: '',
            seeders: torrent.seeders,
            leechers: torrent.leechers,
            completed: torrent.snatches,
            category: group.releaseType || ''
        };
    }
    async transformSearchPage(doc) {
        const torrents = [];
        if (doc.status === 'success') {
            const rows = doc.response.results;
            for (const group of rows) {
                if ('torrents' in group) { // is groupBrowseResult
                    for (const rawTorrent of group.torrents) {
                        const torrent = await this.transformGroupTorrent(group, rawTorrent);
                        torrents.push(torrent);
                    }
                }
                else {
                    const torrent = await this.transformUnGroupTorrent(group);
                    torrents.push(torrent);
                }
            }
        }
        return torrents;
    }
    async flushUserInfo(lastUserInfo = {}) {
        let userInfo = {};
        userInfo = { ...userInfo, ...await this.getUserBaseInfo() };
        if (userInfo.id) {
            userInfo = {
                ...userInfo,
                ...await this.getUserExtendInfo(userInfo.id),
                ...await this.getUserSeedingTorrents(userInfo.id)
            };
        }
        return userInfo;
    }
    async getUserBaseInfo() {
        const apiInfo = await this.requestApiInfo();
        return this.getFieldsData(apiInfo, 'userInfo', ['id', 'name', 'messageCount', 'uploaded', 'downloaded', 'ratio', 'levelName']);
    }
    async getUserExtendInfo(userId) {
        const apiUser = await this.requestApi('user', { id: userId });
        return this.getFieldsData(apiUser, 'userInfo', ['joinTime', 'seeding']);
    }
    async getUserSeedingTorrents(userId) {
        var _a, _b;
        const userSeedingTorrent = { seedingSize: 0 };
        const { data: seedPage } = await this.request({ url: '/torrents.php', params: { type: 'seeding', userid: userId }, responseType: 'document' });
        const rows = sizzle__WEBPACK_IMPORTED_MODULE_3___default()('tr.torrent_row > td.nobr', seedPage);
        rows.forEach(element => {
            userSeedingTorrent.seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(element.innerText.trim());
        });
        if ((_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.userInfo) === null || _b === void 0 ? void 0 : _b.bonus) {
            userSeedingTorrent.bonus = this.getFieldData(seedPage, this.config.selector.userInfo.bonus);
        }
        return userSeedingTorrent;
    }
}


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/* harmony default export */ __webpack_exports__["a"] = (isArray);


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(71);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/isFunction.js
var isFunction = __webpack_require__(39);

// EXTERNAL MODULE: ./node_modules/lodash-es/_root.js
var _root = __webpack_require__(7);

// CONCATENATED MODULE: ./node_modules/lodash-es/_coreJsData.js


/** Used to detect overreaching core-js shims. */
var coreJsData = _root["a" /* default */]['__core-js_shared__'];

/* harmony default export */ var _coreJsData = (coreJsData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isMasked.js


/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/* harmony default export */ var _isMasked = (isMasked);

// EXTERNAL MODULE: ./node_modules/lodash-es/isObject.js
var isObject = __webpack_require__(8);

// EXTERNAL MODULE: ./node_modules/lodash-es/_toSource.js
var _toSource = __webpack_require__(19);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsNative.js





/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var _baseIsNative_hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(_baseIsNative_hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!Object(isObject["a" /* default */])(value) || _isMasked(value)) {
    return false;
  }
  var pattern = Object(isFunction["a" /* default */])(value) ? reIsNative : reIsHostCtor;
  return pattern.test(Object(_toSource["a" /* default */])(value));
}

/* harmony default export */ var _baseIsNative = (baseIsNative);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getValue.js
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/* harmony default export */ var _getValue = (getValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getNative.js



/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = _getValue(object, key);
  return _baseIsNative(value) ? value : undefined;
}

/* harmony default export */ var _getNative = __webpack_exports__["a"] = (getNative);


/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/_Symbol.js
var _Symbol = __webpack_require__(15);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getRawTag.js


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _getRawTag_hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = _Symbol["a" /* default */] ? _Symbol["a" /* default */].toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = _getRawTag_hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/* harmony default export */ var _getRawTag = (getRawTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/_objectToString.js
/** Used for built-in method references. */
var _objectToString_objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var _objectToString_nativeObjectToString = _objectToString_objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return _objectToString_nativeObjectToString.call(value);
}

/* harmony default export */ var _objectToString = (objectToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGetTag.js




/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var _baseGetTag_symToStringTag = _Symbol["a" /* default */] ? _Symbol["a" /* default */].toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (_baseGetTag_symToStringTag && _baseGetTag_symToStringTag in Object(value))
    ? _getRawTag(value)
    : _objectToString(value);
}

/* harmony default export */ var _baseGetTag = __webpack_exports__["a"] = (baseGetTag);


/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/* harmony default export */ __webpack_exports__["a"] = (isObjectLike);


/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);


/** Built-in value references. */
var Symbol = _root_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].Symbol;

/* harmony default export */ __webpack_exports__["a"] = (Symbol);


/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return NexusPHP; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1);
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(86);
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(279);







const baseLinkQuery = {
    selector: 'a[href*="download.php?id="]:has(> img[alt="download"])',
    attr: 'href'
};
class NexusPHP extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super(...arguments);
        /**
         * NexusPHP 模板默认配置，对于大多数NPHP站点都通用
         * @protected
         */
        this.initConfig = {
            timezoneOffset: '+0800',
            search: {
                keywordsParam: 'search',
                requestConfig: {
                    url: '/torrents.php',
                    params: { notnewword: 1 }
                }
            },
            userInfo: {
                /**
                 * 我们认为NPHP站的 id 的情况永远不变（实质上对于所有站点都应该是这样的）
                 * 部分 NPHP 站点允许修改 name，所以 name 不能视为不变 ！！！
                 */
                pickLast: ['id'],
                process: []
            },
            selector: {
                search: {
                    // row 等信息由 transformSearchPage 根据搜索结果自动生成
                    link: baseLinkQuery,
                    url: {
                        ...baseLinkQuery,
                        filters: [
                            (query) => '/details.php?id=' + url_parse__WEBPACK_IMPORTED_MODULE_3___default()(query, true).query.id
                        ]
                    },
                    id: {
                        ...baseLinkQuery,
                        filters: [
                            (query) => url_parse__WEBPACK_IMPORTED_MODULE_3___default()(query, true).query.id
                        ]
                    },
                    progress: {
                        text: 0
                    },
                    status: {
                        text: _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].unknown
                    },
                    category: {
                        text: 'Other',
                        selector: ['a:first'],
                        elementProcess: (element) => {
                            let category = 'Other';
                            const categoryImgAnother = element.querySelector('img:nth-child(1)'); // img:first
                            if (categoryImgAnother) {
                                category = categoryImgAnother.getAttribute('title') ||
                                    categoryImgAnother.getAttribute('alt') ||
                                    category;
                            }
                            else {
                                return element.textContent || category;
                            }
                            return category.trim();
                        }
                    },
                    time: {
                        text: 0,
                        elementProcess: (element) => {
                            let time = 0;
                            try {
                                const AccurateTimeAnother = element.querySelector('span[title], time[title]');
                                if (AccurateTimeAnother) {
                                    time = AccurateTimeAnother.getAttribute('title');
                                }
                                else {
                                    time = Object(_shared_filter__WEBPACK_IMPORTED_MODULE_5__[/* extractContent */ "c"])(element.innerHTML.replace('<br>', ' '));
                                }
                                if (time.match(/\d+[分时天月年]/g)) {
                                    time = Object(_shared_filter__WEBPACK_IMPORTED_MODULE_5__[/* parseTimeToLive */ "g"])(time);
                                }
                                else {
                                    time = Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(time).valueOf();
                                }
                            }
                            catch (e) { }
                            return time;
                        }
                    },
                    tags: [
                        // 这里的 selector仅放最基础的（NPHP默认），如果各站有更改请在对应站点修改，不要污染全局空间
                        // 因为 tags是会 concat 接起来的
                        { name: 'Free', selector: 'img.pro_free' },
                        { name: '2xFree', selector: 'img.pro_free2up' },
                        { name: '2xUp', selector: 'img.pro_2up' },
                        { name: '2x50%', selector: 'img.pro_50pctdown2up' },
                        { name: '30%', selector: 'img.pro_30pctdown' },
                        { name: '50%', selector: 'img.pro_50pctdown' }
                    ]
                },
                detail: {},
                userInfo: {
                    // "page": "/index.php",
                    id: {
                        selector: ["a[href*='userdetails.php'][class*='Name']:first", "a[href*='userdetails.php']:first"],
                        attr: 'href',
                        filters: [{ name: 'querystring', args: ['id'] }]
                    },
                    name: {
                        selector: ["a[href*='userdetails.php'][class*='Name']:first", "a[href*='userdetails.php']:first"]
                    },
                    messageCount: {
                        text: 0,
                        selector: "td[style*='background: red'] a[href*='messages.php']",
                        filters: [
                            (query) => {
                                const queryMatch = String(query || '').match(/(\d+)/); // query 有时会直接传入 0
                                return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
                            }
                        ]
                    },
                    // "page": "/userdetails.php?id=$user.id$",
                    uploaded: {
                        selector: ["td.rowhead:contains('传输') + td", "td.rowhead:contains('傳送') + td", "td.rowhead:contains('Transfers') + td", "td.rowfollow:contains('分享率')"],
                        filters: [
                            (query) => {
                                const queryMatch = query.replace(/,/g, '').match(/(上[传傳]量|Uploaded).+?([\d.]+ ?[ZEPTGMK]?i?B)/);
                                return (queryMatch && queryMatch.length === 3) ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_5__[/* parseSizeString */ "f"])(queryMatch[2]) : 0;
                            }
                        ]
                    },
                    downloaded: {
                        selector: ["td.rowhead:contains('传输') + td", "td.rowhead:contains('傳送') + td", "td.rowhead:contains('Transfers') + td", "td.rowfollow:contains('分享率')"],
                        filters: [
                            (query) => {
                                const queryMatch = query.replace(/,/g, '').match(/(下[载載]量|Downloaded).+?([\d.]+ ?[ZEPTGMK]?i?B)/);
                                return (queryMatch && queryMatch.length === 3) ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_5__[/* parseSizeString */ "f"])(queryMatch[2]) : 0;
                            }
                        ]
                    },
                    levelName: {
                        selector: ["td.rowhead:contains('等级') + td > img", "td.rowhead:contains('等級')  + td > img", "td.rowhead:contains('Class')  + td > img"],
                        attr: 'title'
                    },
                    bonus: {
                        selector: ["td.rowhead:contains('魔力') + td", "td.rowhead:contains('Karma'):contains('Points') + td", "td.rowhead:contains('麦粒') + td", "td.rowfollow:contains('魔力值')"],
                        filters: [
                            (query) => {
                                query = query.replace(/,/g, '');
                                if (/(魅力值|沙粒|魔力值):?/.test(query)) {
                                    query = query.match(/(魅力值|沙粒|魔力值).+?([\d.]+)/)[2];
                                    return parseFloat(query);
                                }
                                else if (/[\d.]+/.test(query)) {
                                    return parseFloat(query.match(/[\d.]+/)[0]);
                                }
                                return query;
                            }
                        ]
                    },
                    joinTime: {
                        selector: ["td.rowhead:contains('加入日期') + td", "td.rowhead:contains('Join'):contains('date') + td"],
                        filters: [
                            (query) => {
                                query = query.split(' (')[0];
                                return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(query).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(query).valueOf() : query;
                            }
                        ]
                    }
                    /**
                     * 如果指定 seeding 和 seedingSize，则会尝试从 "/userdetails.php?id=$user.id$" 页面获取，
                     * 否则将使用方法 getUserSeedingStatus 进行获取
                     *
                     */
                    // seeding: { }
                    // seedingSize: { }
                }
            }
        };
    }
    async transformSearchPage(doc) {
        // 返回是 Document 的情况才自动生成
        if (doc instanceof Document) {
            // 如果配置文件没有传入 search 的选择器，则我们自己生成
            const legacyTableSelector = 'table.torrents:last';
            // 对于NPHP，一般来说，表的第一行应该是标题行，即 `> tbody > tr:nth-child(1)` ，但是也有部分站点为 `> thead > tr`
            const legacyTableHasThead = sizzle__WEBPACK_IMPORTED_MODULE_2___default()(`${legacyTableSelector} > thead > tr`, doc).length > 0;
            if (!this.config.selector.search.rows) {
                this.config.selector.search.rows = {
                    // 对于有thead的站点，认为 > tbody > tr 均为种子信息，而无 thead 的站点则为 > tbody > tr:gt(0)
                    selector: `${legacyTableSelector} > tbody > tr` + (legacyTableHasThead ? '' : ':gt(0)')
                };
            }
            // 开始遍历我们的head行，并设置其他参数
            const headSelector = legacyTableSelector + (legacyTableHasThead ? ' > thead > tr > th' : ' > tbody > tr:eq(0) > td');
            const headAnother = sizzle__WEBPACK_IMPORTED_MODULE_2___default()(headSelector, doc);
            headAnother.forEach((element, elementIndex) => {
                // 比较好处理的一些元素，都是可以直接获取的
                let updateSelectorField;
                if (/(cat|类型|類型|分类|分類|Тип)/gi.test(element.innerText)) {
                    updateSelectorField = 'category';
                }
                else {
                    for (const [dectField, dectSelector] of Object.entries({
                        author: 'a[href*="sort=9"]',
                        comments: 'img.comments',
                        completed: 'img.snatched',
                        leechers: 'img.leechers',
                        seeders: 'img.seeders',
                        size: 'img.size',
                        time: 'img.time' // 发布时间 （仅生成 selector， 后面会覆盖）
                    })) {
                        if (sizzle__WEBPACK_IMPORTED_MODULE_2___default()(dectSelector, element).length > 0) {
                            updateSelectorField = dectField;
                        }
                    }
                }
                if (updateSelectorField) {
                    // @ts-ignore
                    this.config.selector.search[updateSelectorField] = Object(lodash_es__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"])({
                        selector: [`> td:eq(${elementIndex})`]
                    }, 
                    // @ts-ignore
                    (this.config.selector.search[updateSelectorField] || {}));
                }
            });
        }
        // !!! 其他一些比较难处理的，我们把他 hack 到 parseRowToTorrent 中 !!!
        return super.transformSearchPage(doc);
    }
    parseRowToTorrent(row) {
        let torrent = super.parseRowToTorrent(row);
        // 处理标题、副标题
        if (!torrent.title || !torrent.subTitle) {
            torrent = Object.assign(torrent, this.parseTorrentTitleFromRow(row));
        }
        return torrent;
    }
    // 处理标题、副标题
    parseTorrentTitleFromRow(row) {
        var _a, _b, _c, _d, _e, _f;
        const testSelectors = [
            "a[href*='hit'][title]",
            "a[href*='hit']:has(b)"
        ];
        let titleAnother;
        for (let i = 0; i < testSelectors.length; i++) {
            const testTitleAnother = sizzle__WEBPACK_IMPORTED_MODULE_2___default()(testSelectors[i], row);
            if (testTitleAnother.length > 0) {
                titleAnother = testTitleAnother[0];
                break;
            }
        }
        // 没有 titleAnother 则直接返回，不继续对 title和 subTitle 进行查找
        if (!titleAnother) {
            return {};
        }
        let title = (titleAnother.getAttribute('title') || titleAnother.textContent || '').trim();
        if ((_c = (_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.search) === null || _b === void 0 ? void 0 : _b.title) === null || _c === void 0 ? void 0 : _c.filters) {
            title = this.runQueryFilters(title, (_f = (_e = (_d = this.config.selector) === null || _d === void 0 ? void 0 : _d.search) === null || _e === void 0 ? void 0 : _e.title) === null || _f === void 0 ? void 0 : _f.filters);
        }
        return {
            title,
            subTitle: this.parseTorrentSubTitleFromTitleAnother(titleAnother, row)
        };
    }
    parseTorrentSubTitleFromTitleAnother(titleAnother, row) {
        var _a, _b, _c, _d, _e, _f;
        let subTitle = '';
        try {
            const testSubTitle = titleAnother.parentElement.innerHTML.split('<br>');
            if (testSubTitle && testSubTitle.length > 1) {
                subTitle = Object(_shared_filter__WEBPACK_IMPORTED_MODULE_5__[/* extractContent */ "c"])(testSubTitle[testSubTitle.length - 1]).trim();
            }
            if ((_c = (_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.search) === null || _b === void 0 ? void 0 : _b.subTitle) === null || _c === void 0 ? void 0 : _c.filters) {
                subTitle = this.runQueryFilters(subTitle, (_f = (_e = (_d = this.config.selector) === null || _d === void 0 ? void 0 : _d.search) === null || _e === void 0 ? void 0 : _e.subTitle) === null || _f === void 0 ? void 0 : _f.filters);
            }
        }
        catch (e) { }
        return subTitle;
    }
    async flushUserInfo(lastUserInfo = {}) {
        let flushUserInfo = await super.flushUserInfo() || {};
        let userId;
        if (flushUserInfo && flushUserInfo.id) {
            userId = flushUserInfo.id;
        }
        else {
            // 如果没有 id 信息，则访问一次 index.php
            userId = await this.getUserIdFromSite();
        }
        flushUserInfo.id = userId;
        // 导入基本 Details 页面获取到的用户信息
        flushUserInfo = Object.assign(flushUserInfo, await this.getUserInfoFromDetailsPage(userId));
        // 导入用户做种信息
        if (typeof flushUserInfo.seeding === 'undefined' || typeof flushUserInfo.seedingSize === 'undefined') {
            flushUserInfo = Object(lodash_es__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"])(flushUserInfo, await this.getUserSeedingStatus(userId), (objValue, srcValue) => {
                return objValue > 0 ? objValue : srcValue;
            });
        }
        return flushUserInfo;
    }
    async getUserIdFromSite() {
        var _a, _b;
        const { data: indexDocument } = await this.request({ url: '/index.php', responseType: 'document' });
        const userId = this.getFieldData(indexDocument, (_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.userInfo) === null || _b === void 0 ? void 0 : _b.id);
        return parseInt(userId);
    }
    async requestUserDetailsPage(userId) {
        const { data: userDetailDocument } = await this.request({
            url: '/userdetails.php',
            params: { id: userId },
            responseType: 'document',
            checkLogin: true
        });
        return userDetailDocument;
    }
    async getUserInfoFromDetailsPage(userId) {
        const userDetailDocument = await this.requestUserDetailsPage(userId);
        const detailsPageAttrs = [
            'name', 'messageCount', 'uploaded', 'downloaded',
            'levelName', 'bonus', 'joinTime', 'seeding', 'seedingSize'
        ];
        return this.getFieldsData(userDetailDocument, 'userInfo', detailsPageAttrs);
    }
    /**
     * 鉴于NexusPHP这里使用ajax交互，如果强行指定 responseType: 'document' ，
     * 由于返回字段并不是 valid-html, 此时会解析失败（即 data = undefined ），
     * 所以此处不指定 responseType，而是返回文本形式的 string，交由 getUserSeedingStatus
     * 生成 Document
     *
     * @param userId
     * @param type
     * @protected
     */
    async requestUserSeedingPage(userId, type = 'seeding') {
        const { data } = await this.request({
            url: '/getusertorrentlistajax.php',
            params: { userid: userId, type }
        });
        return data || null;
    }
    countSeedingStatusFromDocument(userSeedingDocument) {
        const seedStatus = { seeding: 0, seedingSize: 0 };
        const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('table:last tr:not(:eq(0))', userSeedingDocument);
        if (trAnothers.length > 0) {
            seedStatus.seeding = trAnothers.length;
            // 根据自动判断应该用 td.rowfollow:eq(?)
            let sizeIndex = 2;
            const tdAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('> td', trAnothers[0]);
            for (let i = 0; i < tdAnothers.length; i++) {
                if (_shared_filter__WEBPACK_IMPORTED_MODULE_5__[/* sizePattern */ "j"].test(tdAnothers[i].innerText)) {
                    sizeIndex = i;
                    break;
                }
            }
            trAnothers.forEach(trAnother => {
                const sizeSelector = sizzle__WEBPACK_IMPORTED_MODULE_2___default()(`td.rowfollow:eq(${sizeIndex})`, trAnother)[0];
                seedStatus.seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_5__[/* parseSizeString */ "f"])(sizeSelector.innerText.trim());
            });
        }
        return seedStatus;
    }
    async getUserSeedingStatus(userId) {
        let seedStatus = { seeding: 0, seedingSize: 0 };
        const userSeedingRequestString = await this.requestUserSeedingPage(userId);
        if (userSeedingRequestString) {
            const userSeedingDocument = Object(_shared_filter__WEBPACK_IMPORTED_MODULE_5__[/* createDocument */ "b"])(userSeedingRequestString);
            seedStatus = this.countSeedingStatusFromDocument(userSeedingDocument);
        }
        return seedStatus;
    }
}


/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseGetTag.js + 2 modules
var _baseGetTag = __webpack_require__(13);

// EXTERNAL MODULE: ./node_modules/lodash-es/isObjectLike.js
var isObjectLike = __webpack_require__(14);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsArguments.js



/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == argsTag;
}

/* harmony default export */ var _baseIsArguments = (baseIsArguments);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArguments.js



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var isArguments_hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {
  return Object(isObjectLike["a" /* default */])(value) && isArguments_hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/* harmony default export */ var lodash_es_isArguments = __webpack_exports__["a"] = (isArguments);


/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectorSearchProgress", function() { return selectorSearchProgress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectorSearchStatus", function() { return selectorSearchStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

// HDHOME 中的 selector.search.progress 以及 selector.search.status 被其他站公用
const selectorSearchProgress = {
    selector: ['> td:eq(8)'],
    filters: [
        (query) => query === '-' ? 0 : parseFloat(query)
    ]
};
const selectorSearchStatus = {
    selector: ['> td:eq(8)'],
    filters: [
        (query) => {
            if (query === '-') {
                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
            }
            else {
                const process = parseFloat(query);
                switch (true) {
                    case /Noseed|未做种/.test(query):
                        return process >= 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive;
                    case /Seeding|做种中/.test(query):
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                    case /Leeching|下载中/.test(query):
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                    default:
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                }
            }
        }
    ]
};
const siteMetadata = {
    name: 'HDHome',
    schema: 'NexusPHP',
    url: 'https://hdhome.org/',
    tags: ['影视', '综合'],
    collaborator: 'tongyifan',
    search: {
        categories: [
            {
                name: '分区',
                key: '#changePath',
                options: [
                    { name: '种子区', value: '/torrents.php' },
                    { name: 'LIVE区', value: '/live.php' }
                ]
            },
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 411, name: 'Movies SD' },
                    { value: 412, name: 'Movies IPad' },
                    { value: 413, name: 'Movies 720p' },
                    { value: 414, name: 'Movies 1080p' },
                    { value: 415, name: 'Movies REMUX' },
                    { value: 450, name: 'Movies Bluray' },
                    { value: 499, name: 'Movies UHD Blu-ray' },
                    { value: 416, name: 'Movies 2160p' },
                    { value: 417, name: 'Doc SD' },
                    { value: 418, name: 'Doc IPad' },
                    { value: 419, name: 'Doc 720p' },
                    { value: 420, name: 'Doc 1080p' },
                    { value: 421, name: 'Doc REMUX' },
                    { value: 451, name: 'Doc Bluray' },
                    { value: 500, name: 'Doc UHD Blu-ray' },
                    { value: 422, name: 'Doc 2160p' },
                    { value: 423, name: 'TVMusic 720p' },
                    { value: 424, name: 'TVMusic 1080i' },
                    { value: 425, name: 'TVShow SD' },
                    { value: 426, name: 'TVShow IPad' },
                    { value: 471, name: 'TVShow IPad' },
                    { value: 427, name: 'TVShow 720p' },
                    { value: 428, name: 'TVShow 1080i' },
                    { value: 429, name: 'TVShow 1080p' },
                    { value: 430, name: 'TVShow REMUX' },
                    { value: 452, name: 'TVShows Bluray' },
                    { value: 431, name: 'TVShow 2160p' },
                    { value: 432, name: 'TVSeries SD' },
                    { value: 433, name: 'TVSeries IPad' },
                    { value: 434, name: 'TVSeries 720p' },
                    { value: 435, name: 'TVSeries 1080i' },
                    { value: 436, name: 'TVSeries 1080p' },
                    { value: 437, name: 'TVSeries REMUX' },
                    { value: 453, name: 'TVSereis Bluray' },
                    { value: 438, name: 'TVSeries 2160p' },
                    { value: 502, name: 'TVSeries 4K Bluray' },
                    { value: 439, name: 'Musics APE' },
                    { value: 440, name: 'Musics FLAC' },
                    { value: 441, name: 'Musics MV' },
                    { value: 442, name: 'Sports 720p' },
                    { value: 443, name: 'Sports 1080i' },
                    { value: 444, name: 'Anime SD' },
                    { value: 445, name: 'Anime IPad' },
                    { value: 446, name: 'Anime 720p' },
                    { value: 447, name: 'Anime 1080p' },
                    { value: 448, name: 'Anime REMUX' },
                    { value: 454, name: 'Anime Bluray' },
                    { value: 409, name: 'Misc' },
                    { value: 449, name: 'Anime 2160p' },
                    { value: 501, name: 'Anime UHD Blu-ray' }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '类别（LIVE区）',
                key: 'cat',
                notes: '请先在“分区”中选择LIVE区，才能正确使用该分类',
                options: [
                    { value: 494, name: 'Movies Bluray' },
                    { value: 495, name: 'Doc Bluray' },
                    { value: 469, name: 'TVMusic 1080i' },
                    { value: 472, name: 'TVShow 720p' },
                    { value: 473, name: 'TVShow 1080i' },
                    { value: 474, name: 'TVShow 1080p' },
                    { value: 475, name: 'TVShow REMUX' },
                    { value: 496, name: 'TVShows Bluray' },
                    { value: 476, name: 'TVShow 2160p' },
                    { value: 477, name: 'TVSeries SD' },
                    { value: 478, name: 'TVSeries IPad' },
                    { value: 479, name: 'TVSeries 720p' },
                    { value: 480, name: 'TVSeries 1080p' },
                    { value: 481, name: 'TVSeries REMUX' },
                    { value: 497, name: 'TVSereis Bluray' },
                    { value: 482, name: 'TVSeries 2160p' },
                    { value: 483, name: 'Musics APE' },
                    { value: 484, name: 'Musics FLAC' },
                    { value: 485, name: 'Musics MV' },
                    { value: 486, name: 'Sports 720p' },
                    { value: 487, name: 'Sports 1080i' },
                    { value: 488, name: 'Anime SD' },
                    { value: 489, name: 'Anime IPad' },
                    { value: 490, name: 'Anime 720p' },
                    { value: 491, name: 'Anime 1080p' },
                    { value: 492, name: 'Anime REMUX' },
                    { value: 498, name: 'Anime Bluray' },
                    { value: 493, name: 'Anime 2160p' }
                ]
            }
        ]
    },
    selector: {
        search: {
            progress: selectorSearchProgress,
            status: selectorSearchStatus,
            tags: [
                { selector: 'img.hitandrun', name: 'H&R', color: '#000' },
                { selector: 'span.tgf', name: '官方', color: '#06c' },
                { selector: 'span.tyc', name: '原创', color: '#085' },
                { selector: 'span.tgz', name: '官字', color: '#530' },
                { selector: 'span.tdb', name: 'Dolby Vision', color: '#358' },
                { selector: 'span.thdr10', name: 'HDR10', color: '#9a3' },
                { selector: 'span.thdrm', name: 'HDR10+', color: '#9b5' },
                { selector: 'span.tgy', name: '国配', color: '#f96' },
                { selector: 'span.tyy', name: '粤配', color: '#f66' },
                { selector: 'span.tzz', name: '中字', color: '#9c0' },
                { selector: 'span.tjz', name: 'Excl.' },
                { selector: 'span.txz', name: '限转', color: '#c03' },
                { selector: 'span.tdiy', name: 'DIY', color: '#993' },
                { selector: 'span.tsf', name: '首发', color: '#339' },
                { selector: 'span.tyq', name: '应求', color: '#f90' },
                { selector: 'span.tm0', name: '零魔', color: '#096' }
            ]
        }
    }
};


/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/* harmony default export */ __webpack_exports__["a"] = (toSource);


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (name, context, definition) {
  if ( true && module.exports) module.exports = definition();
  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
})('urljoin', this, function () {

  function normalize (strArray) {
    var resultArray = [];
    if (strArray.length === 0) { return ''; }

    if (typeof strArray[0] !== 'string') {
      throw new TypeError('Url must be a string. Received ' + strArray[0]);
    }

    // If the first part is a plain protocol, we combine it with the next part.
    if (strArray[0].match(/^[^/:]+:\/*$/) && strArray.length > 1) {
      var first = strArray.shift();
      strArray[0] = first + strArray[0];
    }

    // There must be two or three slashes in the file protocol, two slashes in anything else.
    if (strArray[0].match(/^file:\/\/\//)) {
      strArray[0] = strArray[0].replace(/^([^/:]+):\/*/, '$1:///');
    } else {
      strArray[0] = strArray[0].replace(/^([^/:]+):\/*/, '$1://');
    }

    for (var i = 0; i < strArray.length; i++) {
      var component = strArray[i];

      if (typeof component !== 'string') {
        throw new TypeError('Url must be a string. Received ' + component);
      }

      if (component === '') { continue; }

      if (i > 0) {
        // Removing the starting slashes for each component but the first.
        component = component.replace(/^[\/]+/, '');
      }
      if (i < strArray.length - 1) {
        // Removing the ending slashes for each component but the last.
        component = component.replace(/[\/]+$/, '');
      } else {
        // For the last component we will combine multiple slashes to a single one.
        component = component.replace(/[\/]+$/, '/');
      }

      resultArray.push(component);

    }

    var str = resultArray.join('/');
    // Each input component is now separated by a single slash except the possible first plain protocol part.

    // remove trailing slash before parameters or hash
    str = str.replace(/\/(\?|&|#[^!])/g, '$1');

    // replace ? in parameters with &
    var parts = str.split('?');
    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');

    return str;
  }

  return function () {
    var input;

    if (typeof arguments[0] === 'object') {
      input = arguments[0];
    } else {
      input = [].slice.call(arguments);
    }

    return normalize(input);
  };

});


/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);
/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40);



/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && Object(_isLength_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(value.length) && !Object(_isFunction_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(value);
}

/* harmony default export */ __webpack_exports__["a"] = (isArrayLike);


/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/* harmony default export */ __webpack_exports__["a"] = (isIndex);


/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/* harmony default export */ __webpack_exports__["a"] = (eq);


/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/* harmony default export */ __webpack_exports__["a"] = (isPrototype);


/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);



/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(value) == symbolTag);
}

/* harmony default export */ __webpack_exports__["a"] = (isSymbol);


/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (arrayMap);


/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/isArray.js
var isArray = __webpack_require__(10);

// EXTERNAL MODULE: ./node_modules/lodash-es/isSymbol.js
var isSymbol = __webpack_require__(25);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isKey.js



/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (Object(isArray["a" /* default */])(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || Object(isSymbol["a" /* default */])(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/* harmony default export */ var _isKey = (isKey);

// EXTERNAL MODULE: ./node_modules/lodash-es/_MapCache.js + 14 modules
var _MapCache = __webpack_require__(34);

// CONCATENATED MODULE: ./node_modules/lodash-es/memoize.js


/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache["a" /* default */]);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = _MapCache["a" /* default */];

/* harmony default export */ var lodash_es_memoize = (memoize);

// CONCATENATED MODULE: ./node_modules/lodash-es/_memoizeCapped.js


/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = lodash_es_memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

/* harmony default export */ var _memoizeCapped = (memoizeCapped);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stringToPath.js


/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = _memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/* harmony default export */ var _stringToPath = (stringToPath);

// EXTERNAL MODULE: ./node_modules/lodash-es/_Symbol.js
var _Symbol = __webpack_require__(15);

// EXTERNAL MODULE: ./node_modules/lodash-es/_arrayMap.js
var _arrayMap = __webpack_require__(26);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseToString.js





/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol["a" /* default */] ? _Symbol["a" /* default */].prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (Object(isArray["a" /* default */])(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return Object(_arrayMap["a" /* default */])(value, baseToString) + '';
  }
  if (Object(isSymbol["a" /* default */])(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ var _baseToString = (baseToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/toString.js


/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString_toString(value) {
  return value == null ? '' : _baseToString(value);
}

/* harmony default export */ var lodash_es_toString = (toString_toString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_castPath.js





/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (Object(isArray["a" /* default */])(value)) {
    return value;
  }
  return _isKey(value, object) ? [value] : _stringToPath(lodash_es_toString(value));
}

/* harmony default export */ var _castPath = __webpack_exports__["a"] = (castPath);


/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheClear.js
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/* harmony default export */ var _listCacheClear = (listCacheClear);

// EXTERNAL MODULE: ./node_modules/lodash-es/eq.js
var eq = __webpack_require__(23);

// CONCATENATED MODULE: ./node_modules/lodash-es/_assocIndexOf.js


/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (Object(eq["a" /* default */])(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/* harmony default export */ var _assocIndexOf = (assocIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheDelete.js


/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/* harmony default export */ var _listCacheDelete = (listCacheDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheGet.js


/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/* harmony default export */ var _listCacheGet = (listCacheGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheHas.js


/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return _assocIndexOf(this.__data__, key) > -1;
}

/* harmony default export */ var _listCacheHas = (listCacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheSet.js


/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

/* harmony default export */ var _listCacheSet = (listCacheSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_ListCache.js






/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear;
ListCache.prototype['delete'] = _listCacheDelete;
ListCache.prototype.get = _listCacheGet;
ListCache.prototype.has = _listCacheHas;
ListCache.prototype.set = _listCacheSet;

/* harmony default export */ var _ListCache = __webpack_exports__["a"] = (ListCache);


/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);



/* Built-in method references that are verified to be native. */
var Map = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_root_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"], 'Map');

/* harmony default export */ __webpack_exports__["a"] = (Map);


/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectorSearchProgress", function() { return selectorSearchProgress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectorSearchStatus", function() { return selectorSearchStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectorUserInfoSeeding", function() { return selectorUserInfoSeeding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectorUserInfoSeedingSize", function() { return selectorUserInfoSeedingSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HDChina; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _schema_NexusPHP__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_3__);




// HDChina 中的部分选择器和处理方法被其他站公用
const selectorSearchProgress = {
    selector: ['.progress:eq(0) > div'],
    attr: 'style',
    filters: [
        (query) => {
            const queryMatch = query.match(/width:([ \d.]+)%/);
            return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
        }
    ]
};
const selectorSearchStatus = {
    text: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown,
    selector: ['.progress:eq(0) > div'],
    case: {
        '.progress_seeding': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
        '.progress_completed': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed,
        '.progress_no_downloading': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive,
        '.progress_downloading': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading
    }
};
const selectorUserInfoSeeding = {
    selector: ['td:has( > div#ka1)'],
    filters: [
        (query) => {
            const queryMatch = query.match(/([\d.]+)个种子/);
            return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
        }
    ]
};
const selectorUserInfoSeedingSize = {
    selector: ['td:has( > div#ka1)'],
    filters: [
        (query) => {
            const queryMatch = query.match(/共计([\d.]+ ?[ZEPTGMK]?i?B)/);
            return (queryMatch && queryMatch.length >= 2) ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(queryMatch[1]) : 0;
        }
    ]
};
const siteMetadata = {
    name: 'HDChina',
    description: '高清影音人士分享乐园',
    url: 'https://hdchina.org/',
    tags: ['影视', '音乐', '纪录片', '综合'],
    schema: 'NexusPHP',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 20, name: '原盘(Full BD)' },
                    { value: 17, name: '电影Movie(1080p)' },
                    { value: 16, name: '电影Movie(1080i)' },
                    { value: 9, name: '电影Movie(720p)' },
                    { value: 13, name: '欧美剧(EU/US TV series)' },
                    { value: 25, name: '中港台剧集(Chinese TV series)' },
                    { value: 26, name: '韩剧(Kor Drama)' },
                    { value: 24, name: '日剧(Jpn Drama)' },
                    { value: 21, name: '欧美剧集包(EU/US TV series pack)' },
                    { value: 22, name: '中港台剧集包(Chinese TV series pack)' },
                    { value: 23, name: '日韩剧集包(JPN/KOR drama pack)' },
                    { value: 27, name: 'iPad视频(iPad Video)' },
                    { value: 5, name: '纪录片(Documentary)' },
                    { value: 15, name: '体育节目(Sports)' },
                    { value: 14, name: '动画片(Animation)' },
                    { value: 401, name: '综艺(TV Shows)' },
                    { value: 402, name: '演唱会(Vocal Concert)' },
                    { value: 406, name: 'MV(Music Video)' },
                    { value: 408, name: '音乐(Music)' },
                    { value: 19, name: '补充音轨(Audio Track)' },
                    { value: 405, name: '戏剧(Drama)' },
                    { value: 404, name: '书籍(Book)' },
                    { value: 409, name: '其他(Other)' },
                    { value: 410, name: '4K UltraHD' },
                    { value: 411, name: '旅游(Travel)' },
                    { value: 412, name: '饮食(Food)' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: selectorSearchProgress,
            status: selectorSearchStatus,
            tags: [
                { selector: "img[src*='pic/share_rule_1.gif']", name: 'Excl.' } // 禁转
            ]
        },
        userInfo: {
            // 如果页面能直接获取到的话
            seeding: selectorUserInfoSeeding,
            seedingSize: selectorUserInfoSeedingSize
        }
    }
};
class HDChina extends _schema_NexusPHP__WEBPACK_IMPORTED_MODULE_2__["default"] {
    async requestUserSeedingPage(userId, type = 'seeding') {
        const userDetailsPage = this._runtime.cacheRequest.get('/userdetails.php');
        const csrfAnother = sizzle__WEBPACK_IMPORTED_MODULE_3___default()("meta[name='x-csrf']", userDetailsPage.data);
        if (csrfAnother.length > 0) {
            const csrf = csrfAnother[0].getAttribute('content');
            const { data } = await this.request({
                method: 'post',
                url: '/ajax_getusertorrentlist.php',
                // responseType: 'json',
                data: new URLSearchParams([
                    ['userid', String(userId)],
                    ['type', 'seeding'],
                    ['csrf', csrf]
                ])
            });
            return data.message;
        }
        return null;
    }
}


/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Gazelle; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1);







class Gazelle extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super(...arguments);
        this.initConfig = {
            search: {
                keywordsParam: 'searchstr',
                requestConfig: {
                    url: '/torrents.php',
                    responseType: 'document',
                    params: { searchsubmit: 1 }
                }
            },
            userInfo: {
                process: [
                    {
                        requestConfig: { url: '/index.php', responseType: 'document' },
                        fields: ['id', 'name', 'messageCount']
                    },
                    {
                        requestConfig: { url: '/user.php', params: { /* id: flushUserInfo.id */}, responseType: 'document' },
                        assertion: { id: 'id' },
                        fields: [
                            'uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime',
                            'seeding', 'seedingSize'
                        ]
                    }
                ]
            },
            selector: {
                search: {
                    rows: { selector: 'table.torrent_table:last > tbody > tr:gt(0)' },
                    id: {
                        selector: "a[href*='torrents.php?id=']",
                        attr: 'href',
                        filters: [
                            (query) => {
                                const urlParse = url_parse__WEBPACK_IMPORTED_MODULE_3___default()(query, true);
                                return urlParse.query.torrentid || urlParse.query.id;
                            }
                        ]
                    },
                    title: { selector: "a[href*='torrents.php?id=']" },
                    url: { selector: "a[href*='torrents.php?id=']", attr: 'href' },
                    link: { selector: "a[href*='torrents.php?action=download'][title='Download']:first", attr: 'href' },
                    // TODO category: {}
                    time: {
                        elementProcess: (element) => {
                            const AccurateTimeAnother = element.querySelector('span[title], time[title]');
                            if (AccurateTimeAnother) {
                                return AccurateTimeAnother.getAttribute('title') + ':00';
                            }
                            else if (element.getAttribute('title')) {
                                return element.getAttribute('title') + ':00';
                            }
                            else {
                                return element.innerText.trim() + ':00';
                            }
                        }
                    },
                    progress: { text: 0 },
                    status: { text: _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].unknown }
                },
                userInfo: {
                    // "page": "/index.php",
                    id: {
                        selector: ["a.username[href*='user.php']:first"],
                        attr: 'href',
                        filters: [
                            (query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_3___default()(query, true).query.id || '')
                        ]
                    },
                    name: {
                        selector: ["a.username[href*='user.php']:first"]
                    },
                    messageCount: {
                        selector: ["div.alert-bar > a[href*='inbox.php']", "div.alertbar > a[href*='inbox.php']"],
                        filters: [
                            (query) => {
                                const queryMatch = query.match(/(\d+)/);
                                return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
                            }
                        ]
                    },
                    // "page": "/user.php?id=$user.id$",
                    uploaded: {
                        selector: "div:contains('Stats') + ul.stats > li:contains('Uploaded')",
                        filters: [
                            (query) => {
                                const queryMatch = query.replace(/,/g, '').match(/Upload.+?([\d.]+ ?[ZEPTGMK]?i?B)/);
                                return (queryMatch && queryMatch.length >= 2) ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_6__[/* parseSizeString */ "f"])(queryMatch[1]) : 0;
                            }
                        ]
                    },
                    downloaded: {
                        selector: "div:contains('Stats') + ul.stats > li:contains('Downloaded')",
                        filters: [
                            (query) => {
                                const queryMatch = query.replace(/,/g, '').match(/Download.+?([\d.]+ ?[ZEPTGMK]?i?B)/);
                                return (queryMatch && queryMatch.length >= 2) ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_6__[/* parseSizeString */ "f"])(queryMatch[1]) : 0;
                            }
                        ]
                    },
                    ratio: {
                        selector: "div:contains('Stats') + ul.stats > li:contains('Ratio:')",
                        filters: [
                            (query) => {
                                const queryMatch = query.replace(/,/g, '').match(/Ratio.+?([\d.]+)/);
                                return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
                            }
                        ]
                    },
                    levelName: {
                        selector: "div:contains('Personal') + ul.stats > li:contains('Class:')",
                        filters: [
                            (query) => {
                                const queryMatch = query.match(/Class:.+?(.+)/);
                                return (queryMatch && queryMatch.length >= 2) ? queryMatch[1] : '';
                            }
                        ]
                    },
                    bonus: {
                        selector: ["div:contains('Stats') + ul.stats > li:contains('Bonus Points:')", "div:contains('Stats') + ul.stats > li:contains('SeedBonus:')"],
                        filters: [
                            (query) => {
                                query = query.replace(/,/g, '');
                                const queryMatch = query.match(/Bonus Points.+?([\d.]+)/) || query.match(/SeedBonus.+?([\d.]+)/);
                                return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
                            }
                        ]
                    },
                    joinTime: {
                        selector: ["div:contains('Stats') + ul.stats > li:contains('Joined:') > span"],
                        elementProcess: (element) => {
                            const query = (element.getAttribute('title') || element.innerText).trim();
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])(query).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])(query).valueOf() : query;
                        }
                    }
                },
                detail: {}
            }
        };
    }
    async transformSearchPage(doc) {
        var _a, _b;
        // 如果配置文件没有传入 search 的选择器，则我们自己生成
        const legacyTableSelector = 'table.torrent_table:last';
        // 生成 rows的
        if (!((_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.search) === null || _b === void 0 ? void 0 : _b.rows)) {
            this.config.selector.search.rows = { selector: `${legacyTableSelector} > tbody > tr:gt(0)` };
        }
        // 对于 Gazelle ，一般来说，表的第一行应该是标题行，即 `> tbody > tr:nth-child(1)`
        const tableHeadAnother = sizzle__WEBPACK_IMPORTED_MODULE_2___default()(`${legacyTableSelector} > tbody > tr:first > td`, doc);
        tableHeadAnother.forEach((element, elementIndex) => {
            for (const [dectField, dectSelector] of Object.entries({
                time: "a[href*='order_by=time']",
                size: "a[href*='order_by=size']",
                seeders: "a[href*='order_by=seeders']",
                leechers: "a[href*='order_by=leechers']",
                completed: "a[href*='order_by=snatched']" // 完成数
            })) {
                if (sizzle__WEBPACK_IMPORTED_MODULE_2___default()(dectSelector, element).length > 0) {
                    // @ts-ignore
                    this.config.selector.search[dectField] = Object(lodash_es__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])({
                        selector: [`> td:eq(${elementIndex})`]
                    }, 
                    // @ts-ignore
                    (this.config.selector.search[dectField] || {}));
                }
            }
        });
        // 遍历数据行
        const torrents = [];
        const trs = sizzle__WEBPACK_IMPORTED_MODULE_2___default()(this.config.selector.search.rows.selector, doc);
        for (let i = 0; i < trs.length; i++) {
            const tr = trs[i];
            // 对 url 和 link 结果做个检查，检查通过的再进入 parseRowToTorrent
            const url = this.getFieldData(tr, this.config.selector.search.url);
            const link = this.getFieldData(tr, this.config.selector.search.link);
            if (url && link) {
                const torrent = this.parseRowToTorrent(tr, { url, link });
                torrents.push(torrent);
            }
        }
        return torrents;
    }
}


/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);



/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(value) && Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(value);
}

/* harmony default export */ __webpack_exports__["a"] = (isArrayLikeObject);


/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectorSearchProgress", function() { return selectorSearchProgress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectorSearchStatus", function() { return selectorSearchStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

// TJUPT 中的 selector.search.progress 以及 selector.search.status 被其他站公用
const selectorSearchProgress = {
    selector: ['div.probar_b1, div.probar_b2, div.probar_b3'],
    attr: 'style',
    filters: [
        (query) => {
            query = query || '';
            const queryMatch = query.match(/width:([ \d.]+)%/);
            return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
        }
    ]
};
const selectorSearchStatus = {
    selector: ['div[class*="probar_a"]'],
    attr: 'class',
    filters: [
        (query) => {
            const queryMatch = query.match(/probar_[ab]([123])/);
            if (queryMatch && queryMatch.length >= 2) {
                switch (parseInt(queryMatch[1])) {
                    case 1: // "正在下载，进度至"
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                    case 2: // "已下载，正在做种";
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                    case 3: // "下载过，已完成" or "下载过，未完成，进度至"
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive;
                }
            }
            return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
        }
    ]
};
const siteMetadata = {
    name: '北洋园',
    schema: 'NexusPHP',
    url: 'https://tjupt.org/',
    description: '北洋园PT',
    tags: ['教育网', '影视', '综合'],
    collaborator: 'tongyifan',
    legacyUrl: [
        'https://www.tjupt.org/'
    ],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '电影' },
                    { value: 402, name: '剧集' },
                    { value: 403, name: '综艺' },
                    { value: 404, name: '资料' },
                    { value: 405, name: '动漫' },
                    { value: 406, name: '音乐' },
                    { value: 407, name: '体育' },
                    { value: 408, name: '软件' },
                    { value: 409, name: '游戏' },
                    { value: 411, name: '纪录片' },
                    { value: 412, name: '移动视频' },
                    { value: 410, name: '其他' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: selectorSearchProgress,
            status: selectorSearchStatus
        }
    }
};


/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/_getNative.js + 4 modules
var _getNative = __webpack_require__(12);

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeCreate.js


/* Built-in method references that are verified to be native. */
var nativeCreate = Object(_getNative["a" /* default */])(Object, 'create');

/* harmony default export */ var _nativeCreate = (nativeCreate);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashClear.js


/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
  this.size = 0;
}

/* harmony default export */ var _hashClear = (hashClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashDelete.js
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ var _hashDelete = (hashDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashGet.js


/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _hashGet_hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return _hashGet_hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/* harmony default export */ var _hashGet = (hashGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashHas.js


/** Used for built-in method references. */
var _hashHas_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _hashHas_hasOwnProperty = _hashHas_objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate ? (data[key] !== undefined) : _hashHas_hasOwnProperty.call(data, key);
}

/* harmony default export */ var _hashHas = (hashHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashSet.js


/** Used to stand-in for `undefined` hash values. */
var _hashSet_HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (_nativeCreate && value === undefined) ? _hashSet_HASH_UNDEFINED : value;
  return this;
}

/* harmony default export */ var _hashSet = (hashSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Hash.js






/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear;
Hash.prototype['delete'] = _hashDelete;
Hash.prototype.get = _hashGet;
Hash.prototype.has = _hashHas;
Hash.prototype.set = _hashSet;

/* harmony default export */ var _Hash = (Hash);

// EXTERNAL MODULE: ./node_modules/lodash-es/_ListCache.js + 6 modules
var _ListCache = __webpack_require__(28);

// EXTERNAL MODULE: ./node_modules/lodash-es/_Map.js
var _Map = __webpack_require__(29);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheClear.js




/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash,
    'map': new (_Map["a" /* default */] || _ListCache["a" /* default */]),
    'string': new _Hash
  };
}

/* harmony default export */ var _mapCacheClear = (mapCacheClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isKeyable.js
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/* harmony default export */ var _isKeyable = (isKeyable);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getMapData.js


/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return _isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/* harmony default export */ var _getMapData = (getMapData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheDelete.js


/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = _getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ var _mapCacheDelete = (mapCacheDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheGet.js


/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return _getMapData(this, key).get(key);
}

/* harmony default export */ var _mapCacheGet = (mapCacheGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheHas.js


/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return _getMapData(this, key).has(key);
}

/* harmony default export */ var _mapCacheHas = (mapCacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheSet.js


/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = _getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

/* harmony default export */ var _mapCacheSet = (mapCacheSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_MapCache.js






/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear;
MapCache.prototype['delete'] = _mapCacheDelete;
MapCache.prototype.get = _mapCacheGet;
MapCache.prototype.has = _mapCacheHas;
MapCache.prototype.set = _mapCacheSet;

/* harmony default export */ var _MapCache = __webpack_exports__["a"] = (MapCache);


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* eslint-disable node/no-deprecated-api */



var buffer = __webpack_require__(77)
var Buffer = buffer.Buffer

var safer = {}

var key

for (key in buffer) {
  if (!buffer.hasOwnProperty(key)) continue
  if (key === 'SlowBuffer' || key === 'Buffer') continue
  safer[key] = buffer[key]
}

var Safer = safer.Buffer = {}
for (key in Buffer) {
  if (!Buffer.hasOwnProperty(key)) continue
  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue
  Safer[key] = Buffer[key]
}

safer.Buffer.prototype = Buffer.prototype

if (!Safer.from || Safer.from === Uint8Array.from) {
  Safer.from = function (value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value)
    }
    if (value && typeof value.length === 'undefined') {
      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)
    }
    return Buffer(value, encodingOrOffset, length)
  }
}

if (!Safer.alloc) {
  Safer.alloc = function (size, fill, encoding) {
    if (typeof size !== 'number') {
      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size)
    }
    if (size < 0 || size >= 2 * (1 << 30)) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"')
    }
    var buf = Buffer(size)
    if (!fill || fill.length === 0) {
      buf.fill(0)
    } else if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
    return buf
  }
}

if (!safer.kStringMaxLength) {
  try {
    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength
  } catch (e) {
    // we can't determine kStringMaxLength in environments where process.binding
    // is unsupported, so let's not set it
  }
}

if (!safer.constants) {
  safer.constants = {
    MAX_LENGTH: safer.kMaxLength
  }
  if (safer.kStringMaxLength) {
    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength
  }
}

module.exports = safer

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(63)))

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(61);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios_lib_core_createError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37);
/* harmony import */ var axios_lib_core_createError__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios_lib_core_createError__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var axios_lib_core_settle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66);
/* harmony import */ var axios_lib_core_settle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios_lib_core_settle__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var axios_lib_helpers_buildURL__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48);
/* harmony import */ var axios_lib_helpers_buildURL__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(axios_lib_helpers_buildURL__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var axios_lib_helpers_parseHeaders__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68);
/* harmony import */ var axios_lib_helpers_parseHeaders__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(axios_lib_helpers_parseHeaders__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var axios_lib_core_buildFullPath__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(67);
/* harmony import */ var axios_lib_core_buildFullPath__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(axios_lib_core_buildFullPath__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var axios_lib_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(11);
/* harmony import */ var axios_lib_utils__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(axios_lib_utils__WEBPACK_IMPORTED_MODULE_6__);
// @ts-nocheck







/**
 * this adapter is edited from https://github.com/Trim21/axios-userscript-adapter
 * @param config
 */
axios__WEBPACK_IMPORTED_MODULE_0___default.a.defaults.adapter = function (config) {
    return new Promise((resolve, reject) => {
        let requestData = config.data;
        const requestHeaders = config.headers;
        if (axios_lib_utils__WEBPACK_IMPORTED_MODULE_6___default.a.isFormData(requestData)) {
            delete requestHeaders["Content-Type"]; // Let the browser set it
        }
        // HTTP basic authentication
        if (config.auth) {
            const username = config.auth.username || "";
            const password = config.auth.password || "";
            requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
        }
        // Handle low level network errors
        const onerror = function handleError() {
            // Real errors are hidden from us by the browser
            // onerror should only fire if it's a network error
            reject(axios_lib_core_createError__WEBPACK_IMPORTED_MODULE_1___default()("Network Error", config));
        };
        // Handle timeout
        const ontimeout = function handleTimeout() {
            reject(axios_lib_core_createError__WEBPACK_IMPORTED_MODULE_1___default()("timeout of " + config.timeout + "ms exceeded", config, "ECONNABORTED"));
        };
        // Remove Content-Type if data is undefined
        axios_lib_utils__WEBPACK_IMPORTED_MODULE_6___default.a.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === "undefined" && key.toLowerCase() === "content-type") {
                // Remove Content-Type if data is undefined
                delete requestHeaders[key];
            }
        });
        if (requestData === undefined) {
            requestData = null;
        }
        // Send the request
        // Listen for ready state
        const onload = function handleLoad(resp) {
            // Prepare the response
            const responseHeaders = "responseHeaders" in resp ? axios_lib_helpers_parseHeaders__WEBPACK_IMPORTED_MODULE_4___default()(resp.responseHeaders) : null;
            const responseData = !config.responseType || config.responseType === "text" ? resp.responseText : resp.response;
            const response = {
                data: responseData,
                status: resp.status,
                statusText: resp.statusText,
                headers: responseHeaders,
                config: config,
                request: {
                    // can't got real XMLHttpRequest object, only some property is available
                    responseURL: resp.finalUrl,
                    status: resp.status,
                    statusText: resp.statusText,
                    responseXML: resp.responseXML,
                    responseText: resp.responseText
                },
            };
            axios_lib_core_settle__WEBPACK_IMPORTED_MODULE_2___default()(resolve, reject, response);
        };
        if (config.cancelToken) {
            // Handle cancellation
            config.cancelToken.promise.then(function onCanceled(cancel) {
                reject(cancel);
                // Clean up request
            });
        }
        const method = (config.method || 'GET').toUpperCase();
        if (method === "UNLINK" || method === "PURGE" || method === "LINK") {
            reject(axios_lib_core_createError__WEBPACK_IMPORTED_MODULE_1___default()(`${method} is not a supported method by GM_xmlHttpRequest`, config));
        }
        else {
            GM_xmlhttpRequest({
                method,
                url: axios_lib_helpers_buildURL__WEBPACK_IMPORTED_MODULE_3___default()(axios_lib_core_buildFullPath__WEBPACK_IMPORTED_MODULE_5___default()(config.baseURL, config.url), config.params, config.paramsSerializer),
                responseType: config.responseType,
                headers: requestHeaders,
                data: requestData,
                timeout: config.timeout,
                ontimeout,
                onload,
                onerror
            });
        }
    });
};
axios__WEBPACK_IMPORTED_MODULE_0___default.a.defaults.withCredentials = true;
/* harmony default export */ __webpack_exports__["a"] = (axios__WEBPACK_IMPORTED_MODULE_0___default.a);


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(101);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51);
/* harmony import */ var _overRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59);
/* harmony import */ var _setToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(57);




/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return Object(_setToString_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(Object(_overRest_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(func, start, _identity_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]), func + '');
}

/* harmony default export */ __webpack_exports__["a"] = (baseRest);


/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);



/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/* harmony default export */ __webpack_exports__["a"] = (isFunction);


/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/* harmony default export */ __webpack_exports__["a"] = (isLength);


/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);


/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]) {
    Object(_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

/* harmony default export */ __webpack_exports__["a"] = (baseAssignValue);


/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83);



/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"];

/* harmony default export */ __webpack_exports__["a"] = (isBuffer);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(64)(module)))

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/* harmony default export */ __webpack_exports__["a"] = (baseUnary);


/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(25);


/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ __webpack_exports__["a"] = (toKey);


/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseGetTag.js + 2 modules
var _baseGetTag = __webpack_require__(13);

// EXTERNAL MODULE: ./node_modules/lodash-es/isLength.js
var isLength = __webpack_require__(40);

// EXTERNAL MODULE: ./node_modules/lodash-es/isObjectLike.js
var isObjectLike = __webpack_require__(14);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsTypedArray.js




/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return Object(isObjectLike["a" /* default */])(value) &&
    Object(isLength["a" /* default */])(value.length) && !!typedArrayTags[Object(_baseGetTag["a" /* default */])(value)];
}

/* harmony default export */ var _baseIsTypedArray = (baseIsTypedArray);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseUnary.js
var _baseUnary = __webpack_require__(43);

// EXTERNAL MODULE: ./node_modules/lodash-es/_nodeUtil.js
var _nodeUtil = __webpack_require__(70);

// CONCATENATED MODULE: ./node_modules/lodash-es/isTypedArray.js




/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? Object(_baseUnary["a" /* default */])(nodeIsTypedArray) : _baseIsTypedArray;

/* harmony default export */ var lodash_es_isTypedArray = __webpack_exports__["a"] = (isTypedArray);


/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12);


var defineProperty = (function() {
  try {
    var func = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* harmony default export */ __webpack_exports__["a"] = (defineProperty);


/***/ }),
/* 47 */,
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);



/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/* harmony default export */ __webpack_exports__["a"] = (createAssigner);


/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/* harmony default export */ __webpack_exports__["a"] = (freeGlobal);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(62)))

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/* harmony default export */ __webpack_exports__["a"] = (identity);


/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);





/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(object) && Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return Object(_eq_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(object[index], value);
  }
  return false;
}

/* harmony default export */ __webpack_exports__["a"] = (isIterateeCall);


/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* harmony default export */ __webpack_exports__["a"] = (overArg);


/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23);



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && Object(_eq_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(objValue, value)) ||
      (value === undefined && !(key in object))) {
    Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(object, key, value);
  }
}

/* harmony default export */ __webpack_exports__["a"] = (assignValue);


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = Object(_castPath_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[Object(_toKey_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/* harmony default export */ __webpack_exports__["a"] = (baseGet);


/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/_ListCache.js + 6 modules
var _ListCache = __webpack_require__(28);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackClear.js


/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache["a" /* default */];
  this.size = 0;
}

/* harmony default export */ var _stackClear = (stackClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackDelete.js
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/* harmony default export */ var _stackDelete = (stackDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackGet.js
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/* harmony default export */ var _stackGet = (stackGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackHas.js
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/* harmony default export */ var _stackHas = (stackHas);

// EXTERNAL MODULE: ./node_modules/lodash-es/_Map.js
var _Map = __webpack_require__(29);

// EXTERNAL MODULE: ./node_modules/lodash-es/_MapCache.js + 14 modules
var _MapCache = __webpack_require__(34);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackSet.js




/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache["a" /* default */]) {
    var pairs = data.__data__;
    if (!_Map["a" /* default */] || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache["a" /* default */](pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

/* harmony default export */ var _stackSet = (stackSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Stack.js







/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache["a" /* default */](entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear;
Stack.prototype['delete'] = _stackDelete;
Stack.prototype.get = _stackGet;
Stack.prototype.has = _stackHas;
Stack.prototype.set = _stackSet;

/* harmony default export */ var _Stack = (Stack);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseAssignValue.js
var _baseAssignValue = __webpack_require__(41);

// EXTERNAL MODULE: ./node_modules/lodash-es/eq.js
var eq = __webpack_require__(23);

// CONCATENATED MODULE: ./node_modules/lodash-es/_assignMergeValue.js



/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !Object(eq["a" /* default */])(object[key], value)) ||
      (value === undefined && !(key in object))) {
    Object(_baseAssignValue["a" /* default */])(object, key, value);
  }
}

/* harmony default export */ var _assignMergeValue = (assignMergeValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createBaseFor.js
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/* harmony default export */ var _createBaseFor = (createBaseFor);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFor.js


/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = _createBaseFor();

/* harmony default export */ var _baseFor = (baseFor);

// EXTERNAL MODULE: ./node_modules/lodash-es/_cloneBuffer.js
var _cloneBuffer = __webpack_require__(84);

// EXTERNAL MODULE: ./node_modules/lodash-es/_root.js
var _root = __webpack_require__(7);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Uint8Array.js


/** Built-in value references. */
var Uint8Array = _root["a" /* default */].Uint8Array;

/* harmony default export */ var _Uint8Array = (Uint8Array);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneArrayBuffer.js


/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));
  return result;
}

/* harmony default export */ var _cloneArrayBuffer = (cloneArrayBuffer);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneTypedArray.js


/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/* harmony default export */ var _cloneTypedArray = (cloneTypedArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copyArray.js
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/* harmony default export */ var _copyArray = (copyArray);

// EXTERNAL MODULE: ./node_modules/lodash-es/isObject.js
var isObject = __webpack_require__(8);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseCreate.js


/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!Object(isObject["a" /* default */])(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

/* harmony default export */ var _baseCreate = (baseCreate);

// EXTERNAL MODULE: ./node_modules/lodash-es/_overArg.js
var _overArg = __webpack_require__(53);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getPrototype.js


/** Built-in value references. */
var getPrototype = Object(_overArg["a" /* default */])(Object.getPrototypeOf, Object);

/* harmony default export */ var _getPrototype = (getPrototype);

// EXTERNAL MODULE: ./node_modules/lodash-es/_isPrototype.js
var _isPrototype = __webpack_require__(24);

// CONCATENATED MODULE: ./node_modules/lodash-es/_initCloneObject.js




/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !Object(_isPrototype["a" /* default */])(object))
    ? _baseCreate(_getPrototype(object))
    : {};
}

/* harmony default export */ var _initCloneObject = (initCloneObject);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArguments.js + 1 modules
var isArguments = __webpack_require__(17);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArray.js
var isArray = __webpack_require__(10);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArrayLikeObject.js
var isArrayLikeObject = __webpack_require__(32);

// EXTERNAL MODULE: ./node_modules/lodash-es/isBuffer.js
var isBuffer = __webpack_require__(42);

// EXTERNAL MODULE: ./node_modules/lodash-es/isFunction.js
var isFunction = __webpack_require__(39);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseGetTag.js + 2 modules
var _baseGetTag = __webpack_require__(13);

// EXTERNAL MODULE: ./node_modules/lodash-es/isObjectLike.js
var isObjectLike = __webpack_require__(14);

// CONCATENATED MODULE: ./node_modules/lodash-es/isPlainObject.js




/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var isPlainObject_hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!Object(isObjectLike["a" /* default */])(value) || Object(_baseGetTag["a" /* default */])(value) != objectTag) {
    return false;
  }
  var proto = _getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = isPlainObject_hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

/* harmony default export */ var lodash_es_isPlainObject = (isPlainObject);

// EXTERNAL MODULE: ./node_modules/lodash-es/isTypedArray.js + 1 modules
var isTypedArray = __webpack_require__(45);

// CONCATENATED MODULE: ./node_modules/lodash-es/_safeGet.js
/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

/* harmony default export */ var _safeGet = (safeGet);

// EXTERNAL MODULE: ./node_modules/lodash-es/_assignValue.js
var _assignValue = __webpack_require__(54);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copyObject.js



/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      Object(_baseAssignValue["a" /* default */])(object, key, newValue);
    } else {
      Object(_assignValue["a" /* default */])(object, key, newValue);
    }
  }
  return object;
}

/* harmony default export */ var _copyObject = (copyObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseTimes.js
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/* harmony default export */ var _baseTimes = (baseTimes);

// EXTERNAL MODULE: ./node_modules/lodash-es/_isIndex.js
var _isIndex = __webpack_require__(22);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayLikeKeys.js







/** Used for built-in method references. */
var _arrayLikeKeys_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _arrayLikeKeys_hasOwnProperty = _arrayLikeKeys_objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = Object(isArray["a" /* default */])(value),
      isArg = !isArr && Object(isArguments["a" /* default */])(value),
      isBuff = !isArr && !isArg && Object(isBuffer["a" /* default */])(value),
      isType = !isArr && !isArg && !isBuff && Object(isTypedArray["a" /* default */])(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? _baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || _arrayLikeKeys_hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           Object(_isIndex["a" /* default */])(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _arrayLikeKeys = (arrayLikeKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeKeysIn.js
/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _nativeKeysIn = (nativeKeysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseKeysIn.js




/** Used for built-in method references. */
var _baseKeysIn_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseKeysIn_hasOwnProperty = _baseKeysIn_objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!Object(isObject["a" /* default */])(object)) {
    return _nativeKeysIn(object);
  }
  var isProto = Object(_isPrototype["a" /* default */])(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !_baseKeysIn_hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _baseKeysIn = (baseKeysIn);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArrayLike.js
var isArrayLike = __webpack_require__(21);

// CONCATENATED MODULE: ./node_modules/lodash-es/keysIn.js




/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return Object(isArrayLike["a" /* default */])(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);
}

/* harmony default export */ var lodash_es_keysIn = (keysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/toPlainObject.js



/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return _copyObject(value, lodash_es_keysIn(value));
}

/* harmony default export */ var lodash_es_toPlainObject = (toPlainObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMergeDeep.js
















/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = _safeGet(object, key),
      srcValue = _safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    _assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = Object(isArray["a" /* default */])(srcValue),
        isBuff = !isArr && Object(isBuffer["a" /* default */])(srcValue),
        isTyped = !isArr && !isBuff && Object(isTypedArray["a" /* default */])(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (Object(isArray["a" /* default */])(objValue)) {
        newValue = objValue;
      }
      else if (Object(isArrayLikeObject["a" /* default */])(objValue)) {
        newValue = _copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = Object(_cloneBuffer["a" /* default */])(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = _cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (lodash_es_isPlainObject(srcValue) || Object(isArguments["a" /* default */])(srcValue)) {
      newValue = objValue;
      if (Object(isArguments["a" /* default */])(objValue)) {
        newValue = lodash_es_toPlainObject(objValue);
      }
      else if (!Object(isObject["a" /* default */])(objValue) || Object(isFunction["a" /* default */])(objValue)) {
        newValue = _initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  _assignMergeValue(object, key, newValue);
}

/* harmony default export */ var _baseMergeDeep = (baseMergeDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMerge.js








/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  _baseFor(source, function(srcValue, key) {
    stack || (stack = new _Stack);
    if (Object(isObject["a" /* default */])(srcValue)) {
      _baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(_safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      _assignMergeValue(object, key, newValue);
    }
  }, lodash_es_keysIn);
}

/* harmony default export */ var _baseMerge = __webpack_exports__["a"] = (baseMerge);


/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/lodash-es/constant.js
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

/* harmony default export */ var lodash_es_constant = (constant);

// EXTERNAL MODULE: ./node_modules/lodash-es/_defineProperty.js
var _defineProperty = __webpack_require__(46);

// EXTERNAL MODULE: ./node_modules/lodash-es/identity.js
var identity = __webpack_require__(51);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSetToString.js




/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty["a" /* default */] ? identity["a" /* default */] : function(func, string) {
  return Object(_defineProperty["a" /* default */])(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': lodash_es_constant(string),
    'writable': true
  });
};

/* harmony default export */ var _baseSetToString = (baseSetToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_shortOut.js
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/* harmony default export */ var _shortOut = (shortOut);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setToString.js



/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = _shortOut(_baseSetToString);

/* harmony default export */ var _setToString = __webpack_exports__["a"] = (setToString);


/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayPush.js
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/* harmony default export */ var _arrayPush = (arrayPush);

// EXTERNAL MODULE: ./node_modules/lodash-es/_Symbol.js
var _Symbol = __webpack_require__(15);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArguments.js + 1 modules
var isArguments = __webpack_require__(17);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArray.js
var isArray = __webpack_require__(10);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isFlattenable.js




/** Built-in value references. */
var spreadableSymbol = _Symbol["a" /* default */] ? _Symbol["a" /* default */].isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return Object(isArray["a" /* default */])(value) || Object(isArguments["a" /* default */])(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

/* harmony default export */ var _isFlattenable = (isFlattenable);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFlatten.js



/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = _isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        _arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

/* harmony default export */ var _baseFlatten = __webpack_exports__["a"] = (baseFlatten);


/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/lodash-es/_apply.js
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/* harmony default export */ var _apply = (apply);

// CONCATENATED MODULE: ./node_modules/lodash-es/_overRest.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return _apply(func, this, otherArgs);
  };
}

/* harmony default export */ var _overRest = __webpack_exports__["a"] = (overRest);


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():undefined}(this,(function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",f="month",h="quarter",c="year",d="date",$="Invalid Date",l=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},D="en",v={};v[D]=M;var p=function(t){return t instanceof _},S=function(t,e,n){var r;if(!t)return D;if("string"==typeof t)v[t]&&(r=t),e&&(v[t]=e,r=t);else{var i=t.name;v[i]=t,r=i}return!n&&r&&(D=r),r||!n&&D},w=function(t,e){if(p(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g="set"+(this.$u?"UTC":"");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var D=this.$locale().weekStart||0,v=(y<D?y+7:y)-D;return $(r?m-v:m+(6-v),M);case a:case d:return l(g+"Hours",0);case u:return l(g+"Minutes",1);case s:return l(g+"Seconds",2);case i:return l(g+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h="set"+(this.$u?"UTC":""),$=(n={},n[a]=h+"Date",n[d]=h+"Date",n[f]=h+"Month",n[c]=h+"FullYear",n[u]=h+"Hours",n[s]=h+"Minutes",n[i]=h+"Seconds",n[r]=h+"Milliseconds",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].substr(0,s)},c=function(t){return O.s(s%12||12,t,"0")},d=n.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,"0"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,"0"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,"0"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,"0"),s:String(this.$s),ss:O.s(this.$s,2,"0"),SSS:O.s(this.$ms,3,"0"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,D=O.m(this,M);return D=(l={},l[c]=D/12,l[f]=D,l[h]=D/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?D:O.a(D)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return v[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",f],["$y",c],["$D",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=v[D],w.Ls=v,w.p={},w}));

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(95);

/***/ }),
/* 62 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 63 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 64 */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 65 */
/***/ (function(module) {

module.exports = JSON.parse("[[\"0\",\"\\u0000\",127,\"€\"],[\"8140\",\"丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪\",5,\"乲乴\",9,\"乿\",6,\"亇亊\"],[\"8180\",\"亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂\",6,\"伋伌伒\",4,\"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾\",4,\"佄佅佇\",5,\"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢\"],[\"8240\",\"侤侫侭侰\",4,\"侶\",8,\"俀俁係俆俇俈俉俋俌俍俒\",4,\"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿\",11],[\"8280\",\"個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯\",10,\"倻倽倿偀偁偂偄偅偆偉偊偋偍偐\",4,\"偖偗偘偙偛偝\",7,\"偦\",5,\"偭\",8,\"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎\",20,\"傤傦傪傫傭\",4,\"傳\",6,\"傼\"],[\"8340\",\"傽\",17,\"僐\",5,\"僗僘僙僛\",10,\"僨僩僪僫僯僰僱僲僴僶\",4,\"僼\",9,\"儈\"],[\"8380\",\"儉儊儌\",5,\"儓\",13,\"儢\",28,\"兂兇兊兌兎兏児兒兓兗兘兙兛兝\",4,\"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦\",4,\"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒\",5],[\"8440\",\"凘凙凚凜凞凟凢凣凥\",5,\"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄\",5,\"剋剎剏剒剓剕剗剘\"],[\"8480\",\"剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳\",9,\"剾劀劃\",4,\"劉\",6,\"劑劒劔\",6,\"劜劤劥劦劧劮劯劰労\",9,\"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務\",5,\"勠勡勢勣勥\",10,\"勱\",7,\"勻勼勽匁匂匃匄匇匉匊匋匌匎\"],[\"8540\",\"匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯\",9,\"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏\"],[\"8580\",\"厐\",4,\"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯\",6,\"厷厸厹厺厼厽厾叀參\",4,\"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝\",4,\"呣呥呧呩\",7,\"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡\"],[\"8640\",\"咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠\",4,\"哫哬哯哰哱哴\",5,\"哻哾唀唂唃唄唅唈唊\",4,\"唒唓唕\",5,\"唜唝唞唟唡唥唦\"],[\"8680\",\"唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋\",4,\"啑啒啓啔啗\",4,\"啝啞啟啠啢啣啨啩啫啯\",5,\"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠\",6,\"喨\",8,\"喲喴営喸喺喼喿\",4,\"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗\",4,\"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸\",4,\"嗿嘂嘃嘄嘅\"],[\"8740\",\"嘆嘇嘊嘋嘍嘐\",7,\"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀\",11,\"噏\",4,\"噕噖噚噛噝\",4],[\"8780\",\"噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽\",7,\"嚇\",6,\"嚐嚑嚒嚔\",14,\"嚤\",10,\"嚰\",6,\"嚸嚹嚺嚻嚽\",12,\"囋\",8,\"囕囖囘囙囜団囥\",5,\"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國\",6],[\"8840\",\"園\",9,\"圝圞圠圡圢圤圥圦圧圫圱圲圴\",4,\"圼圽圿坁坃坄坅坆坈坉坋坒\",4,\"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀\"],[\"8880\",\"垁垇垈垉垊垍\",4,\"垔\",6,\"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹\",8,\"埄\",6,\"埌埍埐埑埓埖埗埛埜埞埡埢埣埥\",7,\"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥\",4,\"堫\",4,\"報堲堳場堶\",7],[\"8940\",\"堾\",5,\"塅\",6,\"塎塏塐塒塓塕塖塗塙\",4,\"塟\",5,\"塦\",4,\"塭\",16,\"塿墂墄墆墇墈墊墋墌\"],[\"8980\",\"墍\",4,\"墔\",4,\"墛墜墝墠\",7,\"墪\",17,\"墽墾墿壀壂壃壄壆\",10,\"壒壓壔壖\",13,\"壥\",5,\"壭壯壱売壴壵壷壸壺\",7,\"夃夅夆夈\",4,\"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻\"],[\"8a40\",\"夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛\",4,\"奡奣奤奦\",12,\"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦\"],[\"8a80\",\"妧妬妭妰妱妳\",5,\"妺妼妽妿\",6,\"姇姈姉姌姍姎姏姕姖姙姛姞\",4,\"姤姦姧姩姪姫姭\",11,\"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪\",6,\"娳娵娷\",4,\"娽娾娿婁\",4,\"婇婈婋\",9,\"婖婗婘婙婛\",5],[\"8b40\",\"婡婣婤婥婦婨婩婫\",8,\"婸婹婻婼婽婾媀\",17,\"媓\",6,\"媜\",13,\"媫媬\"],[\"8b80\",\"媭\",4,\"媴媶媷媹\",4,\"媿嫀嫃\",5,\"嫊嫋嫍\",4,\"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬\",4,\"嫲\",22,\"嬊\",11,\"嬘\",25,\"嬳嬵嬶嬸\",7,\"孁\",6],[\"8c40\",\"孈\",7,\"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏\"],[\"8c80\",\"寑寔\",8,\"寠寢寣實寧審\",4,\"寯寱\",6,\"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧\",6,\"屰屲\",6,\"屻屼屽屾岀岃\",4,\"岉岊岋岎岏岒岓岕岝\",4,\"岤\",4],[\"8d40\",\"岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅\",5,\"峌\",5,\"峓\",5,\"峚\",6,\"峢峣峧峩峫峬峮峯峱\",9,\"峼\",4],[\"8d80\",\"崁崄崅崈\",5,\"崏\",4,\"崕崗崘崙崚崜崝崟\",4,\"崥崨崪崫崬崯\",4,\"崵\",7,\"崿\",7,\"嵈嵉嵍\",10,\"嵙嵚嵜嵞\",10,\"嵪嵭嵮嵰嵱嵲嵳嵵\",12,\"嶃\",21,\"嶚嶛嶜嶞嶟嶠\"],[\"8e40\",\"嶡\",21,\"嶸\",12,\"巆\",6,\"巎\",12,\"巜巟巠巣巤巪巬巭\"],[\"8e80\",\"巰巵巶巸\",4,\"巿帀帄帇帉帊帋帍帎帒帓帗帞\",7,\"帨\",4,\"帯帰帲\",4,\"帹帺帾帿幀幁幃幆\",5,\"幍\",6,\"幖\",4,\"幜幝幟幠幣\",14,\"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨\",4,\"庮\",4,\"庴庺庻庼庽庿\",6],[\"8f40\",\"廆廇廈廋\",5,\"廔廕廗廘廙廚廜\",11,\"廩廫\",8,\"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤\"],[\"8f80\",\"弨弫弬弮弰弲\",6,\"弻弽弾弿彁\",14,\"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢\",5,\"復徫徬徯\",5,\"徶徸徹徺徻徾\",4,\"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇\"],[\"9040\",\"怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰\",4,\"怶\",4,\"怽怾恀恄\",6,\"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀\"],[\"9080\",\"悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽\",7,\"惇惈惉惌\",4,\"惒惓惔惖惗惙惛惞惡\",4,\"惪惱惲惵惷惸惻\",4,\"愂愃愄愅愇愊愋愌愐\",4,\"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬\",18,\"慀\",6],[\"9140\",\"慇慉態慍慏慐慒慓慔慖\",6,\"慞慟慠慡慣慤慥慦慩\",6,\"慱慲慳慴慶慸\",18,\"憌憍憏\",4,\"憕\"],[\"9180\",\"憖\",6,\"憞\",8,\"憪憫憭\",9,\"憸\",5,\"憿懀懁懃\",4,\"應懌\",4,\"懓懕\",16,\"懧\",13,\"懶\",8,\"戀\",5,\"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸\",4,\"扂扄扅扆扊\"],[\"9240\",\"扏扐払扖扗扙扚扜\",6,\"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋\",5,\"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁\"],[\"9280\",\"拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳\",5,\"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖\",7,\"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙\",6,\"採掤掦掫掯掱掲掵掶掹掻掽掿揀\"],[\"9340\",\"揁揂揃揅揇揈揊揋揌揑揓揔揕揗\",6,\"揟揢揤\",4,\"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆\",4,\"損搎搑搒搕\",5,\"搝搟搢搣搤\"],[\"9380\",\"搥搧搨搩搫搮\",5,\"搵\",4,\"搻搼搾摀摂摃摉摋\",6,\"摓摕摖摗摙\",4,\"摟\",7,\"摨摪摫摬摮\",9,\"摻\",6,\"撃撆撈\",8,\"撓撔撗撘撚撛撜撝撟\",4,\"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆\",6,\"擏擑擓擔擕擖擙據\"],[\"9440\",\"擛擜擝擟擠擡擣擥擧\",24,\"攁\",7,\"攊\",7,\"攓\",4,\"攙\",8],[\"9480\",\"攢攣攤攦\",4,\"攬攭攰攱攲攳攷攺攼攽敀\",4,\"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數\",14,\"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱\",7,\"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘\",7,\"旡旣旤旪旫\"],[\"9540\",\"旲旳旴旵旸旹旻\",4,\"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷\",4,\"昽昿晀時晄\",6,\"晍晎晐晑晘\"],[\"9580\",\"晙晛晜晝晞晠晢晣晥晧晩\",4,\"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘\",4,\"暞\",8,\"暩\",4,\"暯\",4,\"暵暶暷暸暺暻暼暽暿\",25,\"曚曞\",7,\"曧曨曪\",5,\"曱曵曶書曺曻曽朁朂會\"],[\"9640\",\"朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠\",5,\"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗\",4,\"杝杢杣杤杦杧杫杬杮東杴杶\"],[\"9680\",\"杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹\",7,\"柂柅\",9,\"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵\",7,\"柾栁栂栃栄栆栍栐栒栔栕栘\",4,\"栞栟栠栢\",6,\"栫\",6,\"栴栵栶栺栻栿桇桋桍桏桒桖\",5],[\"9740\",\"桜桝桞桟桪桬\",7,\"桵桸\",8,\"梂梄梇\",7,\"梐梑梒梔梕梖梘\",9,\"梣梤梥梩梪梫梬梮梱梲梴梶梷梸\"],[\"9780\",\"梹\",6,\"棁棃\",5,\"棊棌棎棏棐棑棓棔棖棗棙棛\",4,\"棡棢棤\",9,\"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆\",4,\"椌椏椑椓\",11,\"椡椢椣椥\",7,\"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃\",16,\"楕楖楘楙楛楜楟\"],[\"9840\",\"楡楢楤楥楧楨楩楪楬業楯楰楲\",4,\"楺楻楽楾楿榁榃榅榊榋榌榎\",5,\"榖榗榙榚榝\",9,\"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽\"],[\"9880\",\"榾榿槀槂\",7,\"構槍槏槑槒槓槕\",5,\"槜槝槞槡\",11,\"槮槯槰槱槳\",9,\"槾樀\",9,\"樋\",11,\"標\",5,\"樠樢\",5,\"権樫樬樭樮樰樲樳樴樶\",6,\"樿\",4,\"橅橆橈\",7,\"橑\",6,\"橚\"],[\"9940\",\"橜\",4,\"橢橣橤橦\",10,\"橲\",6,\"橺橻橽橾橿檁檂檃檅\",8,\"檏檒\",4,\"檘\",7,\"檡\",5],[\"9980\",\"檧檨檪檭\",114,\"欥欦欨\",6],[\"9a40\",\"欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍\",11,\"歚\",7,\"歨歩歫\",13,\"歺歽歾歿殀殅殈\"],[\"9a80\",\"殌殎殏殐殑殔殕殗殘殙殜\",4,\"殢\",7,\"殫\",7,\"殶殸\",6,\"毀毃毄毆\",4,\"毌毎毐毑毘毚毜\",4,\"毢\",7,\"毬毭毮毰毱毲毴毶毷毸毺毻毼毾\",6,\"氈\",4,\"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋\",4,\"汑汒汓汖汘\"],[\"9b40\",\"汙汚汢汣汥汦汧汫\",4,\"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘\"],[\"9b80\",\"泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟\",5,\"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽\",4,\"涃涄涆涇涊涋涍涏涐涒涖\",4,\"涜涢涥涬涭涰涱涳涴涶涷涹\",5,\"淁淂淃淈淉淊\"],[\"9c40\",\"淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽\",7,\"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵\"],[\"9c80\",\"渶渷渹渻\",7,\"湅\",7,\"湏湐湑湒湕湗湙湚湜湝湞湠\",10,\"湬湭湯\",14,\"満溁溂溄溇溈溊\",4,\"溑\",6,\"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪\",5],[\"9d40\",\"滰滱滲滳滵滶滷滸滺\",7,\"漃漄漅漇漈漊\",4,\"漐漑漒漖\",9,\"漡漢漣漥漦漧漨漬漮漰漲漴漵漷\",6,\"漿潀潁潂\"],[\"9d80\",\"潃潄潅潈潉潊潌潎\",9,\"潙潚潛潝潟潠潡潣潤潥潧\",5,\"潯潰潱潳潵潶潷潹潻潽\",6,\"澅澆澇澊澋澏\",12,\"澝澞澟澠澢\",4,\"澨\",10,\"澴澵澷澸澺\",5,\"濁濃\",5,\"濊\",6,\"濓\",10,\"濟濢濣濤濥\"],[\"9e40\",\"濦\",7,\"濰\",32,\"瀒\",7,\"瀜\",6,\"瀤\",6],[\"9e80\",\"瀫\",9,\"瀶瀷瀸瀺\",17,\"灍灎灐\",13,\"灟\",11,\"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞\",12,\"炰炲炴炵炶為炾炿烄烅烆烇烉烋\",12,\"烚\"],[\"9f40\",\"烜烝烞烠烡烢烣烥烪烮烰\",6,\"烸烺烻烼烾\",10,\"焋\",4,\"焑焒焔焗焛\",10,\"焧\",7,\"焲焳焴\"],[\"9f80\",\"焵焷\",13,\"煆煇煈煉煋煍煏\",12,\"煝煟\",4,\"煥煩\",4,\"煯煰煱煴煵煶煷煹煻煼煾\",5,\"熅\",4,\"熋熌熍熎熐熑熒熓熕熖熗熚\",4,\"熡\",6,\"熩熪熫熭\",5,\"熴熶熷熸熺\",8,\"燄\",9,\"燏\",4],[\"a040\",\"燖\",9,\"燡燢燣燤燦燨\",5,\"燯\",9,\"燺\",11,\"爇\",19],[\"a080\",\"爛爜爞\",9,\"爩爫爭爮爯爲爳爴爺爼爾牀\",6,\"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅\",4,\"犌犎犐犑犓\",11,\"犠\",11,\"犮犱犲犳犵犺\",6,\"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛\"],[\"a1a1\",\"　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈\",7,\"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓\"],[\"a2a1\",\"ⅰ\",9],[\"a2b1\",\"⒈\",19,\"⑴\",19,\"①\",9],[\"a2e5\",\"㈠\",9],[\"a2f1\",\"Ⅰ\",11],[\"a3a1\",\"！＂＃￥％\",88,\"￣\"],[\"a4a1\",\"ぁ\",82],[\"a5a1\",\"ァ\",85],[\"a6a1\",\"Α\",16,\"Σ\",6],[\"a6c1\",\"α\",16,\"σ\",6],[\"a6e0\",\"︵︶︹︺︿﹀︽︾﹁﹂﹃﹄\"],[\"a6ee\",\"︻︼︷︸︱\"],[\"a6f4\",\"︳︴\"],[\"a7a1\",\"А\",5,\"ЁЖ\",25],[\"a7d1\",\"а\",5,\"ёж\",25],[\"a840\",\"ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═\",35,\"▁\",6],[\"a880\",\"█\",7,\"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞\"],[\"a8a1\",\"āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ\"],[\"a8bd\",\"ńň\"],[\"a8c0\",\"ɡ\"],[\"a8c5\",\"ㄅ\",36],[\"a940\",\"〡\",8,\"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤\"],[\"a959\",\"℡㈱\"],[\"a95c\",\"‐\"],[\"a960\",\"ー゛゜ヽヾ〆ゝゞ﹉\",9,\"﹔﹕﹖﹗﹙\",8],[\"a980\",\"﹢\",4,\"﹨﹩﹪﹫\"],[\"a996\",\"〇\"],[\"a9a4\",\"─\",75],[\"aa40\",\"狜狝狟狢\",5,\"狪狫狵狶狹狽狾狿猀猂猄\",5,\"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀\",8],[\"aa80\",\"獉獊獋獌獎獏獑獓獔獕獖獘\",7,\"獡\",10,\"獮獰獱\"],[\"ab40\",\"獲\",11,\"獿\",4,\"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣\",5,\"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃\",4],[\"ab80\",\"珋珌珎珒\",6,\"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳\",4],[\"ac40\",\"珸\",10,\"琄琇琈琋琌琍琎琑\",8,\"琜\",5,\"琣琤琧琩琫琭琯琱琲琷\",4,\"琽琾琿瑀瑂\",11],[\"ac80\",\"瑎\",6,\"瑖瑘瑝瑠\",12,\"瑮瑯瑱\",4,\"瑸瑹瑺\"],[\"ad40\",\"瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑\",10,\"璝璟\",7,\"璪\",15,\"璻\",12],[\"ad80\",\"瓈\",9,\"瓓\",8,\"瓝瓟瓡瓥瓧\",6,\"瓰瓱瓲\"],[\"ae40\",\"瓳瓵瓸\",6,\"甀甁甂甃甅\",7,\"甎甐甒甔甕甖甗甛甝甞甠\",4,\"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘\"],[\"ae80\",\"畝\",7,\"畧畨畩畫\",6,\"畳畵當畷畺\",4,\"疀疁疂疄疅疇\"],[\"af40\",\"疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦\",4,\"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇\"],[\"af80\",\"瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄\"],[\"b040\",\"癅\",6,\"癎\",5,\"癕癗\",4,\"癝癟癠癡癢癤\",6,\"癬癭癮癰\",7,\"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛\"],[\"b080\",\"皜\",7,\"皥\",8,\"皯皰皳皵\",9,\"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥\"],[\"b140\",\"盄盇盉盋盌盓盕盙盚盜盝盞盠\",4,\"盦\",7,\"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎\",10,\"眛眜眝眞眡眣眤眥眧眪眫\"],[\"b180\",\"眬眮眰\",4,\"眹眻眽眾眿睂睄睅睆睈\",7,\"睒\",7,\"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳\"],[\"b240\",\"睝睞睟睠睤睧睩睪睭\",11,\"睺睻睼瞁瞂瞃瞆\",5,\"瞏瞐瞓\",11,\"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶\",4],[\"b280\",\"瞼瞾矀\",12,\"矎\",8,\"矘矙矚矝\",4,\"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖\"],[\"b340\",\"矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃\",5,\"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚\"],[\"b380\",\"硛硜硞\",11,\"硯\",7,\"硸硹硺硻硽\",6,\"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚\"],[\"b440\",\"碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨\",7,\"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚\",9],[\"b480\",\"磤磥磦磧磩磪磫磭\",4,\"磳磵磶磸磹磻\",5,\"礂礃礄礆\",6,\"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮\"],[\"b540\",\"礍\",5,\"礔\",9,\"礟\",4,\"礥\",14,\"礵\",4,\"礽礿祂祃祄祅祇祊\",8,\"祔祕祘祙祡祣\"],[\"b580\",\"祤祦祩祪祫祬祮祰\",6,\"祹祻\",4,\"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠\"],[\"b640\",\"禓\",6,\"禛\",11,\"禨\",10,\"禴\",4,\"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙\",5,\"秠秡秢秥秨秪\"],[\"b680\",\"秬秮秱\",6,\"秹秺秼秾秿稁稄稅稇稈稉稊稌稏\",4,\"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二\"],[\"b740\",\"稝稟稡稢稤\",14,\"稴稵稶稸稺稾穀\",5,\"穇\",9,\"穒\",4,\"穘\",16],[\"b780\",\"穩\",6,\"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服\"],[\"b840\",\"窣窤窧窩窪窫窮\",4,\"窴\",10,\"竀\",10,\"竌\",9,\"竗竘竚竛竜竝竡竢竤竧\",5,\"竮竰竱竲竳\"],[\"b880\",\"竴\",4,\"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹\"],[\"b940\",\"笯笰笲笴笵笶笷笹笻笽笿\",5,\"筆筈筊筍筎筓筕筗筙筜筞筟筡筣\",10,\"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆\",6,\"箎箏\"],[\"b980\",\"箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹\",7,\"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈\"],[\"ba40\",\"篅篈築篊篋篍篎篏篐篒篔\",4,\"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲\",4,\"篸篹篺篻篽篿\",7,\"簈簉簊簍簎簐\",5,\"簗簘簙\"],[\"ba80\",\"簚\",4,\"簠\",5,\"簨簩簫\",12,\"簹\",5,\"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖\"],[\"bb40\",\"籃\",9,\"籎\",36,\"籵\",5,\"籾\",9],[\"bb80\",\"粈粊\",6,\"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴\",4,\"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕\"],[\"bc40\",\"粿糀糂糃糄糆糉糋糎\",6,\"糘糚糛糝糞糡\",6,\"糩\",5,\"糰\",7,\"糹糺糼\",13,\"紋\",5],[\"bc80\",\"紑\",14,\"紡紣紤紥紦紨紩紪紬紭紮細\",6,\"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件\"],[\"bd40\",\"紷\",54,\"絯\",7],[\"bd80\",\"絸\",32,\"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸\"],[\"be40\",\"継\",12,\"綧\",6,\"綯\",42],[\"be80\",\"線\",32,\"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻\"],[\"bf40\",\"緻\",62],[\"bf80\",\"縺縼\",4,\"繂\",4,\"繈\",21,\"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀\"],[\"c040\",\"繞\",35,\"纃\",23,\"纜纝纞\"],[\"c080\",\"纮纴纻纼绖绤绬绹缊缐缞缷缹缻\",6,\"罃罆\",9,\"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐\"],[\"c140\",\"罖罙罛罜罝罞罠罣\",4,\"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂\",7,\"羋羍羏\",4,\"羕\",4,\"羛羜羠羢羣羥羦羨\",6,\"羱\"],[\"c180\",\"羳\",4,\"羺羻羾翀翂翃翄翆翇翈翉翋翍翏\",4,\"翖翗翙\",5,\"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿\"],[\"c240\",\"翤翧翨翪翫翬翭翯翲翴\",6,\"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫\",5,\"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗\"],[\"c280\",\"聙聛\",13,\"聫\",5,\"聲\",11,\"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫\"],[\"c340\",\"聾肁肂肅肈肊肍\",5,\"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇\",4,\"胏\",6,\"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋\"],[\"c380\",\"脌脕脗脙脛脜脝脟\",12,\"脭脮脰脳脴脵脷脹\",4,\"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸\"],[\"c440\",\"腀\",5,\"腇腉腍腎腏腒腖腗腘腛\",4,\"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃\",4,\"膉膋膌膍膎膐膒\",5,\"膙膚膞\",4,\"膤膥\"],[\"c480\",\"膧膩膫\",7,\"膴\",5,\"膼膽膾膿臄臅臇臈臉臋臍\",6,\"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁\"],[\"c540\",\"臔\",14,\"臤臥臦臨臩臫臮\",4,\"臵\",5,\"臽臿舃與\",4,\"舎舏舑舓舕\",5,\"舝舠舤舥舦舧舩舮舲舺舼舽舿\"],[\"c580\",\"艀艁艂艃艅艆艈艊艌艍艎艐\",7,\"艙艛艜艝艞艠\",7,\"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗\"],[\"c640\",\"艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸\"],[\"c680\",\"苺苼\",4,\"茊茋茍茐茒茓茖茘茙茝\",9,\"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐\"],[\"c740\",\"茾茿荁荂荄荅荈荊\",4,\"荓荕\",4,\"荝荢荰\",6,\"荹荺荾\",6,\"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡\",6,\"莬莭莮\"],[\"c780\",\"莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠\"],[\"c840\",\"菮華菳\",4,\"菺菻菼菾菿萀萂萅萇萈萉萊萐萒\",5,\"萙萚萛萞\",5,\"萩\",7,\"萲\",5,\"萹萺萻萾\",7,\"葇葈葉\"],[\"c880\",\"葊\",6,\"葒\",4,\"葘葝葞葟葠葢葤\",4,\"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁\"],[\"c940\",\"葽\",4,\"蒃蒄蒅蒆蒊蒍蒏\",7,\"蒘蒚蒛蒝蒞蒟蒠蒢\",12,\"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗\"],[\"c980\",\"蓘\",4,\"蓞蓡蓢蓤蓧\",4,\"蓭蓮蓯蓱\",10,\"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳\"],[\"ca40\",\"蔃\",8,\"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢\",8,\"蔭\",9,\"蔾\",4,\"蕄蕅蕆蕇蕋\",10],[\"ca80\",\"蕗蕘蕚蕛蕜蕝蕟\",4,\"蕥蕦蕧蕩\",8,\"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱\"],[\"cb40\",\"薂薃薆薈\",6,\"薐\",10,\"薝\",6,\"薥薦薧薩薫薬薭薱\",5,\"薸薺\",6,\"藂\",6,\"藊\",4,\"藑藒\"],[\"cb80\",\"藔藖\",5,\"藝\",6,\"藥藦藧藨藪\",14,\"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔\"],[\"cc40\",\"藹藺藼藽藾蘀\",4,\"蘆\",10,\"蘒蘓蘔蘕蘗\",15,\"蘨蘪\",13,\"蘹蘺蘻蘽蘾蘿虀\"],[\"cc80\",\"虁\",11,\"虒虓處\",4,\"虛虜虝號虠虡虣\",7,\"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃\"],[\"cd40\",\"虭虯虰虲\",6,\"蚃\",6,\"蚎\",4,\"蚔蚖\",5,\"蚞\",4,\"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻\",4,\"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜\"],[\"cd80\",\"蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威\"],[\"ce40\",\"蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀\",6,\"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚\",5,\"蝡蝢蝦\",7,\"蝯蝱蝲蝳蝵\"],[\"ce80\",\"蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎\",4,\"螔螕螖螘\",6,\"螠\",4,\"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺\"],[\"cf40\",\"螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁\",4,\"蟇蟈蟉蟌\",4,\"蟔\",6,\"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯\",9],[\"cf80\",\"蟺蟻蟼蟽蟿蠀蠁蠂蠄\",5,\"蠋\",7,\"蠔蠗蠘蠙蠚蠜\",4,\"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓\"],[\"d040\",\"蠤\",13,\"蠳\",5,\"蠺蠻蠽蠾蠿衁衂衃衆\",5,\"衎\",5,\"衕衖衘衚\",6,\"衦衧衪衭衯衱衳衴衵衶衸衹衺\"],[\"d080\",\"衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗\",4,\"袝\",4,\"袣袥\",5,\"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄\"],[\"d140\",\"袬袮袯袰袲\",4,\"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚\",4,\"裠裡裦裧裩\",6,\"裲裵裶裷裺裻製裿褀褁褃\",5],[\"d180\",\"褉褋\",4,\"褑褔\",4,\"褜\",4,\"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶\"],[\"d240\",\"褸\",8,\"襂襃襅\",24,\"襠\",5,\"襧\",19,\"襼\"],[\"d280\",\"襽襾覀覂覄覅覇\",26,\"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐\"],[\"d340\",\"覢\",30,\"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴\",6],[\"d380\",\"觻\",4,\"訁\",5,\"計\",21,\"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉\"],[\"d440\",\"訞\",31,\"訿\",8,\"詉\",21],[\"d480\",\"詟\",25,\"詺\",6,\"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧\"],[\"d540\",\"誁\",7,\"誋\",7,\"誔\",46],[\"d580\",\"諃\",32,\"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政\"],[\"d640\",\"諤\",34,\"謈\",27],[\"d680\",\"謤謥謧\",30,\"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑\"],[\"d740\",\"譆\",31,\"譧\",4,\"譭\",25],[\"d780\",\"讇\",24,\"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座\"],[\"d840\",\"谸\",8,\"豂豃豄豅豈豊豋豍\",7,\"豖豗豘豙豛\",5,\"豣\",6,\"豬\",6,\"豴豵豶豷豻\",6,\"貃貄貆貇\"],[\"d880\",\"貈貋貍\",6,\"貕貖貗貙\",20,\"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝\"],[\"d940\",\"貮\",62],[\"d980\",\"賭\",32,\"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼\"],[\"da40\",\"贎\",14,\"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸\",8,\"趂趃趆趇趈趉趌\",4,\"趒趓趕\",9,\"趠趡\"],[\"da80\",\"趢趤\",12,\"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺\"],[\"db40\",\"跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾\",6,\"踆踇踈踋踍踎踐踑踒踓踕\",7,\"踠踡踤\",4,\"踫踭踰踲踳踴踶踷踸踻踼踾\"],[\"db80\",\"踿蹃蹅蹆蹌\",4,\"蹓\",5,\"蹚\",11,\"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝\"],[\"dc40\",\"蹳蹵蹷\",4,\"蹽蹾躀躂躃躄躆躈\",6,\"躑躒躓躕\",6,\"躝躟\",11,\"躭躮躰躱躳\",6,\"躻\",7],[\"dc80\",\"軃\",10,\"軏\",21,\"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥\"],[\"dd40\",\"軥\",62],[\"dd80\",\"輤\",32,\"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺\"],[\"de40\",\"轅\",32,\"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆\"],[\"de80\",\"迉\",4,\"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖\"],[\"df40\",\"這逜連逤逥逧\",5,\"逰\",4,\"逷逹逺逽逿遀遃遅遆遈\",4,\"過達違遖遙遚遜\",5,\"遤遦遧適遪遫遬遯\",4,\"遶\",6,\"遾邁\"],[\"df80\",\"還邅邆邇邉邊邌\",4,\"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼\"],[\"e040\",\"郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅\",19,\"鄚鄛鄜\"],[\"e080\",\"鄝鄟鄠鄡鄤\",10,\"鄰鄲\",6,\"鄺\",8,\"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼\"],[\"e140\",\"酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀\",4,\"醆醈醊醎醏醓\",6,\"醜\",5,\"醤\",5,\"醫醬醰醱醲醳醶醷醸醹醻\"],[\"e180\",\"醼\",10,\"釈釋釐釒\",9,\"針\",8,\"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺\"],[\"e240\",\"釦\",62],[\"e280\",\"鈥\",32,\"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧\",5,\"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂\"],[\"e340\",\"鉆\",45,\"鉵\",16],[\"e380\",\"銆\",7,\"銏\",24,\"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾\"],[\"e440\",\"銨\",5,\"銯\",24,\"鋉\",31],[\"e480\",\"鋩\",32,\"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑\"],[\"e540\",\"錊\",51,\"錿\",10],[\"e580\",\"鍊\",31,\"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣\"],[\"e640\",\"鍬\",34,\"鎐\",27],[\"e680\",\"鎬\",29,\"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩\"],[\"e740\",\"鏎\",7,\"鏗\",54],[\"e780\",\"鐎\",32,\"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡\",6,\"缪缫缬缭缯\",4,\"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬\"],[\"e840\",\"鐯\",14,\"鐿\",43,\"鑬鑭鑮鑯\"],[\"e880\",\"鑰\",20,\"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹\"],[\"e940\",\"锧锳锽镃镈镋镕镚镠镮镴镵長\",7,\"門\",42],[\"e980\",\"閫\",32,\"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋\"],[\"ea40\",\"闌\",27,\"闬闿阇阓阘阛阞阠阣\",6,\"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗\"],[\"ea80\",\"陘陙陚陜陝陞陠陣陥陦陫陭\",4,\"陳陸\",12,\"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰\"],[\"eb40\",\"隌階隑隒隓隕隖隚際隝\",9,\"隨\",7,\"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖\",9,\"雡\",6,\"雫\"],[\"eb80\",\"雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗\",4,\"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻\"],[\"ec40\",\"霡\",8,\"霫霬霮霯霱霳\",4,\"霺霻霼霽霿\",18,\"靔靕靗靘靚靜靝靟靣靤靦靧靨靪\",7],[\"ec80\",\"靲靵靷\",4,\"靽\",7,\"鞆\",4,\"鞌鞎鞏鞐鞓鞕鞖鞗鞙\",4,\"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐\"],[\"ed40\",\"鞞鞟鞡鞢鞤\",6,\"鞬鞮鞰鞱鞳鞵\",46],[\"ed80\",\"韤韥韨韮\",4,\"韴韷\",23,\"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨\"],[\"ee40\",\"頏\",62],[\"ee80\",\"顎\",32,\"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶\",4,\"钼钽钿铄铈\",6,\"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪\"],[\"ef40\",\"顯\",5,\"颋颎颒颕颙颣風\",37,\"飏飐飔飖飗飛飜飝飠\",4],[\"ef80\",\"飥飦飩\",30,\"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒\",4,\"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤\",8,\"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔\"],[\"f040\",\"餈\",4,\"餎餏餑\",28,\"餯\",26],[\"f080\",\"饊\",9,\"饖\",12,\"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨\",4,\"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦\",6,\"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙\"],[\"f140\",\"馌馎馚\",10,\"馦馧馩\",47],[\"f180\",\"駙\",32,\"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃\"],[\"f240\",\"駺\",62],[\"f280\",\"騹\",32,\"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒\"],[\"f340\",\"驚\",17,\"驲骃骉骍骎骔骕骙骦骩\",6,\"骲骳骴骵骹骻骽骾骿髃髄髆\",4,\"髍髎髏髐髒體髕髖髗髙髚髛髜\"],[\"f380\",\"髝髞髠髢髣髤髥髧髨髩髪髬髮髰\",8,\"髺髼\",6,\"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋\"],[\"f440\",\"鬇鬉\",5,\"鬐鬑鬒鬔\",10,\"鬠鬡鬢鬤\",10,\"鬰鬱鬳\",7,\"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕\",5],[\"f480\",\"魛\",32,\"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤\"],[\"f540\",\"魼\",62],[\"f580\",\"鮻\",32,\"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜\"],[\"f640\",\"鯜\",62],[\"f680\",\"鰛\",32,\"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅\",5,\"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞\",5,\"鲥\",4,\"鲫鲭鲮鲰\",7,\"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋\"],[\"f740\",\"鰼\",62],[\"f780\",\"鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾\",4,\"鳈鳉鳑鳒鳚鳛鳠鳡鳌\",4,\"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄\"],[\"f840\",\"鳣\",62],[\"f880\",\"鴢\",32],[\"f940\",\"鵃\",62],[\"f980\",\"鶂\",32],[\"fa40\",\"鶣\",62],[\"fa80\",\"鷢\",32],[\"fb40\",\"鸃\",27,\"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴\",9,\"麀\"],[\"fb80\",\"麁麃麄麅麆麉麊麌\",5,\"麔\",8,\"麞麠\",5,\"麧麨麩麪\"],[\"fc40\",\"麫\",8,\"麵麶麷麹麺麼麿\",4,\"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰\",8,\"黺黽黿\",6],[\"fc80\",\"鼆\",4,\"鼌鼏鼑鼒鼔鼕鼖鼘鼚\",5,\"鼡鼣\",8,\"鼭鼮鼰鼱\"],[\"fd40\",\"鼲\",4,\"鼸鼺鼼鼿\",4,\"齅\",10,\"齒\",38],[\"fd80\",\"齹\",5,\"龁龂龍\",11,\"龜龝龞龡\",4,\"郎凉秊裏隣\"],[\"fe40\",\"兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩\"]]");

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(37);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(103);
var combineURLs = __webpack_require__(104);

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Unit3D; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3);
/* harmony import */ var url_join__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20);
/* harmony import */ var url_join__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(url_join__WEBPACK_IMPORTED_MODULE_4__);





/**
 * Trans Array
 * Source: https://github.com/HDInnovations/UNIT3D-Community-Edition/commit/cb1efe0868caf771b9917c090a79b28b4e183b74
 */
const idTrans = ['User ID', '用户ID', '用ID'];
const seedingSizeTrans = ['Seeding Size', '做种体积', '做種體積'];
const joinTimeTrans = ['Registration date', '注册日期', '註冊日期'];
class Unit3D extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super(...arguments);
        this.initConfig = {
            timezoneOffset: '+0000',
            search: {
                keywordsParam: 'search',
                requestConfig: {
                    url: '/torrents/filter',
                    responseType: 'document',
                    params: {
                        view: 'list' // 强制使用 种子列表 的形式返回
                    }
                }
            },
            selector: {
                search: {
                    rows: { selector: 'div.table-responsive > table:first > tbody > tr' },
                    /**
                     * 未发现 Unit3D 站点对于种子列表有太大改动，所以直接硬写选择器而不是和 NPHP 一样自动生成
                     * based on: https://github.com/HDInnovations/UNIT3D-Community-Edition/blob/cb1efe0868caf771b9917c090a79b28b4e183b74
                     */
                    id: {
                        selector: ['a.view-torrent'],
                        attr: 'href',
                        filters: [
                            (query) => query.match(/\/torrents\/(\d+)/)[1]
                        ]
                    },
                    title: {
                        selector: ['a.view-torrent']
                    },
                    subTitle: {
                        text: '' // Unit3D 并不在种子列表页显示副标题，或者说他们就没有副标题的设计
                    },
                    url: {
                        selector: ['a.view-torrent'],
                        attr: 'href'
                    },
                    // /resources/views/torrent/results.blade.php#L367-L381
                    link: {
                        selector: ["a[href*='/download/']", "a[href*='/download_check/']"],
                        attr: 'href',
                        filters: [
                            (query) => query.replace('/download_check/', '/download/')
                        ]
                    },
                    // /resources/views/torrent/results.blade.php#L399-L401
                    time: { selector: ['time'], filters: [{ name: 'parseTTL' }] },
                    // /resources/views/torrent/results.blade.php#L402-L404
                    size: {
                        selector: ['td:eq(7):contains("B")']
                    },
                    // /resources/views/torrent/results.blade.php#L166-L184
                    author: {
                        selector: ['span:has( > i.fa-upload)'],
                        filters: [
                            (query) => query.replace(/ +\(/, ' (') // 防止可以看见匿名等级的用户中间有一堆空格。。。
                        ]
                    },
                    // /resources/views/torrent/results.blade.php#L95-L113
                    category: {
                        selector: ['a[href*="/categories/"] > div > img[data-original-title]', 'a[href*="/categories/"] > div > i[data-original-title]'],
                        data: 'originalTitle',
                        filters: [
                            (query) => query.split(' ').slice(0, -1).join(' ')
                        ]
                    },
                    // /resources/views/torrent/results.blade.php#L405-L426
                    seeders: {
                        selector: ['a[href*="/peers"] > span.text-green']
                    },
                    leechers: {
                        selector: ['a[href*="/peers"] > span.text-red']
                    },
                    completed: {
                        selector: ['a[href*="/history"] > span.text-orange'],
                        filters: [
                            (query) => query.split(' ').slice(0, -1).join('')
                        ]
                    },
                    // /resources/views/torrent/results.blade.php#L213-L219
                    comments: {
                        selector: ['a[href*="#comments"]']
                    },
                    status: {
                        text: _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].unknown,
                        selector: [
                            'button.btn.btn-success.btn-circle',
                            'button.btn.btn-warning.btn-circle',
                            'button.btn.btn-info.btn-circle',
                            'button.btn.btn-danger.btn-circle' // 撤种!
                        ],
                        switchFilters: [
                            () => _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].seeding,
                            () => _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].downloading,
                            () => _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].inactive,
                            () => _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].completed
                        ]
                    },
                    progress: {
                        text: 0,
                        selector: [
                            'button.btn.btn-success.btn-circle',
                            'button.btn.btn-warning.btn-circle, button.btn.btn-info.btn-circle, button.btn.btn-danger.btn-circle'
                        ],
                        switchFilters: [
                            () => 100,
                            () => 0 // 不清楚非做种情况下的进度信息，统一置为0
                        ]
                    },
                    tags: [
                        { name: 'Free', selector: 'i.fa-star.text-gold, i.fa-globe.text-blue' },
                        { name: '2xUp', selector: 'i.fa-gem.text-green' }
                    ]
                },
                userInfo: {
                    // '/'
                    name: {
                        selector: ["a[href*='settings']:first"],
                        attr: 'href',
                        filters: [
                            (query) => {
                                const queryMatch = query.match(/users\/(.+)\/settings/);
                                return queryMatch && queryMatch.length >= 2 ? queryMatch[1] : '';
                            }
                        ]
                    },
                    uploaded: {
                        selector: ['div.ratio-bar span:has( > i.fa-arrow-up)'],
                        filters: [{ name: 'parseSize' }]
                    },
                    downloaded: {
                        selector: ['div.ratio-bar span:has( > i.fa-arrow-down)'],
                        filters: [{ name: 'parseSize' }]
                    },
                    bonus: {
                        selector: ['div.ratio-bar span:has( > i.fa-coins)'],
                        filters: [{ name: 'parseNumber' }]
                    },
                    seeding: {
                        selector: ['div.ratio-bar span:has( > i.fa-upload)'],
                        filters: [
                            (query) => {
                                const queryMatch = query.replace(/[,\n]/g, '').match(/:.+?([\d.]+)/);
                                return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                            }
                        ]
                    },
                    leeching: {
                        selector: ['div.ratio-bar span:has( > i.fa-download)'],
                        filters: [
                            (query) => {
                                const queryMatch = query.replace(/[,\n]/g, '').match(/:.+?([\d.]+)/);
                                return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                            }
                        ]
                    },
                    // "/users/$user.name$"
                    id: {
                        selector: idTrans.map(x => `td:contains('${x}') + td`),
                        filters: [
                            (query) => parseInt(query || '0')
                        ]
                    },
                    seedingSize: {
                        // table.table-condensed:first
                        selector: seedingSizeTrans.map(x => `td:contains('${x}') + td`),
                        filters: [
                            (query) => Object(_shared_filter__WEBPACK_IMPORTED_MODULE_2__[/* parseSizeString */ "f"])(query.replace(/,/g, ''))
                        ]
                    },
                    levelName: {
                        selector: 'div.content span.badge-user'
                    },
                    messageCount: {
                        text: 0,
                        selector: ['a[href*="/mail/inbox"] .point'],
                        elementProcess: () => 11 // 并不能直接知道还有多少个消息未读，所以置为11，会直接出线红点而不是具体数字
                    },
                    joinTime: {
                        selector: joinTimeTrans.map(x => `div.content h4:contains('${x}')`),
                        filters: [
                            (query) => {
                                query = query.replace(RegExp(joinTimeTrans.join('|')), '').trim();
                                return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(query).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(query).valueOf() : query;
                            }
                        ]
                    }
                }
            }
        };
    }
    async flushUserInfo(lastUserInfo = {}) {
        let flushUserInfo = {};
        let userName;
        if (lastUserInfo !== null && lastUserInfo.name) {
            userName = lastUserInfo.name;
        }
        else {
            // 如果没有 id 信息，则访问一次 index.php
            userName = await this.getUserNameFromSite();
        }
        flushUserInfo.name = userName;
        // 导入基本 Details 页面获取到的用户信息
        flushUserInfo = Object.assign(flushUserInfo, await this.getUserInfoFromDetailsPage(userName));
        return flushUserInfo;
    }
    async getUserNameFromSite() {
        var _a, _b;
        const { data: indexDocument } = await this.request({ url: '/', responseType: 'document', checkLogin: true });
        return this.getFieldData(indexDocument, (_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.userInfo) === null || _b === void 0 ? void 0 : _b.name);
    }
    async getUserInfoFromDetailsPage(userName) {
        const { data: userDetailDocument } = await this.request({
            url: url_join__WEBPACK_IMPORTED_MODULE_4___default()('/users', userName),
            responseType: 'document'
        });
        const detailsPageAttrs = [
            'id', 'messageCount', 'uploaded', 'downloaded',
            'levelName', 'bonus', 'joinTime', 'seeding', 'seedingSize', 'leeching'
        ];
        return this.getFieldsData(userDetailDocument, 'userInfo', detailsPageAttrs);
    }
}


/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50);


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* harmony default export */ __webpack_exports__["a"] = (nodeUtil);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(64)(module)))

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(11);
var normalizeHeaderName = __webpack_require__(100);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(74);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(74);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(63)))

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);
var settle = __webpack_require__(66);
var cookies = __webpack_require__(102);
var buildURL = __webpack_require__(48);
var buildFullPath = __webpack_require__(67);
var parseHeaders = __webpack_require__(68);
var isURLSameOrigin = __webpack_require__(105);
var createError = __webpack_require__(37);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(175)
var ieee754 = __webpack_require__(176)
var isArray = __webpack_require__(177)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(62)))

/***/ }),
/* 78 */
/***/ (function(module) {

module.exports = JSON.parse("[[\"a140\",\"\",62],[\"a180\",\"\",32],[\"a240\",\"\",62],[\"a280\",\"\",32],[\"a2ab\",\"\",5],[\"a2e3\",\"€\"],[\"a2ef\",\"\"],[\"a2fd\",\"\"],[\"a340\",\"\",62],[\"a380\",\"\",31,\"　\"],[\"a440\",\"\",62],[\"a480\",\"\",32],[\"a4f4\",\"\",10],[\"a540\",\"\",62],[\"a580\",\"\",32],[\"a5f7\",\"\",7],[\"a640\",\"\",62],[\"a680\",\"\",32],[\"a6b9\",\"\",7],[\"a6d9\",\"\",6],[\"a6ec\",\"\"],[\"a6f3\",\"\"],[\"a6f6\",\"\",8],[\"a740\",\"\",62],[\"a780\",\"\",32],[\"a7c2\",\"\",14],[\"a7f2\",\"\",12],[\"a896\",\"\",10],[\"a8bc\",\"\"],[\"a8bf\",\"ǹ\"],[\"a8c1\",\"\"],[\"a8ea\",\"\",20],[\"a958\",\"\"],[\"a95b\",\"\"],[\"a95d\",\"\"],[\"a989\",\"〾⿰\",11],[\"a997\",\"\",12],[\"a9f0\",\"\",14],[\"aaa1\",\"\",93],[\"aba1\",\"\",93],[\"aca1\",\"\",93],[\"ada1\",\"\",93],[\"aea1\",\"\",93],[\"afa1\",\"\",93],[\"d7fa\",\"\",4],[\"f8a1\",\"\",93],[\"f9a1\",\"\",93],[\"faa1\",\"\",93],[\"fba1\",\"\",93],[\"fca1\",\"\",93],[\"fda1\",\"\",93],[\"fe50\",\"⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌\"],[\"fe80\",\"䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓\",6,\"䶮\",93]]");

/***/ }),
/* 79 */
/***/ (function(module) {

module.exports = JSON.parse("[[\"0\",\"\\u0000\",127],[\"a140\",\"　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚\"],[\"a1a1\",\"﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢\",4,\"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／\"],[\"a240\",\"＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁\",7,\"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭\"],[\"a2a1\",\"╮╰╯═╞╪╡◢◣◥◤╱╲╳０\",9,\"Ⅰ\",9,\"〡\",8,\"十卄卅Ａ\",25,\"ａ\",21],[\"a340\",\"ｗｘｙｚΑ\",16,\"Σ\",6,\"α\",16,\"σ\",6,\"ㄅ\",10],[\"a3a1\",\"ㄐ\",25,\"˙ˉˊˇˋ\"],[\"a3e1\",\"€\"],[\"a440\",\"一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才\"],[\"a4a1\",\"丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙\"],[\"a540\",\"世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外\"],[\"a5a1\",\"央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全\"],[\"a640\",\"共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年\"],[\"a6a1\",\"式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣\"],[\"a740\",\"作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍\"],[\"a7a1\",\"均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠\"],[\"a840\",\"杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒\"],[\"a8a1\",\"芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵\"],[\"a940\",\"咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居\"],[\"a9a1\",\"屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊\"],[\"aa40\",\"昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠\"],[\"aaa1\",\"炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附\"],[\"ab40\",\"陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品\"],[\"aba1\",\"哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷\"],[\"ac40\",\"拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗\"],[\"aca1\",\"活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄\"],[\"ad40\",\"耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥\"],[\"ada1\",\"迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪\"],[\"ae40\",\"哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙\"],[\"aea1\",\"恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓\"],[\"af40\",\"浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷\"],[\"afa1\",\"砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃\"],[\"b040\",\"虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡\"],[\"b0a1\",\"陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀\"],[\"b140\",\"娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽\"],[\"b1a1\",\"情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺\"],[\"b240\",\"毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶\"],[\"b2a1\",\"瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼\"],[\"b340\",\"莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途\"],[\"b3a1\",\"部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠\"],[\"b440\",\"婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍\"],[\"b4a1\",\"插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋\"],[\"b540\",\"溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘\"],[\"b5a1\",\"窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁\"],[\"b640\",\"詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑\"],[\"b6a1\",\"間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼\"],[\"b740\",\"媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業\"],[\"b7a1\",\"楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督\"],[\"b840\",\"睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫\"],[\"b8a1\",\"腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊\"],[\"b940\",\"辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴\"],[\"b9a1\",\"飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇\"],[\"ba40\",\"愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢\"],[\"baa1\",\"滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬\"],[\"bb40\",\"罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤\"],[\"bba1\",\"說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜\"],[\"bc40\",\"劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂\"],[\"bca1\",\"慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃\"],[\"bd40\",\"瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯\"],[\"bda1\",\"翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞\"],[\"be40\",\"輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉\"],[\"bea1\",\"鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡\"],[\"bf40\",\"濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊\"],[\"bfa1\",\"縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚\"],[\"c040\",\"錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇\"],[\"c0a1\",\"嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬\"],[\"c140\",\"瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪\"],[\"c1a1\",\"薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁\"],[\"c240\",\"駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘\"],[\"c2a1\",\"癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦\"],[\"c340\",\"鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸\"],[\"c3a1\",\"獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類\"],[\"c440\",\"願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼\"],[\"c4a1\",\"纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴\"],[\"c540\",\"護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬\"],[\"c5a1\",\"禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒\"],[\"c640\",\"讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲\"],[\"c940\",\"乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕\"],[\"c9a1\",\"氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋\"],[\"ca40\",\"汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘\"],[\"caa1\",\"吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇\"],[\"cb40\",\"杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓\"],[\"cba1\",\"芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢\"],[\"cc40\",\"坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋\"],[\"cca1\",\"怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲\"],[\"cd40\",\"泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺\"],[\"cda1\",\"矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏\"],[\"ce40\",\"哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛\"],[\"cea1\",\"峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺\"],[\"cf40\",\"柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂\"],[\"cfa1\",\"洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀\"],[\"d040\",\"穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪\"],[\"d0a1\",\"苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱\"],[\"d140\",\"唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧\"],[\"d1a1\",\"恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤\"],[\"d240\",\"毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸\"],[\"d2a1\",\"牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐\"],[\"d340\",\"笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢\"],[\"d3a1\",\"荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐\"],[\"d440\",\"酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅\"],[\"d4a1\",\"唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏\"],[\"d540\",\"崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟\"],[\"d5a1\",\"捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉\"],[\"d640\",\"淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏\"],[\"d6a1\",\"痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟\"],[\"d740\",\"耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷\"],[\"d7a1\",\"蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪\"],[\"d840\",\"釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷\"],[\"d8a1\",\"堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔\"],[\"d940\",\"惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒\"],[\"d9a1\",\"晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞\"],[\"da40\",\"湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖\"],[\"daa1\",\"琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥\"],[\"db40\",\"罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳\"],[\"dba1\",\"菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺\"],[\"dc40\",\"軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈\"],[\"dca1\",\"隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆\"],[\"dd40\",\"媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤\"],[\"dda1\",\"搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼\"],[\"de40\",\"毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓\"],[\"dea1\",\"煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓\"],[\"df40\",\"稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯\"],[\"dfa1\",\"腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤\"],[\"e040\",\"觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿\"],[\"e0a1\",\"遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠\"],[\"e140\",\"凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠\"],[\"e1a1\",\"寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉\"],[\"e240\",\"榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊\"],[\"e2a1\",\"漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓\"],[\"e340\",\"禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞\"],[\"e3a1\",\"耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻\"],[\"e440\",\"裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍\"],[\"e4a1\",\"銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘\"],[\"e540\",\"噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉\"],[\"e5a1\",\"憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒\"],[\"e640\",\"澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙\"],[\"e6a1\",\"獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟\"],[\"e740\",\"膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢\"],[\"e7a1\",\"蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧\"],[\"e840\",\"踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓\"],[\"e8a1\",\"銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮\"],[\"e940\",\"噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺\"],[\"e9a1\",\"憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸\"],[\"ea40\",\"澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙\"],[\"eaa1\",\"瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘\"],[\"eb40\",\"蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠\"],[\"eba1\",\"諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌\"],[\"ec40\",\"錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕\"],[\"eca1\",\"魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎\"],[\"ed40\",\"檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶\"],[\"eda1\",\"瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞\"],[\"ee40\",\"蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞\"],[\"eea1\",\"謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜\"],[\"ef40\",\"鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰\"],[\"efa1\",\"鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶\"],[\"f040\",\"璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒\"],[\"f0a1\",\"臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧\"],[\"f140\",\"蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪\"],[\"f1a1\",\"鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰\"],[\"f240\",\"徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛\"],[\"f2a1\",\"礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕\"],[\"f340\",\"譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦\"],[\"f3a1\",\"鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲\"],[\"f440\",\"嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩\"],[\"f4a1\",\"禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿\"],[\"f540\",\"鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛\"],[\"f5a1\",\"鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥\"],[\"f640\",\"蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺\"],[\"f6a1\",\"騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚\"],[\"f740\",\"糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊\"],[\"f7a1\",\"驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾\"],[\"f840\",\"讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏\"],[\"f8a1\",\"齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚\"],[\"f940\",\"纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊\"],[\"f9a1\",\"龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓\"]]");

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 2020 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 7.0.0
*/
!function(e,i){ true?module.exports=i():undefined}(this,(function(){"use strict";var e=/^(b|B)$/,i={iec:{bits:["b","Kib","Mib","Gib","Tib","Pib","Eib","Zib","Yib"],bytes:["B","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"]},jedec:{bits:["b","Kb","Mb","Gb","Tb","Pb","Eb","Zb","Yb"],bytes:["B","KB","MB","GB","TB","PB","EB","ZB","YB"]}},t={iec:["","kibi","mebi","gibi","tebi","pebi","exbi","zebi","yobi"],jedec:["","kilo","mega","giga","tera","peta","exa","zetta","yotta"]},o={floor:Math.floor,ceil:Math.ceil};function n(n){var r,a,b,l,s,c,d,f,p,u,B,h,g,y,M,m,v,x,N,j,T,E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},w=[],P=0;if(isNaN(n))throw new TypeError("Invalid number");if(b=!0===E.bits,M=!0===E.unix,h=!0===E.pad,a=E.base||2,g=void 0!==E.round?E.round:M?1:2,d=void 0!==E.locale?E.locale:"",f=E.localeOptions||{},m=void 0!==E.separator?E.separator:"",v=void 0!==E.spacer?E.spacer:M?"":" ",N=E.symbols||{},x=2===a&&E.standard||"jedec",B=E.output||"string",s=!0===E.fullform,c=E.fullforms instanceof Array?E.fullforms:[],r=void 0!==E.exponent?E.exponent:-1,j=o[E.roundingMethod]||Math.round,p=(u=Number(n))<0,l=a>2?1e3:1024,T=!1===isNaN(E.precision)?parseInt(E.precision,10):0,p&&(u=-u),(-1===r||isNaN(r))&&(r=Math.floor(Math.log(u)/Math.log(l)))<0&&(r=0),r>8&&(T>0&&(T+=8-r),r=8),"exponent"===B)return r;if(0===u)w[0]=0,y=w[1]=M?"":i[x][b?"bits":"bytes"][r];else{P=u/(2===a?Math.pow(2,10*r):Math.pow(1e3,r)),b&&(P*=8)>=l&&r<8&&(P/=l,r++);var k=Math.pow(10,r>0?g:0);w[0]=j(P*k)/k,w[0]===l&&r<8&&void 0===E.exponent&&(w[0]=1,r++),y=w[1]=10===a&&1===r?b?"kb":"kB":i[x][b?"bits":"bytes"][r],M&&(w[1]="jedec"===x?w[1].charAt(0):r>0?w[1].replace(/B$/,""):w[1],e.test(w[1])&&(w[0]=Math.floor(w[0]),w[1]=""))}if(p&&(w[0]=-w[0]),T>0&&(w[0]=w[0].toPrecision(T)),w[1]=N[w[1]]||w[1],!0===d?w[0]=w[0].toLocaleString():d.length>0?w[0]=w[0].toLocaleString(d,f):m.length>0&&(w[0]=w[0].toString().replace(".",m)),h&&!1===Number.isInteger(w[0])&&g>0){var G=m||".",K=w[0].toString().split(G),S=K[1]||"",Y=S.length,Z=g-Y;w[0]="".concat(K[0]).concat(G).concat(S.padEnd(Y+Z,"0"))}return s&&(w[1]=c[r]?c[r]:t[x][r]+(b?"bit":"byte")+(1===w[0]?"":"s")),"array"===B?w:"object"===B?{value:w[0],symbol:w[1],exponent:r,unit:y}:w.join(v)}return n.partial=function(e){return function(i){return n(i,e)}},n}));
//# sourceMappingURL=filesize.min.js.map


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():undefined}(this,(function(){"use strict";var t={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},e=/(\[[^[]*\])|([-:/.()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\d\d/,r=/\d\d?/,i=/\d*[^\s\d-_:/()]+/,o={},s=function(t){return(t=+t)+(t>68?1900:2e3)};var a=function(t){return function(e){this[t]=+e}},f=[/[+-]\d\d:?(\d\d)?|Z/,function(t){(this.zone||(this.zone={})).offset=function(t){if(!t)return 0;if("Z"===t)return 0;var e=t.match(/([+-]|\d\d)/g),n=60*e[1]+(+e[2]||0);return 0===n?0:"+"===e[0]?-n:n}(t)}],u=function(t){var e=o[t];return e&&(e.indexOf?e:e.s.concat(e.f))},h=function(t,e){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(t.indexOf(r(i,0,e))>-1){n=i>12;break}}else n=t===(e?"pm":"PM");return n},d={A:[i,function(t){this.afternoon=h(t,!1)}],a:[i,function(t){this.afternoon=h(t,!0)}],S:[/\d/,function(t){this.milliseconds=100*+t}],SS:[n,function(t){this.milliseconds=10*+t}],SSS:[/\d{3}/,function(t){this.milliseconds=+t}],s:[r,a("seconds")],ss:[r,a("seconds")],m:[r,a("minutes")],mm:[r,a("minutes")],H:[r,a("hours")],h:[r,a("hours")],HH:[r,a("hours")],hh:[r,a("hours")],D:[r,a("day")],DD:[n,a("day")],Do:[i,function(t){var e=o.ordinal,n=t.match(/\d+/);if(this.day=n[0],e)for(var r=1;r<=31;r+=1)e(r).replace(/\[|\]/g,"")===t&&(this.day=r)}],M:[r,a("month")],MM:[n,a("month")],MMM:[i,function(t){var e=u("months"),n=(u("monthsShort")||e.map((function(t){return t.substr(0,3)}))).indexOf(t)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(t){var e=u("months").indexOf(t)+1;if(e<1)throw new Error;this.month=e%12||e}],Y:[/[+-]?\d+/,a("year")],YY:[n,function(t){this.year=s(t)}],YYYY:[/\d{4}/,a("year")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(e,n,r){var o=r&&r.toUpperCase();return n||i[r]||t[r]||i[o].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(t,e,n){return e||n.slice(1)}))}))).match(e),a=s.length,f=0;f<a;f+=1){var u=s[f],h=d[u],c=h&&h[0],l=h&&h[1];s[f]=l?{regex:c,parser:l}:u.replace(/^\[|\]$/g,"")}return function(t){for(var e={},n=0,r=0;n<a;n+=1){var i=s[n];if("string"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,u=t.substr(r),h=o.exec(u)[0];f.call(e,h),t=t.replace(h,"")}}return function(t){var e=t.afternoon;if(void 0!==e){var n=t.hours;e?n<12&&(t.hours+=12):12===n&&(t.hours=0),delete t.afternoon}}(e),e}}return function(t,e,n){n.p.customParseFormat=!0,t&&t.parseTwoDigitYear&&(s=t.parseTwoDigitYear);var r=e.prototype,i=r.parse;r.parse=function(t){var e=t.date,r=t.utc,s=t.args;this.$u=r;var a=s[1];if("string"==typeof a){var f=!0===s[2],u=!0===s[3],h=f||u,d=s[2];u&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(t,e,n){try{if(["x","X"].indexOf(e)>-1)return new Date(("X"===e?1e3:1)*t);var r=c(e)(t),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,u=r.seconds,h=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=u||0,g=h||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(t){return new Date("")}}(e,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),h&&e!==this.format(a)&&(this.$d=new Date("")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(""))}else i.call(this,t)}}}));

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():undefined}(this,(function(){"use strict";return function(e,t,r){var n=t.prototype,s=n.format;r.en.ordinal=function(e){var t=["th","st","nd","rd"],r=e%100;return"["+e+(t[(r-20)%10]||t[r]||t[0])+"]"},n.format=function(e){var t=this,r=this.$locale(),n=this.$utils(),a=(e||"YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case"Q":return Math.ceil((t.$M+1)/3);case"Do":return r.ordinal(t.$D);case"gggg":return t.weekYear();case"GGGG":return t.isoWeekYear();case"wo":return r.ordinal(t.week(),"W");case"w":case"ww":return n.s(t.week(),"w"===e?1:2,"0");case"W":case"WW":return n.s(t.isoWeek(),"W"===e?1:2,"0");case"k":case"kk":return n.s(String(0===t.$H?24:t.$H),"k"===e?1:2,"0");case"X":return Math.floor(t.$d.getTime()/1e3);case"x":return t.$d.getTime();case"z":return"["+t.offsetName()+"]";case"zzz":return"["+t.offsetName("long")+"]";default:return e}}));return s.bind(this)(a)}}}));

/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/* harmony default export */ __webpack_exports__["a"] = (stubFalse);


/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (cloneBuffer);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(64)(module)))

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**!
 * urlencode - lib/urlencode.js
 *
 * MIT Licensed
 *
 * Authors:
 *   fengmk2 <fengmk2@gmail.com> (http://fengmk2.com)
 */



/**
 * Module dependencies.
 */

var iconv = __webpack_require__(174);

function isUTF8(charset) {
  if (!charset) {
    return true;
  }
  charset = charset.toLowerCase();
  return charset === 'utf8' || charset === 'utf-8';
}

function encode(str, charset) {
  if (isUTF8(charset)) {
    return encodeURIComponent(str);
  }

  var buf = iconv.encode(str, charset);
  var encodeStr = '';
  var ch = '';
  for (var i = 0; i < buf.length; i++) {
    ch = buf[i].toString('16');
    if (ch.length === 1) {
      ch = '0' + ch;
    }
    encodeStr += '%' + ch;
  }
  encodeStr = encodeStr.toUpperCase();
  return encodeStr;
}

function decode(str, charset) {
  if (isUTF8(charset)) {
    return decodeURIComponent(str);
  }

  var bytes = [];
  for (var i = 0; i < str.length; ) {
    if (str[i] === '%') {
      i++;
      bytes.push(parseInt(str.substring(i, i + 2), 16));
      i += 2;
    } else {
      bytes.push(str.charCodeAt(i));
      i++;
    }
  }
  var buf = new Buffer(bytes);
  return iconv.decode(buf, charset);
}

function parse(qs, sep, eq, options) {
  if (typeof sep === 'object') {
    // parse(qs, options)
    options = sep;
    sep = null;
  }

  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  var charset = null;
  if (options) {
    if (typeof options.maxKeys === 'number') {
      maxKeys = options.maxKeys;
    }
    if (typeof options.charset === 'string') {
      charset = options.charset;
    }
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20');
    var idx = x.indexOf(eq);
    var kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    if (kstr && kstr.indexOf('%') >= 0) {
      try {
        k = decode(kstr, charset);
      } catch (e) {
        k = kstr;
      }
    } else {
      k = kstr;
    }

    if (vstr && vstr.indexOf('%') >= 0) {
      try {
        v = decode(vstr, charset);
      } catch (e) {
        v = vstr;
      }
    } else {
      v = vstr;
    }

    if (!has(obj, k)) {
      obj[k] = v;
    } else if (Array.isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
}

function has(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

function isASCII(str) {
  return (/^[\x00-\x7F]*$/).test(str);
}

function encodeComponent(item, charset) {
  item = String(item);
  if (isASCII(item)) {
    item = encodeURIComponent(item);
  } else {
    item = encode(item, charset);
  }
  return item;
}

var stringify = function(obj, prefix, options) {
  if (typeof prefix !== 'string') {
    options = prefix || {};
    prefix = null;
  }
  var charset = options.charset || 'utf-8';
  if (Array.isArray(obj)) {
    return stringifyArray(obj, prefix, options);
  } else if ('[object Object]' === {}.toString.call(obj)) {
    return stringifyObject(obj, prefix, options);
  } else if ('string' === typeof obj) {
    return stringifyString(obj, prefix, options);
  } else {
    return prefix + '=' + encodeComponent(String(obj), charset);
  }
};

function stringifyString(str, prefix, options) {
  if (!prefix) {
    throw new TypeError('stringify expects an object');
  }
  var charset = options.charset;
  return prefix + '=' + encodeComponent(str, charset);
}

function stringifyArray(arr, prefix, options) {
  var ret = [];
  if (!prefix) {
    throw new TypeError('stringify expects an object');
  }
  for (var i = 0; i < arr.length; i++) {
    ret.push(stringify(arr[i], prefix + '[' + i + ']', options));
  }
  return ret.join('&');
}

function stringifyObject(obj, prefix, options) {
  var ret = [];
  var keys = Object.keys(obj);
  var key;

  var charset = options.charset;
  for (var i = 0, len = keys.length; i < len; ++i) {
    key = keys[i];
    if ('' === key) {
      continue;
    }
    if (null === obj[key]) {
      ret.push(encode(key, charset) + '=');
    } else {
      ret.push(stringify(
        obj[key],
        prefix ? prefix + '[' + encodeComponent(key, charset) + ']': encodeComponent(key, charset),
        options));
    }
  }

  return ret.join('&');
}

module.exports = encode;
module.exports.encode = encode;
module.exports.decode = decode;
module.exports.parse = parse;
module.exports.stringify = stringify;


/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _baseMerge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);
/* harmony import */ var _createAssigner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = Object(_createAssigner_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(function(object, source, srcIndex) {
  Object(_baseMerge_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(object, source, srcIndex);
});

/* harmony default export */ __webpack_exports__["a"] = (merge);


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./private/1ptba.ts": 88,
	"./private/52pt.ts": 89,
	"./private/aidoruonline.ts": 90,
	"./private/alpharatio.ts": 91,
	"./private/animebytes.ts": 92,
	"./private/animetorrents.ts": 109,
	"./private/anthelion.ts": 110,
	"./private/asiancinema.ts": 111,
	"./private/avgv.ts": 112,
	"./private/avistaz.ts": 113,
	"./private/baconbits.ts": 114,
	"./private/beitai.ts": 115,
	"./private/bemaniso.ts": 116,
	"./private/beyondhd.ts": 117,
	"./private/bibliotik.ts": 118,
	"./private/blutopia.ts": 119,
	"./private/broadcasthe.ts": 120,
	"./private/brokenstones.ts": 121,
	"./private/btschool.ts": 122,
	"./private/bwtorrents.ts": 123,
	"./private/byrbt.ts": 124,
	"./private/ccfbits.ts": 125,
	"./private/cgpeers.ts": 126,
	"./private/chdbits.ts": 127,
	"./private/cinemageddon.ts": 128,
	"./private/cinematik.ts": 129,
	"./private/cinemaz.ts": 130,
	"./private/concertos.ts": 131,
	"./private/dicmusic.ts": 132,
	"./private/discfan.ts": 133,
	"./private/dxdhd.ts": 134,
	"./private/empornium.ts": 135,
	"./private/exoticaz.ts": 136,
	"./private/extremlymtorrents.ts": 137,
	"./private/filelist.ts": 138,
	"./private/gazellegames.ts": 139,
	"./private/gfxpeers.ts": 140,
	"./private/hd4fans.ts": 141,
	"./private/hdai.ts": 277,
	"./private/hdarea.ts": 142,
	"./private/hdatmos.ts": 143,
	"./private/hdbd.ts": 144,
	"./private/hdbits.ts": 145,
	"./private/hdchina.ts": 30,
	"./private/hdcity.ts": 146,
	"./private/hddolby.ts": 147,
	"./private/hdfans.ts": 148,
	"./private/hdforever.ts": 149,
	"./private/hdhome.ts": 18,
	"./private/hdpost.ts": 150,
	"./private/hdroute.ts": 151,
	"./private/hdsky.ts": 152,
	"./private/hdspace.ts": 153,
	"./private/hdtime.ts": 154,
	"./private/hdtorrents.ts": 155,
	"./private/hdupt.ts": 156,
	"./private/hdzone.ts": 157,
	"./private/hitpt.ts": 158,
	"./private/hudbt.ts": 159,
	"./private/iptorrents.ts": 160,
	"./private/joyhd.ts": 161,
	"./private/jpopsuki.ts": 162,
	"./private/jptv.ts": 163,
	"./private/karagarga.ts": 164,
	"./private/keepfrds.ts": 165,
	"./private/lemonhd.ts": 166,
	"./private/lztr.ts": 167,
	"./private/morethantv.ts": 168,
	"./private/mteam.ts": 169,
	"./private/myanonamouse.ts": 170,
	"./private/nanyangpt.ts": 171,
	"./private/nebulance.ts": 172,
	"./private/neu6.ts": 173,
	"./private/nicept.ts": 197,
	"./private/npupt.ts": 198,
	"./private/nwsuaf6.ts": 199,
	"./private/opencd.ts": 200,
	"./private/oppaitime.ts": 201,
	"./private/orpheus.ts": 202,
	"./private/ourbits.ts": 203,
	"./private/passthepopcorn.ts": 204,
	"./private/pornbits.ts": 205,
	"./private/privatehd.ts": 206,
	"./private/pter.ts": 207,
	"./private/pthome.ts": 208,
	"./private/ptmsg.ts": 209,
	"./private/ptsbao.ts": 210,
	"./private/pttime.ts": 211,
	"./private/pussytorrents.ts": 212,
	"./private/redacted.ts": 213,
	"./private/sdbits.ts": 214,
	"./private/sjtu.ts": 215,
	"./private/skyeysnow.ts": 216,
	"./private/snakepop.ts": 217,
	"./private/soulvoice.ts": 218,
	"./private/springsunday.ts": 219,
	"./private/teamhd.ts": 220,
	"./private/tjupt.ts": 33,
	"./private/tlfbits.ts": 221,
	"./private/torrentccf.ts": 222,
	"./private/torrentday.ts": 223,
	"./private/torrentleech.ts": 224,
	"./private/torrentseeds.ts": 225,
	"./private/totheglory.ts": 226,
	"./private/u2.ts": 227,
	"./private/uhdbits.ts": 228,
	"./private/ultrahd.ts": 229,
	"./private/xauat6.ts": 230,
	"./public/1337x.ts": 231,
	"./public/7torrents.ts": 232,
	"./public/acgrip.ts": 233,
	"./public/acgsou.ts": 234,
	"./public/anidex.ts": 235,
	"./public/animeclipse.ts": 236,
	"./public/animetosho.ts": 237,
	"./public/anirena.ts": 238,
	"./public/anisource.ts": 239,
	"./public/btdb.ts": 240,
	"./public/btetree.ts": 241,
	"./public/concen.ts": 242,
	"./public/demonoid.ts": 243,
	"./public/dmhy.ts": 244,
	"./public/ehentai.ts": 245,
	"./public/ettv.ts": 246,
	"./public/extratorrent-cd.ts": 247,
	"./public/exttorrents.ts": 248,
	"./public/eztv.ts": 249,
	"./public/glodls.ts": 250,
	"./public/ibit.ts": 251,
	"./public/isohunt2.ts": 252,
	"./public/kisssub.ts": 253,
	"./public/legittorrents.ts": 254,
	"./public/limetorrents.ts": 255,
	"./public/magnet4you.ts": 256,
	"./public/montorrent.ts": 257,
	"./public/mypornclub.ts": 258,
	"./public/nyaa-pantsu.ts": 259,
	"./public/nyaa.ts": 260,
	"./public/oxtorrent.ts": 261,
	"./public/pornleech.ts": 262,
	"./public/rarbg.ts": 263,
	"./public/sexypics.ts": 264,
	"./public/solidtorrents.ts": 265,
	"./public/theprivatebay.ts": 266,
	"./public/tokyotosho.ts": 267,
	"./public/torlock.ts": 268,
	"./public/toros.ts": 269,
	"./public/torrent4you.ts": 270,
	"./public/torrentgalaxyorg.ts": 271,
	"./public/torrentparadise.ts": 272,
	"./public/torrentscsv.ts": 273,
	"./public/yourbittorrent.ts": 274,
	"./public/zooqle.ts": 275,
	"./schema/AbstractBittorrentSite.ts": 5,
	"./schema/AbstractPrivateSite.ts": 6,
	"./schema/AvistaZ.ts": 276,
	"./schema/Gazelle.ts": 31,
	"./schema/GazelleJSONAPI.ts": 9,
	"./schema/NexusPHP.ts": 16,
	"./schema/Unit3D.ts": 69
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 87;

/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: '1PTBar',
    schema: 'NexusPHP',
    url: 'https://1ptba.com/',
    description: '壹PT吧,PT下载,教育视频,课件资源,发布教育类,学习类,纪录片等资源',
    tags: ['影视', '综合']
};


/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: '52PT',
    schema: 'NexusPHP',
    url: 'https://52pt.site/',
    description: '52PT - 我爱PT-低调地在这个PT校园快乐成长 快乐分享',
    tags: ['高清', '电影', '电视剧'],
    collaborator: 'StarGazerQQD'
};


/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);
/**
 * 旧版迁移，未经测试
 * Rhilip, 2021.4.25
 */



const siteMetadata = {
    name: 'Aidoru!Online',
    timezoneOffset: '+0000',
    description: 'Aidoru!Online is a Private Torrent Tracker for Female Japanese Idol related files',
    favicon: 'https://aidoru-online.me/themes/default/images/favicon.ico',
    url: 'https://aidoru-online.me/',
    legacyUrl: [
        'https://aidoru-online.org/'
    ],
    tags: ['偶像'],
    search: {
        keywordsParam: 'searchstr',
        requestConfig: {
            url: '/get_ttable.php',
            params: {
                pcat: 'Show All',
                subbed: '',
                deadlive: 1,
                sortcol: 'id',
                sortorder: 'desc',
                startdt: '',
                enddt: ''
            }
        },
        categories: [
            {
                name: 'Category',
                key: 'scat',
                options: [
                    { value: 1, name: 'BD/DVDISO' },
                    { value: 2, name: 'BD/DVD-RIP' },
                    { value: 3, name: 'TV' },
                    { value: 4, name: 'Perf' },
                    { value: 5, name: 'PV' },
                    { value: 6, name: 'Webstream' },
                    { value: 7, name: 'Image' },
                    { value: 8, name: 'Audio' },
                    { value: 9, name: 'Album' },
                    { value: 10, name: 'Single' },
                    { value: 11, name: 'Radio' }
                ]
            }
        ]
    },
    userInfo: {
        process: [
            {
                requestConfig: {
                    url: '/index.php'
                },
                fields: ['name', 'messageCount', 'uploaded', 'downloaded', 'ratio', 'levelName', 'bonus']
            },
            {
                requestConfig: {
                    url: '/account.php'
                },
                fields: ['joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.ttable_headinner tr.t-row:has(a[href^="download.php?id="])' },
            id: {
                selector: 'a[href^="torrents-details.php?id="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: {
                selector: 'a[href^="torrents-details.php?id="]',
                attr: 'title'
            },
            url: {
                selector: 'a[href^="torrents-details.php?id="]',
                attr: 'href'
            },
            link: {
                selector: 'a[href^="download.php?id="]',
                attr: 'href'
            },
            time: {
                selector: 'td:last-child',
                filters: [(query) => `20${query}`]
            },
            size: { selector: 'td.ttable_size' },
            author: { selector: 'td:eq(4)' },
            category: {
                selector: 'a.category-link',
                case: {
                    ':contains("DVDISO")': 'BD/DVDISO',
                    ':contains("DVD-RIP")': 'BD/DVD-RIP',
                    ':contains("TV")': 'TV',
                    ':contains("Perf")': 'Perf',
                    ':contains("PV")': 'PV',
                    ':contains("Webstream")': 'Webstream',
                    ':contains("Image")': 'Image',
                    ':contains("Audio")': 'Audio',
                    ':contains("Album")': 'Album',
                    ':contains("Single")': 'Single',
                    ':contains("Radio")': 'Radio',
                    ':contains("Misc")': 'Misc'
                }
            },
            seeders: { selector: 'td:nth-last-child(4)' },
            leechers: { selector: 'td:nth-last-child(3)' },
            completed: { selector: 'td:nth-last-child(2)' },
            comments: { selector: 'td:eq(5)' },
            progress: {
                text: 0,
                selector: 'td.ttable_seeding font',
                attr: 'color',
                filters: [
                    (query) => {
                        if (query === 'green') {
                            return 100;
                        }
                        else if (query === 'black') {
                            return 0;
                        }
                        else {
                            return null;
                        }
                    }
                ]
            },
            status: {
                text: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown,
                selector: 'td.ttable_seeding font',
                attr: 'color',
                filters: [
                    (query) => {
                        if (query === 'green') {
                            return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                        }
                        else if (query === 'black') {
                            return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed;
                        }
                        else if (query === '#ff0000') {
                            return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                        }
                        else {
                            return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                        }
                    }
                ]
            },
            tags: [
                { selector: 'img[src="images/freeleech.png"]', name: 'Free' },
                { selector: 'img[src="images/freeleech2.png"]', name: '2xFree' }
            ]
        },
        userInfo: {
            // page: '/index.php',
            name: {
                selector: '#main > table .myBlock-caption:first'
            },
            messageCount: {
                selector: ["a[href*='/forum/private.php']"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(\d+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            uploaded: {
                selector: [".myBlock-content td:contains('Uploaded:') + td"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: [".myBlock-content td:contains('Downloaded:') + td"],
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: [".myBlock-content td:contains('Ratio:') + td"]
            },
            levelName: {
                selector: [".myBlock-content td:contains('Class:') + td"]
            },
            bonus: {
                text: 'N/A'
            },
            // page: '/account.php'
            joinTime: {
                selector: ["td.prof-lbl:contains('Joined:') + td"],
                filters: [{ name: 'parseTime' }]
            },
            seeding: {
                selector: ["b:contains('Currently seeding')"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(\d+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            seedingSize: {
                selector: ':self',
                elementProcess: (element) => {
                    let seedSize = 0;
                    const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_2___default()("b:contains('Currently seeding') + br + table tr:not(:first-child) > td:nth-child(4)", element);
                    sizeAnother.forEach(e => {
                        seedSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(e.innerText.trim());
                    });
                    return seedSize;
                }
            }
        }
    }
};


/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'AlphaRatio',
    timezoneOffset: '+0000',
    description: '0day',
    url: 'https://alpharatio.cc/',
    tags: ['综合', '0day'],
    schema: 'GazelleJSONAPI',
    collaborator: 'enigamz',
    search: {
        categories: [
            {
                name: 'Category',
                key: 'filter_cat',
                options: [
                    { value: 1, name: 'Tv/SD' },
                    { value: 2, name: 'Tv/HD' },
                    { value: 3, name: 'Tv/UHD' },
                    { value: 4, name: 'Tv/DVDRip' },
                    { value: 5, name: 'Tv/PackSD' },
                    { value: 6, name: 'Tv/PackHD' },
                    { value: 7, name: 'Tv/PackUHD' },
                    { value: 8, name: 'Movie/SD' },
                    { value: 9, name: 'Movie/HD' },
                    { value: 10, name: 'Movie/UHD' },
                    { value: 11, name: 'Movie/PackSD' },
                    { value: 12, name: 'Movie/PackHD' },
                    { value: 13, name: 'Movie/PackUHD' },
                    { value: 14, name: 'Movie/XXX' },
                    { value: 15, name: 'Bluray' },
                    { value: 16, name: 'Anime/SD' },
                    { value: 17, name: 'Anime/HD' },
                    { value: 18, name: 'Games/PC' },
                    { value: 19, name: 'Games/xBox' },
                    { value: 20, name: 'Games/PS' },
                    { value: 21, name: 'Games/Nin' },
                    { value: 22, name: 'Apps/Windows' },
                    { value: 23, name: 'Apps/MAC' },
                    { value: 24, name: 'Apps/Linux' },
                    { value: 25, name: 'Apps/Mobile' },
                    { value: 26, name: '0day/XXX' },
                    { value: 27, name: 'eBook' },
                    { value: 28, name: 'AudioBook' },
                    { value: 29, name: 'Music' },
                    { value: 30, name: 'Misc' }
                ],
                cross: { mode: 'append' }
            }
        ]
    }
};


/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return animebytes; });
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _schema_Gazelle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31);


const siteMetadata = {
    name: 'AB',
    timezoneOffset: '+0000',
    description: '动漫',
    url: 'https://animebytes.tv/',
    tags: ['动漫'],
    schema: 'Gazelle',
    host: 'animebytes.tv',
    selector: {
        userInfo: {
            id: {
                selector: ['#stats_menu > a:first'],
                attr: 'href',
                filters: [
                    (query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_0___default()(query, true).query.userid || '')
                ]
            },
            name: {
                selector: ['a.username:first']
            },
            uploaded: {
                selector: ["dt:contains('Uploaded:') + dd > span"],
                attr: 'title',
                filters: [(query) => query.replace(/,/g, '')]
            },
            downloaded: {
                selector: ["dt:contains('Downloaded:') + dd > span"],
                attr: 'title',
                filters: [(query) => query.replace(/,/g, '')]
            },
            ratio: {
                selector: ["dt:contains('Ratio:') + dd > span"],
                attr: 'title',
                filters: [(query) => query.replace(/,/g, '')]
            },
            seeding: {
                selector: ["dt:contains('Seeding:') + dd"],
                filters: [{ name: 'parseNumber' }]
            },
            seedingSize: {
                selector: ["dt:contains('Total seed size:') + dd > span"],
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: ["dt:contains('Class:') + dd"]
            },
            bonus: {
                selector: ['#yen_count > a'],
                filters: [(query) => query.replace(/,|\n|\s+|¥/g, '')]
            },
            joinTime: {
                selector: ["dt:contains('Joined:') + dd > span"]
            }
        }
    }
};
class animebytes extends _schema_Gazelle__WEBPACK_IMPORTED_MODULE_1__["default"] {
    // FIXME 暂时以一种强硬的方式表示不支持搜索
    async searchTorrents(filter) {
        throw new Error('Not Support Now.');
    }
}


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Check if we're required to add a port number.
 *
 * @see https://url.spec.whatwg.org/#default-port
 * @param {Number|String} port Port number we need to check
 * @param {String} protocol Protocol we need to check against.
 * @returns {Boolean} Is it a default port for the given protocol
 * @api private
 */
module.exports = function required(port, protocol) {
  protocol = protocol.split(':')[0];
  port = +port;

  if (!port) return false;

  switch (protocol) {
    case 'http':
    case 'ws':
    return port !== 80;

    case 'https':
    case 'wss':
    return port !== 443;

    case 'ftp':
    return port !== 21;

    case 'gopher':
    return port !== 70;

    case 'file':
    return false;
  }

  return port !== 0;
};


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty
  , undef;

/**
 * Decode a URI encoded string.
 *
 * @param {String} input The URI encoded string.
 * @returns {String|Null} The decoded string.
 * @api private
 */
function decode(input) {
  try {
    return decodeURIComponent(input.replace(/\+/g, ' '));
  } catch (e) {
    return null;
  }
}

/**
 * Attempts to encode a given input.
 *
 * @param {String} input The string that needs to be encoded.
 * @returns {String|Null} The encoded string.
 * @api private
 */
function encode(input) {
  try {
    return encodeURIComponent(input);
  } catch (e) {
    return null;
  }
}

/**
 * Simple query string parser.
 *
 * @param {String} query The query string that needs to be parsed.
 * @returns {Object}
 * @api public
 */
function querystring(query) {
  var parser = /([^=?#&]+)=?([^&]*)/g
    , result = {}
    , part;

  while (part = parser.exec(query)) {
    var key = decode(part[1])
      , value = decode(part[2]);

    //
    // Prevent overriding of existing properties. This ensures that build-in
    // methods like `toString` or __proto__ are not overriden by malicious
    // querystrings.
    //
    // In the case if failed decoding, we want to omit the key/value pairs
    // from the result.
    //
    if (key === null || value === null || key in result) continue;
    result[key] = value;
  }

  return result;
}

/**
 * Transform a query string to an object.
 *
 * @param {Object} obj Object that should be transformed.
 * @param {String} prefix Optional prefix.
 * @returns {String}
 * @api public
 */
function querystringify(obj, prefix) {
  prefix = prefix || '';

  var pairs = []
    , value
    , key;

  //
  // Optionally prefix with a '?' if needed
  //
  if ('string' !== typeof prefix) prefix = '?';

  for (key in obj) {
    if (has.call(obj, key)) {
      value = obj[key];

      //
      // Edge cases where we actually want to encode the value to an empty
      // string instead of the stringified value.
      //
      if (!value && (value === null || value === undef || isNaN(value))) {
        value = '';
      }

      key = encode(key);
      value = encode(value);

      //
      // If we failed to encode the strings, we should bail out as we don't
      // want to add invalid strings to the query.
      //
      if (key === null || value === null) continue;
      pairs.push(key +'='+ value);
    }
  }

  return pairs.length ? prefix + pairs.join('&') : '';
}

//
// Expose the module.
//
exports.stringify = querystringify;
exports.parse = querystring;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);
var bind = __webpack_require__(71);
var Axios = __webpack_require__(96);
var mergeConfig = __webpack_require__(75);
var defaults = __webpack_require__(73);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(76);
axios.CancelToken = __webpack_require__(106);
axios.isCancel = __webpack_require__(72);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(107);

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(108);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);
var buildURL = __webpack_require__(48);
var InterceptorManager = __webpack_require__(97);
var dispatchRequest = __webpack_require__(98);
var mergeConfig = __webpack_require__(75);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);
var transformData = __webpack_require__(99);
var isCancel = __webpack_require__(72);
var defaults = __webpack_require__(73);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(11);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(76);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);



const siteMetadata = {
    name: 'AnimeTorrents',
    timezoneOffset: '+0000',
    description: 'Definitive Source For Anime And Manga',
    url: 'https://animetorrents.me/',
    tags: ['动漫'],
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/ajax/torrents_data.php',
            params: {
                total: 146,
                SearchSubmit: '',
                page: 1,
                searchin: 'filename'
            },
            headers: {
                'x-requested-with': 'XMLHttpRequest'
            }
        },
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { value: 1, name: 'Anime Movie' },
                    { value: 6, name: 'Anime Movie HD' },
                    { value: 2, name: 'Anime Series' },
                    { value: 7, name: 'Anime Series HD' },
                    { value: 5, name: 'Hentai (censored)' },
                    { value: 9, name: 'Hentai (censored) HD' },
                    { value: 4, name: 'Hentai (un-censored)' },
                    { value: 8, name: 'Hentai (un-censored) HD' },
                    { value: 13, name: 'Light Novel' },
                    { value: 3, name: 'Manga' },
                    { value: 10, name: 'Manga 18+' },
                    { value: 11, name: 'OVA' },
                    { value: 12, name: 'OVA HD' },
                    { value: 14, name: 'Doujin Anime' },
                    { value: 15, name: 'Doujin Anime 18+' },
                    { value: 16, name: 'Doujin Music' },
                    { value: 17, name: 'Doujinshi' },
                    { value: 18, name: 'Doujinshi 18+' },
                    { value: 19, name: 'OST' }
                ]
            }
        ]
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'name', 'messageCount']
            },
            {
                requestConfig: { url: '/user-profile.php' },
                assertion: { id: 'uid' },
                fields: ['uploaded', 'downloaded', 'levelName', 'bonus', 'joinTime']
            },
            {
                requestConfig: {
                    url: '/ajax/user-active-torrents.php',
                    headers: {
                        'x-requested-with': 'XMLHttpRequest'
                    }
                },
                assertion: { id: 'uid' },
                fields: ['seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.dataTable:last > tbody > tr:gt(0)' },
            id: {
                selector: "a[href*='torrent-details.php?torid=']",
                attr: 'href',
                filters: [
                    (query) => url_parse__WEBPACK_IMPORTED_MODULE_0___default()(query, true).query.torid
                ]
            },
            title: { selector: "a[href*='torrent-details.php?torid=']" },
            subTitle: { text: '' },
            url: { selector: "a[href*='torrent-details.php?torid=']", attr: 'href' },
            link: { selector: "a[href*='/download.php?torid=']", attr: 'href' },
            time: {
                selector: 'td:nth-of-type(5)',
                filters: [{ name: 'parseTime', args: ['dd MMM yy'] }] // FIXME 需要检查
            },
            size: { selector: 'td:nth-of-type(6)' },
            author: { selector: 'td:nth-last-child(1)' },
            category: {
                selector: 'td:nth-of-type(1) a',
                attr: 'href',
                filters: [
                    (query) => url_parse__WEBPACK_IMPORTED_MODULE_0___default()(query, true).query.cat
                ]
            },
            seeders: {
                selector: 'td:nth-of-type(8)',
                filters: [
                    (query) => {
                        const connections = query.split('/');
                        return connections[0];
                    }
                ]
            },
            leechers: {
                selector: 'td:nth-of-type(8)',
                filters: [
                    (query) => {
                        const connections = query.split('/');
                        return connections[1];
                    }
                ]
            },
            completed: {
                selector: 'td:nth-of-type(8)',
                filters: [
                    (query) => {
                        const connections = query.split('/');
                        return connections[2];
                    }
                ]
            },
            // comments: {}  // FIXME 旧版参数不知道第几列，所以就算了
            tags: [
                { name: 'Free', selector: "img[alt='Gold Torrent']" },
                { name: '2xUp', selector: "img[alt='2x Multiplier Torrent']" },
                { name: '50%', selector: "img[alt='Silver Torrent']" }
            ]
        },
        userInfo: {
            // page: '/'
            id: {
                selector: ["a[href*='/user-profile.php?uid=']:first"],
                attr: 'href',
                filters: [(query) => url_parse__WEBPACK_IMPORTED_MODULE_0___default()(query, true).query.uid]
            },
            name: {
                selector: ["a[href*='/user-profile.php?uid=']:first"]
            },
            messageCount: {
                selector: ["a[href='user-messages.php']"],
                filters: [{ name: 'parseNumber' }]
            },
            // page: '/user-profile.php?uid=$user.id$'
            uploaded: {
                selector: ["tr.dataOdd > td:contains('Uploaded') + td:first"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["tr.dataOdd > td:contains('Downloaded') + td:first"],
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: ["tr.dataOdd > td:contains('Rank') + td:first"]
            },
            bonus: {
                selector: ["tr.dataOdd > td:contains('Bonus Points') + td:first"],
                filters: [{ name: 'parseNumber' }]
            },
            joinTime: {
                selector: "tr.dataOdd > td:contains('Join date') + td:first",
                filters: [
                    (query) => query.split(' [')[0],
                    { name: 'parseTime' }
                ]
            },
            // page: '/ajax/user-active-torrents.php?uid=$user.id$'
            seeding: {
                selector: ':self',
                elementProcess: (doc) => {
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('tr:not(:eq(0))', doc);
                    return trAnothers.length;
                }
            },
            seedingSize: {
                selector: ':self',
                elementProcess: (doc) => {
                    let seedingSize = 0;
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('tr:not(:eq(0))', doc);
                    trAnothers.forEach(trAnother => {
                        const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('td:eq(2)', trAnother);
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* findThenParseSizeString */ "e"])(sizeAnother[0].innerText.trim());
                    });
                    return seedingSize;
                }
            }
        }
    }
};


/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return anthelion; });
/* harmony import */ var _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);

const siteMetadata = {
    name: 'Anthelion',
    timezoneOffset: '+0000',
    description: 'Movies',
    url: 'https://anthelion.me/',
    tags: ['电影'],
    schema: 'GazelleJSONAPI',
    collaborator: 'enigamz',
    selector: {
        userInfo: {
            bonus: {
                selector: ["a[href*='store.php']"],
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/.+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            }
        }
    }
};
class anthelion extends _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformGroupTorrent(group, torrent) {
        const parsedTorrent = await super.transformGroupTorrent(group, torrent);
        /**
         * 对比旧版解析文件 getSearchResult.js 与 GazelleJSONAPI 默认解析文件，
         * 可以发现只有 title 和 subTitle 不同，直接覆写
         * https://www.diffchecker.com/iEHRUClF
         */
        parsedTorrent.title = `${group.groupName} [${group.groupYear}]`;
        parsedTorrent.subTitle = `${torrent.codec} / ${torrent.container} / ${torrent.media} / ${torrent.resolution} / ${torrent.audio}` +
            (torrent.hasLog ? ` / Log(${torrent.logScore})` : '') +
            (torrent.hasCue ? ' / Cue' : '') +
            (torrent.remastered ? ` / ${torrent.remasterYear}` : '') +
            (torrent.scene ? ' / Scene' : '') +
            (torrent.isFreeleech || torrent.isNeutralLeech || torrent.isPersonalFreeleech ? ' / Freeleech' : '');
        return parsedTorrent;
    }
}


/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'AsianCinema',
    timezoneOffset: '+0000',
    description: '综合',
    url: 'https://asiancinema.me/',
    tags: ['综合'],
    schema: 'Unit3D',
    selector: {
        userInfo: {
            uploaded: { selector: ["span[title='Upload']", "span[title='上传']"] },
            downloaded: { selector: ["span[title='Download']", "span[title='下载']"] },
            bonus: { selector: ["a[title='My Bonus Points']", "a[title='我的魔力']"] },
            seeding: { selector: ["span[title='Seeding']", "span[title='做种']"] }
        }
    }
};


/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _tjupt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);

const siteMetadata = {
    name: '爱薇网',
    timezoneOffset: '+0800',
    schema: 'NexusPHP',
    url: 'https://avgv.cc/',
    description: '新加坡华人PT站，很有特色。',
    tags: ['成人', 'AV', 'GAY', 'LES'],
    collaborator: ['xiazhou8', '匿名网友'],
    selector: {
        search: {
            progress: _tjupt__WEBPACK_IMPORTED_MODULE_0__["selectorSearchProgress"],
            status: _tjupt__WEBPACK_IMPORTED_MODULE_0__["selectorSearchStatus"]
        }
    }
};


/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'AvistaZ',
    timezoneOffset: '+0000',
    description: '综合',
    url: 'https://avistaz.to/',
    tags: ['综合'],
    schema: 'AvistaZ'
};


/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_0__);

const siteMetadata = {
    name: 'bB',
    timezoneOffset: '+0000',
    description: 'bB is a Private Torrent Tracker for 0DAY / GENERAL',
    url: 'aHR0cHM6Ly9iYWNvbmJpdHMub3JnLw==',
    tags: ['综合'],
    search: {
        keywordsParam: 'searchstr',
        requestConfig: {
            url: 'torrents.php',
            params: {
                action: 'basic',
                searchtags: '',
                tags_type: 0,
                order_by: 's3',
                order_way: 'desc',
                disablegrouping: 1
            }
        }
    },
    userInfo: {
        pickLast: ['id', 'name'],
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name']
            },
            {
                requestConfig: { url: '/user.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'ratio', 'seeding', 'levelName', 'bonus', 'joinTime']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: '#torrent_table > tbody > tr.torrent' },
            id: { selector: 'td:eq(1) a[title="View Torrent"]', attr: 'href' },
            title: {
                selector: 'td:nth-child(2)',
                elementProcess: (element) => {
                    const cloneElement = element.cloneNode(true);
                    sizzle__WEBPACK_IMPORTED_MODULE_0___default()('span, strong, div, br', cloneElement).forEach(e => e.remove());
                    return cloneElement.innerText.trim().replace(' - ]', ']');
                }
            },
            url: { selector: 'td:eq(1) a[title="View Torrent"]', attr: 'href' },
            link: { selector: 'td:eq(1) a[title="Download"]', attr: 'href' },
            time: {
                selector: 'td:eq(3)',
                filters: [
                    (query) => query.replace(' and', ''),
                    { name: 'parseTTL' }
                ]
            },
            size: { selector: 'td:eq(4)' },
            category: { text: 'Other' },
            seeders: { selector: 'td:eq(7)' },
            leechers: { selector: 'td:eq(8)' },
            completed: { selector: 'td:eq(6)' },
            tags: [
                { name: 'Free', selector: 'strong:contains("Freeleech!")' }
            ]
        },
        userInfo: {
            // page: '/index.php',
            id: {
                selector: ['.username'],
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: ['.username']
            },
            // page: '/user.php?id=$user.id$',
            uploaded: {
                selector: ["li:contains('Uploaded:') > span"],
                attr: 'title',
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["li:contains('Downloaded:') > span"],
                attr: 'title',
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: ["li:contains('Ratio:') > span"],
                attr: 'title',
                filters: [{ name: 'parseNumber' }]
            },
            seeding: {
                selector: ["li:contains('Seeding:')"],
                filters: [{ name: 'parseNumber' }]
            },
            levelName: {
                selector: ["li:contains('Class:')"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/Class:(.+)/);
                        return (queryMatch && queryMatch.length >= 2) ? queryMatch[1] : '';
                    }
                ]
            },
            bonus: {
                selector: ["li:contains('Bonus Points:') > a"],
                filters: [{ name: 'parseNumber' }]
            },
            joinTime: {
                selector: ["li:contains('Joined:') > span"],
                attr: 'title',
                filters: [{ name: 'parseTime' }]
            }
        }
    }
};


/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _hdhome__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);

const siteMetadata = {
    name: '备胎',
    schema: 'NexusPHP',
    url: 'https://www.beitai.pt/',
    description: '找不到家时，接纳无家可归的人',
    tags: ['综合'],
    collaborator: ['wyx1818', 'tongyifan'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movies' },
                    { value: 404, name: 'Documentaries' },
                    { value: 405, name: 'Animations' },
                    { value: 402, name: 'TV Series' },
                    { value: 403, name: 'TV Shows' },
                    { value: 406, name: 'Music Videos' },
                    { value: 407, name: 'Sports' },
                    { value: 409, name: 'Misc' },
                    { value: 408, name: 'HQ Audio' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: _hdhome__WEBPACK_IMPORTED_MODULE_0__["selectorSearchProgress"],
            status: _hdhome__WEBPACK_IMPORTED_MODULE_0__["selectorSearchStatus"]
        }
    }
};


/***/ }),
/* 116 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Bemaniso',
    timezoneOffset: '+0000',
    description: 'Game,music',
    url: 'https://bemaniso.ws/',
    tags: ['Game', 'Music', 'sims'],
    schema: 'GazelleJSONAPI',
    collaborator: 'ted423'
};


/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return beyondhd; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _schema_Unit3D__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/**
 * 并不是标准Unit3D的模板，做了很大更改，故
 * 根据旧版配置文件和 Whalko 提供的 html文档修改，未经过测试
 * Rhilip, 2021.4.21
 */



const siteMetadata = {
    name: 'BeyondHD',
    timezoneOffset: '+0000',
    description: '综合',
    url: 'https://beyond-hd.me/',
    tags: ['综合'],
    schema: 'Unit3D',
    host: 'beyond-hd.me',
    collaborator: 'lengmianxia',
    search: {
        requestConfig: {
            url: '/torrents'
        }
    },
    selector: {
        search: {
            rows: { selector: 'div.table-torrents > table:last > tbody > tr.librarytab' },
            id: { selector: 'a.torrent-name', attr: 'torrent' },
            title: { selector: 'a.torrent-name' },
            url: { selector: 'a.torrent-name', attr: 'href' },
            time: { selector: 'span.text-age', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'span.text-size' },
            author: { selector: 'span:has(> i.fa-user-shield)' },
            category: { selector: 'a[href*="/categories/"] > div > i[title]', attr: 'title' },
            completed: { selector: 'a[href*="/history"] > span' },
            comments: { selector: 'span[id^="commenttorrentcount"]' },
            progress: {
                selector: ["i.fal.fa-seedling, i.fal.fa-check[title='Snatched']"],
                elementProcess: (element) => element.getAttribute('title') ? 100 : 0
            },
            status: {
                selector: ['i.fal.fa-seedling', "i.fal.fa-check[title='Snatched']"],
                switchFilters: [
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed
                ]
            },
            tags: [
                { name: 'Free', selector: ".fas.fa-star[title*='100%']" },
                { name: '25%', selector: ".fas.fa-star[title*='25%']" },
                { name: '50%', selector: ".fas.fa-star[title*='50%']" },
                { name: '75%', selector: ".fas.fa-star[title*='75%']" }
            ]
        },
        userInfo: {
            id: {
                selector: '#beta-stats li:first a',
                attr: 'href',
                filters: [
                    // https://beyond-hd.me/xxxxxx.ddddddd
                    (query) => {
                        const queryMatch = query.match(/\.me\/(.+)\.(.+)\/?/);
                        return queryMatch && queryMatch.length >= 3 ? queryMatch[2] : '';
                    }
                ]
            },
            name: { selector: '#beta-stats li:first', attr: null, filters: [] },
            uploaded: {
                selector: ["#beta-stats a[href*='uploads']:first"]
            },
            downloaded: {
                selector: ["#beta-stats a[href*='downloads']:first"]
            },
            bonus: {
                selector: ["#beta-stats a[href*='bonus']:first"],
                filters: [
                    (query) => query.replace(/,|\n|\s+/g, '').replace(/BP:/g, '')
                ]
            },
            seeding: { selector: '#beta-stats a:has(> i.fa-seedling)' },
            messageCount: { selector: '.notify' },
            seedingSize: { selector: ["td:contains('Active Seed Size') + td"] },
            levelName: { selector: 'div.button-holder span.badge-faded' },
            joinTime: {
                selector: "div.button-holder h5:contains('Since: ')",
                filters: [
                    (query) => {
                        query = query.replace('Member Since: ', '');
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(query).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(query).valueOf() : query;
                    }
                ]
            }
        }
    }
};
class beyondhd extends _schema_Unit3D__WEBPACK_IMPORTED_MODULE_1__["default"] {
    async getUserInfoPathFromSite() {
        const { data: indexDocument } = await this.request({ url: '/', responseType: 'document', checkLogin: true });
        return this.getFieldData(indexDocument, {
            selector: "a[href*='settings']:first",
            attr: 'href',
            filters: [
                (query) => query.replace(/\/settings.+$/, '')
            ]
        });
    }
    async flushUserInfo(lastUserInfo = {}) {
        var _a, _b;
        const flushUserInfo = {};
        const userPath = await this.getUserInfoPathFromSite();
        const { data: userDetailDocument } = await this.request({ url: userPath, responseType: 'document' });
        for (const userInfoAttrValue of Object.keys((_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.userInfo)) {
            flushUserInfo[userInfoAttrValue] = this.getFieldData(userDetailDocument, (_b = this.config.selector) === null || _b === void 0 ? void 0 : _b.userInfo[userInfoAttrValue]);
        }
        return flushUserInfo;
    }
}


/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return bibliotik; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_3__);




const siteMetadata = {
    name: 'Bibliotik',
    timezoneOffset: '+0000',
    description: 'Bibliotik',
    url: 'https://bibliotik.me/',
    tags: ['电子书'],
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/torrents/',
            params: {
                orderby: 'added',
                order: 'desc'
            }
        }
    },
    userInfo: {
        pickLast: ['id', 'name'],
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'name']
            },
            {
                requestConfig: { url: '/users/$userId$' },
                assertion: { id: 'userId' },
                fields: ['uploaded', 'downloaded', 'levelName', 'joinTime', 'bonus']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table#torrents_table > tbody > tr:has(.title)' },
            id: {
                selector: 'span.title a:first',
                attr: 'href',
                filters: [
                    (query) => query.match(/torrents\/(\d+)\/?/)[1]
                ]
            },
            title: { selector: 'span.title a:first' },
            url: { selector: 'span.title a:first', attr: 'href' },
            link: { selector: 'a[title="Download"]', attr: 'href' },
            time: { selector: 'time', attr: 'datetime' },
            size: { selector: '.t_files_size_added span[data-bytecount]', data: 'bytecount' },
            author: { selector: ['.authorLink', '.editorLink'] },
            category: {
                selector: 'td:first-child',
                case: {
                    'div[title="Applications"]': 'Applications',
                    'div[title="Audiobooks"]': 'Audiobooks',
                    'div[title="Comics"]': 'Comics',
                    'div[title="Ebooks"]': 'eBooks',
                    'div[title="Magazines"]': 'Magazines'
                }
            },
            seeders: { selector: '.seeders', text: 0 },
            leechers: { selector: '.leechers', text: 0 },
            completed: { selector: '.snatches', text: 0 },
            comments: { selector: 'td:eq(5)', text: 0 }
        },
        userInfo: {
            // page: '/' ，走默认解析方法
            id: {
                selector: ["#pre_header_status a[href*='/users/']"],
                attr: 'href',
                filters: [
                    (query) => (query.match(/(\d+)/) || ['', ''])[1]
                ]
            },
            name: {
                selector: ["#pre_header_status a[href*='/users/']"]
            },
            // page: '/users/$user.id$'
            uploaded: {
                selector: ["#pre_header_status li:contains('Up: ')"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["#pre_header_status li:contains('Down: ')"],
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: ["#detailsbox p:contains('Class: ')"],
                filters: [
                    (query) => query.replace(/Class: /g, '')
                ]
            },
            joinTime: {
                selector: "#detailsbox p:contains('Joined ') time",
                attr: 'datetime',
                filters: [{ name: 'parseTime' }]
            },
            bonus: {
                text: 'N/A'
            }
        }
    }
};
class bibliotik extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async flushUserInfo(lastUserInfo = {}) {
        let userInfo = await super.flushUserInfo();
        if (userInfo.id) {
            userInfo = { seeding: 0, seedingSize: 0, ...userInfo };
            const pageInfo = { count: 0, current: 0 }; // 生成页面信息
            for (; pageInfo.current <= pageInfo.count; pageInfo.current++) {
                const { data: TListDocument } = await this.request({
                    url: `/users/${userInfo.id}/seeding`,
                    params: {
                        page: pageInfo.current > 0 ? pageInfo.current : undefined
                    },
                    responseType: 'document'
                });
                // 更新最大页数
                if (pageInfo.count === 0) {
                    pageInfo.count = this.getFieldData(TListDocument, {
                        selector: ".pagination a[href*='?page']:contains('Last >>'):first",
                        attr: 'href',
                        filters: [(query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_2___default()(query, true).query.page) || -1]
                    });
                }
                const pageSeedAnother = sizzle__WEBPACK_IMPORTED_MODULE_3___default()('table#torrents_table:first tbody > tr', TListDocument);
                userInfo.seeding += pageSeedAnother.length;
                pageSeedAnother.forEach(another => {
                    const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_3___default()('td.t_files_size_added', another);
                    if (sizeAnother && sizeAnother.length > 0) {
                        const sizeText = sizeAnother[0].innerText.trim();
                        userInfo.seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* findThenParseSizeString */ "e"])(sizeText);
                    }
                });
            }
        }
        return userInfo;
    }
}


/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Blutopia',
    timezoneOffset: '+0000',
    schema: 'Unit3D',
    url: 'https://blutopia.xyz/',
    tags: ['影视', '综合'],
    collaborator: ['bimzcy', 'lengmianxia']
};


/***/ }),
/* 120 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);

const siteMetadata = {
    name: 'BTN',
    timezoneOffset: '+0000',
    description: '著名剧集站点，又被戏称为鼻涕妞',
    url: 'https://broadcasthe.net/',
    tags: ['剧集'],
    schema: 'Gazelle',
    collaborator: ['ylxb2016', 'enigmaz'],
    search: {
        categories: [
            {
                name: 'Category',
                key: 'filter_cat',
                options: [
                    { name: 'Episodes', value: 1 },
                    { name: 'Season', value: 3 }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            title: { selector: "[style='float:none;']:first", attr: 'title' },
            url: { selector: "[title='View Torrent']:first", attr: 'href' },
            link: { selector: "[title='Download']", attr: 'href' },
            time: { selector: "div:contains('Added:')", filters: [{ name: 'parseTTL' }] }
        },
        userInfo: {
            uploaded: { selector: '#section2 > div > div.statistics > div:nth-child(3) > ul > li:nth-child(1)' },
            downloaded: { selector: '#section2 > div > div.statistics > div:nth-child(3) > ul > li:nth-child(7)' },
            ratio: { text: '---', selector: null, filters: [] },
            levelName: { selector: '#section2 > div > div.statistics > div:nth-child(1) > ul > li:nth-child(2)' },
            bonus: {
                selector: '#section2 > div > div.statistics > div:nth-child(1) > ul > li:nth-child(5) > a',
                filters: [
                    (query) => query.replace(/,/g, '')
                ]
            },
            joinTime: { selector: '#section2 > div > div.statistics > div:nth-child(1) > ul > li:nth-child(1) > span' },
            seeding: {
                selector: '#section2 > div > div.statistics > div:nth-child(3) > ul > li:nth-child(4)',
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/Seeding:.+?(\d+).+?/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            seedingSize: {
                selector: '#section2 > div > div.statistics > div:nth-child(3) > ul > li:nth-child(5)',
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/Seeding Size:.+?([\d.]+ ?[TGMK]?i?B)/);
                        return queryMatch && queryMatch.length >= 2 ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(queryMatch[1]) : 0;
                    }
                ]
            }
        }
    }
};


/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'BRKS',
    timezoneOffset: '+0000',
    description: 'Mac Apps',
    url: 'https://brokenstones.club/',
    tags: ['软件'],
    schema: 'GazelleJSONAPI',
    host: 'brokenstones.club'
};


/***/ }),
/* 122 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _hdchina__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);

const siteMetadata = {
    name: 'BTSCHOOL',
    schema: 'NexusPHP',
    description: '汇聚每一个人的影响力',
    url: 'https://pt.btschool.club/',
    tags: ['影视', '综合'],
    selector: {
        search: {
            progress: {
                selector: ['.progress:eq(0) > div'],
                attr: 'style',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/width:([ \d.]+)%/);
                        return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            status: _hdchina__WEBPACK_IMPORTED_MODULE_0__["selectorSearchStatus"]
        }
    }
};


/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_3__);




const siteMetadata = {
    name: 'BWTorrents',
    timezoneOffset: '+0000',
    description: 'bwtorrents',
    url: 'https://bwtorrents.tv/',
    tags: ['综合', '印度'],
    host: 'bwtorrents.tv',
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/index.php',
            params: {
                incldead: 1,
                blah: 0 // 0 name, 1 descr, 2 both
            }
        },
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { value: 113, name: 'Bollywood-Pre-Release' },
                    { value: 114, name: 'Bollywood-4K Ultra HD / Upscaled' },
                    { value: 115, name: 'Bollywood-Untouched BluRay' },
                    { value: 116, name: 'Bollywood-1080p BluRay Rips' },
                    { value: 117, name: 'Bollywood-720p BluRay Rips' },
                    { value: 118, name: 'Bollywood-Remuxes BluRay' },
                    { value: 119, name: 'Bollywood-Untouched WEB-DLs' },
                    { value: 120, name: 'Bollywood-1080p WEB-Rips' },
                    { value: 188, name: 'Bollywood-720p WEB-Rips' },
                    { value: 121, name: 'Bollywood-Untouched DVDs' },
                    { value: 189, name: 'Bollywood-Encoded DVDs' },
                    { value: 122, name: 'Bollywood-DVDRips 1080p/720p' },
                    { value: 123, name: 'Bollywood-SDRips WEB/DVD' },
                    { value: 124, name: 'Bollywood-3D-Movies' },
                    { value: 190, name: 'Bollywood-Movie packs' },
                    { value: 125, name: 'Bollywood-Web Series' },
                    { value: 136, name: 'Hollywood-Pre-Release' },
                    { value: 126, name: 'Hollywood-4K Ultra HD / Upscaled' },
                    { value: 127, name: 'Hollywood-Untouched BluRay' },
                    { value: 128, name: 'Hollywood-1080p BluRay Rips' },
                    { value: 129, name: 'Hollywood-720p BluRay Rips' },
                    { value: 130, name: 'Hollywood-BluRay Remuxes' },
                    { value: 131, name: 'Hollywood-Untouched WEB-DLs' },
                    { value: 132, name: 'Hollywood-1080p WEB-Rips' },
                    { value: 192, name: 'Hollywood-720p WEB-Rips' },
                    { value: 133, name: 'Hollywood-Untouched DVDs' },
                    { value: 191, name: 'Hollywood-Encoded DVDs' },
                    { value: 134, name: 'Hollywood-DVDRips 1080p/720p' },
                    { value: 193, name: 'Hollywood-SDRips - WEB/DVD' },
                    { value: 135, name: 'Hollywood-3D-Movies' },
                    { value: 194, name: 'Hollywood-Movie packs' },
                    { value: 137, name: 'Malayalam-Movies' },
                    { value: 140, name: 'Punjabi-Movies' },
                    { value: 141, name: 'Kannada-Movies' },
                    { value: 142, name: 'Lollywood-Movies' },
                    { value: 143, name: 'Bhoipuri-Movies' },
                    { value: 144, name: 'Marathi-Movies' },
                    { value: 145, name: 'Bangla-Movies' },
                    { value: 185, name: 'Gujarati-Movies' },
                    { value: 184, name: 'South Hindi Dubbed' },
                    { value: 183, name: 'English Hindi Dubbed' },
                    { value: 197, name: 'Turkish Hindi Dubbed' },
                    { value: 182, name: 'Other Movies' },
                    { value: 146, name: 'TV-Colors' },
                    { value: 147, name: 'TV-TV' },
                    { value: 148, name: 'TV-Life OK' },
                    { value: 149, name: 'TV-Pakistan Drams' },
                    { value: 150, name: 'TV-Sab TV' },
                    { value: 151, name: 'TV-Sony' },
                    { value: 152, name: 'TV-Star Bharat' },
                    { value: 153, name: 'TV-Star Plus' },
                    { value: 154, name: 'TV-Zee TV' },
                    { value: 186, name: 'TV-Dangal Tv' },
                    { value: 218, name: 'TV-Ishara TV' },
                    { value: 155, name: 'TV-Sports' },
                    { value: 156, name: 'TV-Documentaries' },
                    { value: 198, name: 'TV-MTV' },
                    { value: 158, name: 'TV-Other Tv Shows' },
                    { value: 157, name: 'TV-Hollywood Tv Shows' },
                    { value: 195, name: 'TV-Tv Packs' },
                    { value: 159, name: 'Music-Religion & Spirituality' },
                    { value: 160, name: 'Music-Classical' },
                    { value: 172, name: 'Music-Remix' },
                    { value: 161, name: 'Music-Flacs' },
                    { value: 162, name: 'Music-Ghazals' },
                    { value: 163, name: 'Music-Hindi OSTs' },
                    { value: 164, name: 'Music-Instrumental' },
                    { value: 165, name: 'Music-Kannada' },
                    { value: 166, name: 'Music-Lollywood' },
                    { value: 167, name: 'Music-Malayalam' },
                    { value: 168, name: 'Music-Marathi' },
                    { value: 169, name: 'Music-Vvalueeos' },
                    { value: 170, name: 'Music-Pop' },
                    { value: 171, name: 'Music-Punjabi' },
                    { value: 174, name: 'Music-Telugu' },
                    { value: 173, name: 'Music-Tamil' },
                    { value: 196, name: 'Music-Packs' },
                    { value: 175, name: 'Ebooks' },
                    { value: 176, name: 'Games PC' },
                    { value: 177, name: 'Games Console' },
                    { value: 178, name: 'Anime' },
                    { value: 179, name: 'Appz' },
                    { value: 180, name: 'Mobile Stuff' },
                    { value: 181, name: 'Pics/Wallpapers' },
                    { value: 187, name: 'Adult XXX 18+' },
                    // Telugu-Movies
                    { value: 199, name: 'Telgu-Movies | 4K Ultra HD - Upscaled' },
                    { value: 200, name: 'Telgu-Movies | Untouched WEB-DLs' },
                    { value: 201, name: 'Telgu-Movies | 1080p/720p WEBRips' },
                    { value: 202, name: 'Telgu-Movies | Untouched BluRay' },
                    { value: 208, name: 'Telgu-Movies | Remuxes BluRay' },
                    { value: 207, name: 'Telgu-Movies | BluRay Rips' },
                    { value: 203, name: 'Telgu-Movies | Untouched DVDs' },
                    { value: 204, name: 'Telgu-Movies | SD-WEBRips / DVDRips' },
                    { value: 205, name: 'Telgu-Movies | Movie Packs' },
                    // Tamil-Movies
                    { value: 209, name: 'Tamil-Movies | 4K Ultra HD - Upscaled' },
                    { value: 210, name: 'Tamil-Movies | Untouched WEB-DLs' },
                    { value: 211, name: 'Tamil-Movies | 1080p/720p WEBRips' },
                    { value: 212, name: 'Tamil-Movies | Untouched BluRay' },
                    { value: 217, name: 'Tamil-Movies | Remuxes BluRay' },
                    { value: 216, name: 'Tamil-Movies | BluRay Rips' },
                    { value: 213, name: 'Tamil-Movies | Untouched DVDs' },
                    { value: 214, name: 'Tamil-Movies | SD-WEBRips / DVDRips' },
                    { value: 215, name: 'Tamil-Movies | Movie Packs' }
                ]
            }
        ]
    },
    userInfo: {
        pickLast: ['id', 'name'],
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'name']
            },
            {
                requestConfig: { url: '/userdetailsmore.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'levelName', 'joinTime', 'seeding', 'seedingSize', 'bonus']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table[width="1200"] > tbody > tr:has(a[href^="download.php/"])' },
            id: { selector: 'a[href^="details.php?id="]', filters: [{ name: 'querystring', args: ['id'] }] },
            title: { selector: 'a[href^="details.php?id="] b' },
            url: { selector: 'a[href^="details.php?id="]', attr: 'href' },
            link: { selector: 'a[href^="download.php/"]', attr: 'href' },
            time: {
                selector: 'td:eq(4) nobr',
                filters: [
                    (query) => query.replace(/(\d{2})-(\d{2})-(\d{4})\n?(\d{2}:\d{2}:\d{2})/, '$3-$2-$1 $4')
                ]
            },
            size: { selector: 'td:nth-child(6)' },
            author: { selector: 'td:eq(10)' },
            category: { selector: 'td:eq(0) img:first', attr: 'alt' },
            seeders: { selector: 'td:eq(7)' },
            leechers: { selector: 'td:eq(8)' },
            completed: { selector: 'td:eq(9)' },
            comments: { selector: 'td:eq(3)' },
            tags: [
                { name: 'Free', selector: "font[color='red']:contains('[FreeLeech]')" }
            ]
        },
        userInfo: {
            // page: '/',
            id: {
                selector: ["a[href*='userdetails.php']:first"],
                attr: 'href',
                filters: [(query) => url_parse__WEBPACK_IMPORTED_MODULE_0___default()(query, true).query.id]
            },
            name: {
                selector: ["a[href*='userdetails.php'][href*='id=']:first"]
            },
            // page: '/userdetailsmore.php?id=$user.id$'
            uploaded: {
                selector: ["td.rowhead:contains('Uploaded') + td"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["td.rowhead:contains('Downloaded') + td"],
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: "td.rowhead:contains('Class') + td"
            },
            joinTime: {
                selector: "td.rowhead:contains('Join') + td",
                filters: [
                    (query) => {
                        query = query.split(' (')[0];
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(query).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(query).valueOf() : query;
                    }
                ]
            },
            seeding: {
                selector: '#ka1 table.main > tbody',
                elementProcess: (element) => {
                    const trAnother = sizzle__WEBPACK_IMPORTED_MODULE_3___default()('> tr', element);
                    return trAnother.length - 1;
                }
            },
            seedingSize: {
                selector: '#ka1 table.main > tbody',
                elementProcess: (element) => {
                    let seedingSize = 0;
                    const trAnother = sizzle__WEBPACK_IMPORTED_MODULE_3___default()('> tr:not(:eq(0))', element);
                    trAnother.forEach(element => {
                        const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_3___default()('td:eq(6)', element)[0];
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(sizeAnother.innerText.trim());
                    });
                    return seedingSize;
                }
            },
            bonus: {
                text: 'N/A'
            }
        }
    }
};


/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'BYRBT',
    schema: 'NexusPHP',
    description: '著名教育网PT站点（仅支持ipv6访问与下载），有10大类资源，资源更新快，保种好。',
    url: 'https://bt.byr.cn/',
    tags: ['教育网', '影视', '综合'],
    collaborator: ['Rhilip'],
    search: {
        categories: [
            {
                name: '类型',
                key: 'cat',
                options: [
                    { value: 408, name: '电影' },
                    { value: 401, name: '剧集' },
                    { value: 404, name: '动漫' },
                    { value: 402, name: '音乐' },
                    { value: 405, name: '综艺' },
                    { value: 403, name: '游戏' },
                    { value: 406, name: '软件' },
                    { value: 407, name: '资料' },
                    { value: 409, name: '体育' },
                    { value: 410, name: '纪录' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            status: {
                // 似乎只有一个 已完成能够了解，下载进度等不能明确
                selector: ['img[src="pic/finished.png"]'],
                attr: 'src',
                filters: [
                    (query) => {
                        if (query === 'pic/finished.png') {
                            return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed;
                        }
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                ]
            }
        }
    }
};


/***/ }),
/* 125 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_1__);


const siteMetadata = {
    name: 'CCFBits',
    timezoneOffset: '+0800',
    description: '',
    url: 'https://ccfbits.org/',
    tags: ['影视', '剧集', '综合'],
    collaborator: 'Rhilip',
    search: {
        requestConfig: {
            url: '/browse.php',
            params: { notnewword: 1 }
        }
    },
    userInfo: {
        pickLast: ['id', 'name'],
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'levelName', 'bonus', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table[border="1"][cellpadding="5"] > tbody > tr:has(a[href^="details.php?id="])' },
            id: {
                selector: 'a[title][href^="details.php?id="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: {
                selector: 'a[title][href^="details.php?id="]',
                attr: 'title',
                filters: [
                    (title) => title.split('\n')[0]
                ]
            },
            subTitle: {
                selector: 'a[title][href^="details.php?id="]',
                attr: 'title',
                filters: [
                    (title) => title.split('\n')[1] || ''
                ]
            },
            url: { selector: 'a[title][href^="details.php?id="]', attr: 'href' },
            link: { selector: 'a[href^="download.php/"]', attr: 'href' },
            time: { selector: 'td:nth-child(5)' },
            size: { selector: 'td:nth-child(7)' },
            seeders: { selector: 'td:nth-child(8)' },
            leechers: { selector: 'td:nth-child(9)' },
            completed: { selector: 'a[href^="snatches.php?id"]', filters: [(query) => query.replace('次', '')] },
            comments: { selector: 'a[href*="tocomm=1"]' },
            tags: [
                { name: 'Free', selector: "font[color='#C20603']:has( > img[href*='arrowdown1.gif']):contains('免费')" },
                { name: '30%', selector: "font[color='#C20603']:has( > img[href*='arrowdown1.gif']):contains('0.3x')" },
                { name: '50%', selector: "font[color='#C20603']:has( > img[href*='arrowdown1.gif']):contains('0.5x')" },
                { name: '2xUp', selector: "font[color='#4A8D04']:has( > img[href*='arrowup1.gif']):contains('2x')" }
            ]
        },
        userInfo: {
            // url: '/index.php',
            id: {
                selector: "a[href*='userdetails.php']:first",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: "a[href*='userdetails.php']:first"
            },
            // url: '/userdetails.php'
            uploaded: {
                selector: ['上传量', '上傳量'].map(x => `td.rowhead:contains('${x}') + td`),
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ['下载量', '下載量'].map(x => `td.rowhead:contains('${x}') + td`),
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: ['等级', '等級'].map(x => `td.rowhead:contains('${x}') + td`)
            },
            bonus: {
                selector: ['积分', '積分'].map(x => `td.rowhead:contains('${x}') + td`),
                filters: [parseFloat]
            },
            joinTime: {
                selector: ['注册日期', '註冊日期'].map(x => `td.rowhead:contains('${x}') + td`),
                filters: [{ name: 'parseTime' }]
            },
            seeding: {
                text: 0,
                selector: 'div#ka1 table tbody',
                filters: [
                    (tbody) => {
                        const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('tr:gt(0)', tbody);
                        return trAnothers.length;
                    }
                ]
            },
            seedingSize: {
                text: 0,
                selector: 'div#ka1 table tbody',
                filters: [
                    (tbody) => {
                        let seedingSize = 0;
                        const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('tr:gt(0)', tbody);
                        trAnothers.forEach(trAnother => {
                            const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('td:eq(3)', trAnother)[0];
                            seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(sizeAnother.innerText.trim());
                        });
                        return seedingSize;
                    }
                ]
            }
        }
    }
};


/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'CGPeers',
    timezoneOffset: '+0000',
    schema: 'GazelleJSONAPI',
    url: 'https://www.cgpeers.com/',
    tags: ['设计', '素材'],
    host: 'www.cgpeers.com',
    collaborator: 'bimzcy'
};


/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'CHDBits',
    schema: 'NexusPHP',
    url: 'https://chdbits.co/',
    tags: ['影视', '综合'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movies' },
                    { value: 404, name: 'Documentaries' },
                    { value: 405, name: 'Animations' },
                    { value: 402, name: 'TV Series' },
                    { value: 403, name: 'TV Shows' },
                    { value: 406, name: 'Music' },
                    { value: 407, name: 'Sports' },
                    { value: 409, name: 'Demo' },
                    { value: 408, name: 'HQ Audio' },
                    { value: 410, name: 'Game' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: ['td.rowfollow:last-child'],
                filters: [
                    (query) => query === '--' ? 0 : parseFloat(query)
                ]
            },
            status: {
                selector: ['td.rowfollow:last-child'],
                filters: [
                    // 未交待具体情况，不能准确判断时候是在下载中，所以置 unknown
                    (query) => parseFloat(query) >= 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown
                ]
            }
        }
    }
};


/***/ }),
/* 128 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);



const siteMetadata = {
    name: 'CinemaGeddon',
    timezoneOffset: '-0700',
    url: 'https://cinemageddon.net/',
    tags: ['影视'],
    collaborator: 'DXV5',
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/browse.php',
            params: { proj: 0 }
        },
        categories: [
            {
                name: 'Category',
                key: 'c',
                options: [
                    { value: 1, name: 'Action' },
                    { value: 2, name: 'Horror' },
                    { value: 3, name: 'Martial Arts' },
                    { value: 4, name: 'Comedy' },
                    { value: 5, name: 'Other' },
                    { value: 6, name: 'Hidden Gems' },
                    { value: 7, name: 'Sci-Fi' },
                    { value: 8, name: 'Gore' },
                    { value: 9, name: 'Exploitation' },
                    { value: 11, name: 'OST' },
                    { value: 12, name: 'XXX' },
                    { value: 13, name: 'Thriller' },
                    { value: 14, name: 'Adventure' },
                    { value: 15, name: 'Documentary' },
                    { value: 16, name: 'Western' },
                    { value: 17, name: 'Family' },
                    { value: 18, name: 'Drama' },
                    { value: 19, name: 'Ebooks' },
                    { value: 20, name: 'Softcore' },
                    { value: 21, name: 'Tinfoil Hat' },
                    { value: 22, name: 'Trailers' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    userInfo: {
        pickLast: ['id', 'name'],
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'name']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'levelName', 'messageCount', 'bonus', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.torrenttable > tbody > tr:has(a[href*="browse.php?cat="])' },
            id: { selector: 'a[href*="details.php?id="]', attr: 'href', filters: [{ name: 'querystring', args: ['id'] }] },
            title: { selector: 'a[href*="details.php?id="]' },
            url: { selector: 'a[href*="details.php?id="]', attr: 'href' },
            link: { selector: 'a[href*="download.php?id="]', attr: 'href' },
            time: { selector: 'td:nth-child(4)' },
            size: { selector: 'td:nth-child(5)', filters: [{ name: 'parseSize' }] },
            author: { selector: 'td:eq(8)' },
            category: { selector: 'a[href*="browse.php?cat="]', attr: 'href', filters: [{ name: 'querystring', args: ['cat'] }] },
            seeders: { selector: 'td:nth-child(7)' },
            leechers: { selector: 'td:nth-child(8)' },
            completed: { selector: 'td:nth-child(6)' }
        },
        userInfo: {
            // page: '/'
            id: {
                selector: ".statusbar a[href*='/userdetails.php?id=']",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: ".statusbar a[href*='/userdetails.php?id=']"
            },
            // page: '/userdetails.php?id=$user.id$',
            uploaded: {
                selector: ["td.clx > .frames td.rowhead:contains('Uploaded') + td:first"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["td.clx > .frames td.rowhead:contains('Downloaded') + td:first"],
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: "td.clx > .frames td.rowhead:contains('Class') + td:first"
            },
            messageCount: {
                selector: ["div.alert a[href*='messages.php']"],
                filters: [{ name: 'parseNumber' }]
            },
            bonus: {
                selector: ["a[href='/credits.php']"],
                filters: [{ name: 'parseNumber' }]
            },
            joinTime: {
                selector: "td.clx > .frames td.rowhead:contains('Join') + td:first",
                filters: [
                    (query) => {
                        const timeString = query.split(' (')[0];
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(timeString).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(timeString).valueOf() : timeString;
                    }
                ]
            },
            // FIXME 我对这两块情况暂时存疑，不过先抄过来吧
            seeding: {
                selector: ['div#ka2 table:first'],
                elementProcess: (table) => {
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('tr:gt(0)', table);
                    return trAnothers.length;
                }
            },
            seedingSize: {
                selector: ['div#ka2 table:first tr:not(:eq(0))'],
                elementProcess: (table) => {
                    let seedingSize = 0;
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('tr:gt(0)', table);
                    trAnothers.forEach(trAnother => {
                        const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('td:eq(2)', trAnother);
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* findThenParseSizeString */ "e"])(sizeAnother[0].innerText.trim());
                    });
                    return seedingSize;
                }
            }
        }
    }
};


/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cinematik; });
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);




const siteMetadata = {
    name: 'Cinematik',
    timezoneOffset: '+0000',
    url: 'https://www.cinematik.net/',
    tags: ['影视'],
    host: 'www.cinematik.net',
    collaborator: 'DXV5',
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/browse.php',
            params: {
                incldead: 1
            }
        }
    },
    userInfo: {
        pickLast: ['id'],
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['name', 'uploaded', 'downloaded', 'levelName', 'bonus', 'joinTime']
            }
            /**
             * 需要翻页，不能这样处理
            {
              requestConfig: { url: '/userdetails-tab.php', params: { SID: '', mode: 7, page: 0 } },
              assertion: { id: 'id' },
              fields: ['seeding', 'seedingSize']
            }
             */
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table[border="1"] tr:not(:first-child)' },
            id: {
                selector: 'a[href^="details.php?id="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: { selector: 'td:nth-child(2) a' },
            url: { selector: 'a[href^="details.php?id="]', attr: 'href' },
            link: {
                selector: 'a[href^="details.php?id="]',
                attr: 'href',
                filters: [
                    (q) => q.replace('details.php?id=', 'download.php?id=')
                ]
            },
            time: { selector: 'td:nth-child(11) div.addedtor' },
            size: { selector: 'td:nth-child(7)' },
            category: { text: 'ALL' },
            seeders: { selector: 'td:nth-child(9)' },
            leechers: { selector: 'td:nth-child(10)' },
            completed: { selector: 'td:nth-child(8)', filters: [{ name: 'parseNumber' }] },
            tags: [
                { name: 'Free', selector: "img[src*='freedownload.png']" },
                { name: '2xFree', selector: "img[src*='platinumdownload.png']" },
                { name: '25%', selector: "img[src*='silverdownload.png']" }
            ]
        },
        userInfo: {
            id: {
                selector: "div#menu a[href*='userdetails.php']",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: 'table.mainouter > tbody > tr > td > table.main h1'
            },
            uploaded: {
                selector: "#user-default td.rowhead:contains('Uploaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "#user-default td.rowhead:contains('Downloaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: "#user-default td.rowhead:contains('Class') + td"
            },
            bonus: {
                text: 'N/A'
            },
            joinTime: {
                selector: "#user-default td.rowhead:contains('Join') + td",
                filters: [
                    (query) => query.split(' (')[0],
                    { name: 'parseTime' }
                ]
            },
            seeding: {
                selector: 'table:first',
                elementProcess: (table) => {
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('tr:not(:eq(0))', table);
                    return trAnothers.length;
                }
            },
            seedingSize: {
                selector: 'table:first',
                elementProcess: (table) => {
                    let seedingSize = 0;
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('tr:not(:eq(0))', table);
                    trAnothers.forEach(trAnother => {
                        const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('td:eq(4)', trAnother)[0];
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(sizeAnother.innerText.trim());
                    });
                }
            }
        }
    }
};
class cinematik extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_3__["default"] {
    async flushUserInfo(lastUserInfo = {}) {
        let userInfo = await super.flushUserInfo();
        if (userInfo.id && (!userInfo.seeding || !userInfo.seedingSize)) {
            userInfo = { seeding: 0, seedingSize: 0, ...userInfo };
            for (const pageInfo = { current: 0, count: 0 }; pageInfo.current <= pageInfo.count; pageInfo.current++) {
                const { data: TLDocument } = await this.request({
                    url: '/userdetails-tab.php',
                    params: { SID: '', mode: 7, page: pageInfo.current },
                    responseType: 'document'
                });
                if (pageInfo.count === 0) {
                    pageInfo.count = this.getFieldData(TLDocument, {
                        selector: "a[href*='type=seeding']:contains('1'):last",
                        attr: 'href',
                        filters: [(q) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_0___default()(q, true).query.page) || -1]
                    });
                }
                const { seeding, seedingSize } = this.getFieldsData(TLDocument, 'userInfo', ['seeding', 'seedingSize']);
                userInfo.seeding += seeding;
                userInfo.seedingSize += seedingSize;
            }
        }
        return userInfo;
    }
}


/***/ }),
/* 130 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'CinemaZ',
    timezoneOffset: '+0000',
    description: 'Movies Obscure Foreign',
    schema: 'AvistaZ',
    tags: ['剧集'],
    url: 'https://cinemaz.to/',
    collaborator: 'tranhoangcore'
};


/***/ }),
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);

const siteMetadata = {
    name: 'Concertos',
    timezoneOffset: '+0000',
    description: 'Concertos',
    url: 'https://concertos.live/',
    tags: ['MV'],
    search: {
        keywordsParam: 'title',
        requestConfig: {
            url: '/torrents',
            params: {
                order_by: 'created_at',
                direction: 'desc'
            },
            responseType: 'document'
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['name', 'id', 'messageCount', 'uploaded', 'downloaded', 'ratio', 'levelName']
            },
            {
                requestConfig: { url: '/user/$userId$' },
                assertion: {
                    id: 'userId'
                },
                fields: ['joinTime', 'bonus', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.torrents > tbody > tr' },
            id: { selector: 'a[href*="/torrent/"]', filters: [(query) => query.match(/\/torrent\/(\d+)/)[1]] },
            title: { selector: 'a.torrents__title' },
            url: { selector: 'a.torrents__title', attr: 'href' },
            link: { selector: 'a.torrents__title', attr: 'href', filters: [(query) => `${query}/download`] },
            time: { selector: 'td:eq(2)' },
            size: { selector: 'td:eq(3)' },
            author: { selector: 'td:eq(1)' },
            category: {
                selector: 'a[href*="?category_"]',
                attr: 'href',
                filters: [
                    (query) => (query.match(/category_(\d+)/) || ['', 'Other'])[1]
                ]
            },
            seeders: { selector: 'td:nth-last-child(3)' },
            leechers: { selector: 'td:nth-last-child(2)' },
            completed: { selector: 'td:nth-last-child(1)' },
            comments: { text: 0 },
            tags: [
                { name: 'Free', selector: "img[src='images/freeleech.png']" }
            ]
        },
        userInfo: {
            // page: '/',
            name: {
                selector: 'div.user-info > :first'
            },
            id: {
                selector: [".nav > a.nav__link[href*='/user']:first"],
                attr: 'href',
                filters: [(query) => query.replace('https://concertos.live/user/', '')]
            },
            messageCount: {
                selector: ['div.info-bar'],
                filters: [(query) => {
                        const queryMatch = query.match(/(\d+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }]
            },
            uploaded: {
                selector: [':has(> .user-info__item > .fa-upload)'],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: [':has(> .user-info__item > .fa-download)'],
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: [':has(.user-info__item > .fa-percent)'],
                filters: [(query) => query.replace('Ratio: ', '')]
            },
            levelName: {
                selector: [':has(.user-info__item > .fa-user)'],
                filters: [(query) => query.split(' ')[0]]
            },
            // page: '/user/$user.id$'
            joinTime: {
                selector: ['div.profile-block__age'],
                filters: [
                    (query) => Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(query.replace('Member since ', '')).valueOf()
                ]
            },
            bonus: {
                selector: ["td:contains('BONs') + td"],
                filters: [(query) => query.replace(' ', '')]
            },
            seeding: {
                selector: ["td:contains('Total Seeding') + td"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(\d+)/);
                        return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            seedingSize: {
                text: 0
            }
        }
    }
};


/***/ }),
/* 132 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return dicmusic; });
/* harmony import */ var _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);

const siteMetadata = {
    name: 'DIC',
    timezoneOffset: '+0800',
    description: 'music',
    url: 'https://dicmusic.club/',
    tags: ['音乐'],
    schema: 'GazelleJSONAPI',
    host: 'dicmusic.club',
    collaborator: ['ylxb2016', 'enigmaz'],
    selector: {
        userInfo: {
            seedingSize: {
                selector: ['table#bprates_overview > tbody > tr > td:eq(1)'],
                filters: [{ name: 'parseSize' }]
            },
            bonus: {
                selector: ['div#content > div.header > h3'],
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/.+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? queryMatch[1] : 0;
                    }
                ]
            }
        }
    }
};
class dicmusic extends _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async getUserSeedingTorrents() {
        const { data: bonusPage } = await this.request({ url: '/bonus.php', params: { action: 'bprates' }, responseType: 'document' });
        return this.getFieldsData(bonusPage, 'userInfo', ['seedingSize', 'bonus']);
    }
}


/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'DiscFan',
    url: 'https://discfan.net/',
    tags: ['影视', '港片'],
    schema: 'NexusPHP',
    formerHosts: [
        'pt.gztown.net'
    ],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '中国大陆' },
                    { value: 404, name: '中国香港特别行政区' },
                    { value: 405, name: '中国台湾省' },
                    { value: 402, name: '泰国' },
                    { value: 403, name: '日本' },
                    { value: 406, name: '韩国' },
                    { value: 410, name: '世界' },
                    { value: 411, name: '剧集' },
                    { value: 414, name: '音乐' },
                    { value: 413, name: '记录' },
                    { value: 416, name: '综艺' },
                    { value: 417, name: '体育' }
                ],
                cross: { mode: 'append' }
            }
        ]
    }
};


/***/ }),
/* 134 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'DXDHD',
    timezoneOffset: '+0000',
    description: '综合',
    url: 'https://dxdhd.com/',
    tags: ['综合'],
    schema: 'Unit3D',
    search: {
        categories: [
            {
                name: 'Category',
                key: 'categories',
                options: [
                    { value: 1, name: 'Movies' },
                    { value: 2, name: 'TV' },
                    { value: 3, name: 'Music' },
                    { value: 4, name: 'Anime' },
                    { value: 5, name: 'Software & Apps' },
                    { value: 6, name: 'e-books' },
                    { value: 7, name: 'Games' },
                    { value: 8, name: 'Sports' },
                    { value: 9, name: 'Others' },
                    { value: 10, name: 'XXX' }
                ],
                cross: { mode: 'raw' }
            }
        ]
    }
};


/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'Empornium',
    timezoneOffset: '+0000',
    description: 'Empornium (EMP) is a Private Torrent Tracker for XXX',
    url: 'https://www.empornium.me/',
    tags: ['Adult'],
    legacyUrl: [
        'https://www.empornium.is/',
        'https://empornium.sx/'
    ],
    search: {
        keywordsParam: 'searchtext',
        requestConfig: {
            url: '/torrents.php',
            params: {
                order_by: 'time',
                order_way: 'desc',
                action: 'advanced'
            }
        },
        categories: [
            {
                name: 'Category',
                key: 'filter_cat',
                options: [
                    { value: 1, name: 'Amateur' },
                    { value: 2, name: 'Anal' },
                    { value: 5, name: 'Asian' },
                    { value: 6, name: 'BBW' },
                    { value: 30, name: 'BDSM' },
                    { value: 36, name: 'Big Ass' },
                    { value: 8, name: 'Big Tits' },
                    { value: 7, name: 'Black' },
                    { value: 9, name: 'Classic' },
                    { value: 37, name: 'Creampie' },
                    { value: 10, name: 'Cumshot' },
                    { value: 11, name: 'DVD-R' },
                    { value: 12, name: 'Fetish' },
                    { value: 14, name: 'Gang Bang / Orgy' },
                    { value: 39, name: 'Gay / Bi' },
                    { value: 56, name: 'Hairy' },
                    { value: 35, name: 'Hardcore' },
                    { value: 44, name: 'HD Porn' },
                    { value: 3, name: 'Hentai / 3D' },
                    { value: 25, name: 'Homemade' },
                    { value: 43, name: 'Interracial' },
                    { value: 16, name: 'Latina' },
                    { value: 23, name: 'Lesbian' },
                    { value: 52, name: 'Lingerie' },
                    { value: 27, name: 'Magazines' },
                    { value: 53, name: 'Manga / Comic' },
                    { value: 18, name: 'Masturbation' },
                    { value: 26, name: 'Mature' },
                    { value: 40, name: 'Megapack' },
                    { value: 41, name: 'Natural Tits' },
                    { value: 17, name: 'Oral' },
                    { value: 29, name: 'Other' },
                    { value: 47, name: 'Parody' },
                    { value: 24, name: 'Paysite' },
                    { value: 21, name: 'Pictures / Images' },
                    { value: 50, name: 'Piss' },
                    { value: 55, name: 'Porn Music Videos' },
                    { value: 46, name: 'Pregnant / Preggo' },
                    { value: 51, name: 'Scat/Puke' },
                    { value: 22, name: 'Siterip' },
                    { value: 20, name: 'Softcore' },
                    { value: 49, name: 'Squirt' },
                    { value: 34, name: 'Straight' },
                    { value: 19, name: 'Teen' },
                    { value: 15, name: 'Transsexual' },
                    { value: 45, name: 'Voyeur' },
                    { value: 13, name: 'XXX Games / Apps' }
                ],
                cross: { mode: 'appendQuote' }
            }
        ]
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name', 'messageCount', 'seeding', 'uploaded', 'downloaded', 'ratio', 'bonus']
            },
            {
                requestConfig: { url: '/user.php' },
                assertion: { id: 'id' },
                fields: ['joinTime', 'levelName', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.torrent_table.grouping > tbody > tr:gt(0)' },
            id: {
                selector: 'a[href^="/torrents.php?action=download&id="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: { selector: 'a[href^="/torrents.php?id="]' },
            url: { selector: 'a[href^="/torrents.php?id="]', attr: 'href' },
            link: { selector: 'a[href^="/torrents.php?action=download&id="]', attr: 'href' },
            time: { selector: 'td:nth-child(5) > span', attr: 'title' },
            size: { selector: 'td:nth-child(6)' },
            author: { selector: 'td:eq(9)' },
            category: {
                selector: 'a[href*="filter_cat"]',
                attr: 'href',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(\d+)]=1/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 'Other';
                    }
                ]
            },
            seeders: { selector: 'td:nth-child(8)' },
            leechers: { selector: 'td:nth-child(9)' },
            completed: { selector: 'td:nth-child(7)' },
            comments: { selector: 'td:eq(3)' },
            tags: [
                { name: 'Free', selector: "span[title*='Freeleech'], img[alt='Freeleech']" }
            ],
            progress: {
                text: 0,
                selector: ["a[title='Currently Seeding Torrent'], a[title='Previously Snatched Torrent']", "a[title='Previously Grabbed Torrent File']", ''],
                case: {
                    "a[title='Currently Seeding Torrent'], a[title='Previously Snatched Torrent']": 100,
                    "a[title='Previously Grabbed Torrent File']": 0
                }
            },
            status: {
                text: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown,
                selector: ["a[title='Currently Seeding Torrent']", "a[title='Previously Snatched Torrent']", "a[title='Previously Grabbed Torrent File']"],
                case: {
                    "a[title='Currently Seeding Torrent']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    "a[title='Previously Snatched Torrent']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed,
                    "a[title='Previously Grabbed Torrent File']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive
                }
            }
        },
        userInfo: {
            // page: '/index.php'
            id: {
                selector: ["a.username[href*='user.php']:first"],
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: 'a.username'
            },
            messageCount: {
                text: 0,
                selector: ['div.alertbar'],
                filters: [() => 11]
            },
            seeding: {
                selector: ['#nav_seeding_r'],
                filters: [{ name: 'parseNumber' }]
            },
            uploaded: {
                selector: ["td:contains('Up:') + td"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["td:contains('Down:') + td"],
                filters: [{ name: 'parseSize' }]
            },
            ratio: { selector: ["td:contains('Ratio:') + td"] },
            bonus: { selector: ["td:contains('Credits:') + td"] },
            // page: '/user.php?id=$user.id$'
            joinTime: {
                selector: ["li:contains('Joined:') > span.time"],
                attr: 'title',
                filters: [{ name: 'parseTime' }]
            },
            levelName: {
                selector: ['span.rank']
            },
            seedingSize: {
                selector: ["ul.stats.nobullet > li:contains('Seeding Size:')"],
                filters: [{ name: 'parseSize' }]
            }
        }
    }
};


/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'ExoticaZ',
    timezoneOffset: '+0000',
    description: 'Adult',
    url: 'https://exoticaz.to/',
    tags: ['Adult'],
    schema: 'AvistaZ',
    host: 'exoticaz.to'
};


/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'ExtremlymTorrents',
    timezoneOffset: '+0000',
    description: 'ExtremlymTorrents (XTR) is a Semi-Private tracker for MOVIES / TV / GENERAL',
    url: 'https://extremlymtorrents.ws/',
    tags: ['综合'],
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/torrents-search.php',
            params: {
                lang: 0,
                sort: 'id',
                order: 'desc'
            }
        },
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { value: 22, name: '720p HD' },
                    { value: 15, name: '1080p HD' },
                    { value: 40, name: '4K UHD 2160p' },
                    { value: 12, name: 'BluRay' },
                    { value: 5, name: 'DVDRip' },
                    { value: 16, name: 'BluRay 3D' },
                    { value: 13, name: 'HDTV' },
                    { value: 47, name: 'Porn UHD 4K -[+18]- xXx' },
                    { value: 11, name: 'Porn -[+18]- xXx' },
                    { value: 50, name: 'xXx iMAGESET (+18)' },
                    { value: 41, name: 'TVRip' },
                    { value: 6, name: 'Music Mp3 | FLAC' },
                    { value: 9, name: 'Kvaluez | Cartoons' },
                    { value: 8, name: 'Comics | EBook' },
                    { value: 10, name: 'TV Episode | Season Complete' },
                    { value: 27, name: 'DVD | PAL | NTSC' },
                    { value: 25, name: 'WEBRip | WEB-DL' },
                    { value: 35, name: 'BRRip | BDRip | HDRip' },
                    { value: 3, name: 'Applications' },
                    { value: 17, name: 'PSP | Playstation ' },
                    { value: 30, name: 'PDTV | SDTV' },
                    { value: 18, name: 'PS3 | Playstation 3 ' },
                    { value: 46, name: 'PS4 | PlayStation 4' },
                    { value: 20, name: 'Iphone iOS' },
                    { value: 19, name: 'Androvalue Apk' },
                    { value: 21, name: 'Pack' },
                    { value: 49, name: 'TV UHD | 2160p | Episodes' },
                    { value: 24, name: 'VvalueeoClip' },
                    { value: 26, name: 'Wii Games' },
                    { value: 31, name: "DOC's" },
                    { value: 36, name: 'CAMRip | REC' },
                    { value: 38, name: 'TS: TeleSync | HD-TS' },
                    { value: 48, name: '4K | 2160p | Music Vvalueeo' },
                    { value: 28, name: 'Anime | Japanese' },
                    { value: 43, name: 'Hentai | Manga' },
                    { value: 29, name: 'Windows PC' },
                    { value: 7, name: 'Mac' },
                    { value: 23, name: 'Linux' },
                    { value: 32, name: 'GPS Navigation' },
                    { value: 45, name: 'Vinyl Rip' },
                    { value: 2, name: 'XBOX 360' },
                    { value: 1, name: 'Games PC' },
                    { value: 14, name: 'Wallpapers' },
                    { value: 44, name: 'Bollywood' },
                    { value: 42, name: 'X EXTERN ONLY MAGNET' },
                    { value: 39, name: 'Sport TV' },
                    { value: 39, name: 'Sport TV' }
                ],
                cross: { mode: 'append', key: 'c' }
            }
        ]
    },
    userInfo: {
        pickLast: ['id', 'name'],
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'name']
            },
            {
                requestConfig: { url: '/account-details.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'levelName', 'joinTime']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.xtrz > tbody > tr[class^="ttable_col"]' },
            id: {
                selector: 'a[href^="file.php?id="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: {
                selector: 'a[href^="file.php?id="] b'
            },
            url: { selector: 'a[href^="file.php?id="]', attr: 'href' },
            link: { selector: 'a[href^="download.php?id="]', attr: 'href' },
            time: {
                selector: 'td:nth-last-child(1)',
                filters: [
                    (query) => query.replace(/(\d{2}).(\d{2}).(\d{4})\n?(\d{2}:\d{2}:\d{2})/, '$3-$2-$1 $4')
                ]
            },
            size: { selector: 'td:nth-last-child(4)' },
            author: { selector: 'td:eq(3)' },
            category: {
                selector: 'a[href^="torrents.php?cat="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['cat'] }]
            },
            seeders: { selector: 'td:nth-last-child(3)' },
            leechers: { selector: 'td:nth-last-child(2)' },
            completed: { text: 'N/A' },
            comments: { text: 'N/A' },
            tags: [
                { name: 'Free', selector: "img[title='Free Torrents']" },
                { name: 'VIP', selector: "img[alt='Only VIP']" }
            ]
        },
        userInfo: {
            // page: '/',
            id: {
                selector: "a[href*='account-details.php']:first",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: "a[href*='account-details.php'][href*='id=']:first"
            },
            // page: '/account-details.php?id=$user.id$'
            uploaded: {
                selector: ["td.ttable_col2:contains('Uploaded:') + td"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["td.ttable_col2:contains('Downloaded:') + td"],
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: "td.ttable_col2:contains('User Class:') + td"
            },
            joinTime: {
                selector: "td.ttable_col2:contains('Joined:') + td",
                filters: [{ name: 'parseTime' }]
            },
            seeding: { text: 'N/A' },
            seedingSize: { text: 'N/A' },
            bonus: { text: 'N/A' }
        }
    }
};


/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'FileList',
    timezoneOffset: '+0000',
    description: 'FileList',
    url: 'https://filelist.io/',
    legacyUrl: [
        'https://flro.org/'
    ],
    tags: ['影视', '综合'],
    /**
     * 虽然有api接口，但是则需要我们使用 Basic Auth 的形式进行认证（从 Jackett 和 Lidarr 的代码推断）
     * 所以还是直接走页面解析算了
     */
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/browse.php',
            params: {
                cat: 0,
                searchin: 1,
                sort: 2
            }
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name', 'messageCount', 'bonus']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'ratio', 'levelName', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'div.visitedlinks:last > div[class=torrentrow]' },
            id: { selector: '> div:eq(1) a:first', attr: 'href', filters: [{ name: 'querystring', args: ['id'] }] },
            title: { selector: '> div:eq(1) a:first' },
            url: { selector: '> div:eq(1) a:first', attr: 'href' },
            link: { selector: '> div:eq(3) a:first', attr: 'href' },
            time: {
                selector: '> div:eq(5)',
                elementProcess: (element) => {
                    const elementMatch = element.innerHTML.replace('<br>', ' ').match(/(\d{2}:\d{2}:\d{2}[^\d]+?\d{2}\/\d{2}\/\d{4})/)[1];
                    return elementMatch
                        .replace(/(\d{2}:\d{2}:\d{2})[^\d]+?(\d{2}\/\d{2}\/\d{4})/, '$2 $1')
                        .replace(/(\d{2})\/(\d{2})\/(\d{4})/, '$3-$2-$1');
                }
            },
            size: { selector: '> div:eq(6)' },
            author: { selector: '> div:eq(10)' },
            category: { selector: '> div:eq(0) img[alt]:first', attr: 'alt' },
            seeders: {
                selector: '> div:eq(8)',
                filters: [(query) => query.split('/')[0] || 0]
            },
            leechers: {
                selector: '> div:eq(9)',
                filters: [(query) => query.split('/')[1] || 0]
            },
            completed: { selector: '> div:eq(7)' },
            comments: { selector: '> div:eq(4)' },
            tags: [
                { name: 'Free', selector: "img[alt='FreeLeech']" }
            ]
        },
        userInfo: {
            // page: '/index.php',
            id: {
                selector: "a[href*='userdetails.php']:last",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: "a[href*='userdetails.php']:last"
            },
            messageCount: {
                selector: ".alert a[href*='messages.php']",
                filters: [{ name: 'parseNumber' }]
            },
            bonus: {
                selector: "a[href='/shop.php']",
                filters: [{ name: 'parseNumber' }]
            },
            // page: '/userdetails.php?id=$user.id$',
            uploaded: {
                selector: "td.colhead:contains('Uploaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "td.colhead:contains('Downloaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "td.colhead:contains('Share ratio') + td",
                filters: [parseFloat]
            },
            levelName: {
                selector: "td.colhead:contains('Class') + td"
            },
            joinTime: {
                selector: "td.colhead:contains('Join'):contains('date') + td",
                filters: [
                    (query) => query.split(' (')[0],
                    { name: 'parseTime' }
                ]
            },
            seeding: {
                selector: "td.colhead:contains('Seed'):contains('bonus') + td > div > b:first",
                filters: [{ name: 'parseNumber' }]
            },
            seedingSize: {
                selector: "td.colhead:contains('Seed'):contains('bonus') + td > div > b:nth-child(2):last",
                filters: [{ name: 'parseSize' }]
            }
        }
    }
};


/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);


const siteMetadata = {
    name: 'GGN',
    timezoneOffset: '+0000',
    description: 'Game',
    url: 'https://gazellegames.net/',
    tags: ['Game'],
    schema: 'Gazelle',
    collaborator: 'ted423',
    selector: {
        search: {
            //
            time: { selector: '> td:eq(1)' },
            size: { selector: '> td:eq(3)' },
            seeders: { selector: '> td:eq(5)' },
            leechers: { selector: '> td:eq(6)' },
            completed: { selector: '> td:eq(4)' },
            comments: { text: 0 },
            author: { selector: '> td:eq(2)' },
            category: {
                selector: ':self',
                elementProcess: (element) => {
                    let groupElement = element;
                    while (true) {
                        groupElement = groupElement.previousElementSibling;
                        if (!groupElement || groupElement.classList.contains('group')) {
                            break;
                        }
                    }
                    if (groupElement && groupElement.querySelector('td.cats_col > div[title]')) {
                        return groupElement.querySelector('td.cats_col > div[title]').getAttribute('title');
                    }
                    else {
                        return 'Other';
                    }
                }
            },
            progress: {
                selector: ['#color_seeding, #color_snatched', '#color_leeching, #color_downloaded'],
                switchFilters: [
                    () => 100,
                    () => 0
                ]
            },
            status: {
                selector: ['#color_seeding', '#color_snatched', '#color_leeching', '#color_downloaded'],
                switchFilters: [
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed,
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading,
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive
                ]
            }
        },
        userInfo: {
            // "page": "/index.php",
            messageCount: {
                selector: ['.newnoti']
            },
            // "page": "/user.php?id=$user.id$",
            uploaded: {
                selector: ['#upload .stat.tooltip'],
                filters: [
                    (query) => Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(query.replace(/,/g, ''))
                ]
            },
            downloaded: {
                selector: ['#download .stat.tooltip'],
                filters: [
                    (query) => Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(query.replace(/,/g, ''))
                ]
            },
            bonus: {
                selector: ['#gold .stat.tooltip']
            },
            joinTime: {
                selector: ['.box_personal_history ul.stats li:nth-child(2) span.time']
            },
            seeding: {
                selector: ['#seeding']
            },
            seedingSize: {
                selector: ['#seeding_size'],
                filters: [
                    (query) => Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(query.replace(/,/g, ''))
                ]
            }
        }
    }
};


/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'GFXPeers',
    timezoneOffset: '+0000',
    url: 'https://gfxpeers.net/',
    schema: 'Gazelle',
    tags: ['设计', '素材'],
    collaborator: 'bimzcy'
};


/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'HD4FANS',
    schema: 'NexusPHP',
    url: 'https://pt.hd4fans.org/',
    tags: ['影视', '兽组'],
    collaborator: ['lilungpo', 'tongyifan'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '电影' },
                    { value: 404, name: '纪录片' },
                    { value: 405, name: '动漫' },
                    { value: 402, name: '电视剧' },
                    { value: 403, name: '综艺' },
                    { value: 406, name: 'MV' },
                    { value: 407, name: '体育' },
                    { value: 409, name: '其它' },
                    { value: 408, name: '音轨' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: ["div[class='progressarea'] > div"],
                attr: 'style',
                filters: [
                    (q) => (q.match(/(\d+(?:\.\d+)?)%/) || [0, 0])[1]
                ]
            }
        }
    }
};


/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'HDArea',
    timezoneOffset: '+0800',
    schema: 'NexusPHP',
    url: 'https://www.hdarea.co/',
    description: '高清世界',
    tags: ['影视', '综合'],
    collaborator: 'lzl20110',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movies Blu-ray' },
                    { value: 415, name: 'Movies REMUX' },
                    { value: 416, name: 'Movies 3D' },
                    { value: 410, name: 'Movies 1080p' },
                    { value: 411, name: 'Movies 720p' },
                    { value: 414, name: 'Movies DVD' },
                    { value: 412, name: 'Movies WEB-DL' },
                    { value: 413, name: 'Movies HDTV' },
                    { value: 417, name: 'Movies iPad' },
                    { value: 404, name: 'Documentaries' },
                    { value: 405, name: 'Animations' },
                    { value: 402, name: 'TV Series' },
                    { value: 403, name: 'TV Shows' },
                    { value: 406, name: 'Music Videos' },
                    { value: 407, name: 'Sports' },
                    { value: 409, name: 'Misc' },
                    { value: 408, name: 'HQ Audio' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: [
                    "table[title='downloading'] > tbody > tr > td > div",
                    "table[title='seeding'] > tbody > tr > td > div",
                    "table[title='Stopped'] > tbody > tr > td > div",
                    "table[title='completed'] > tbody > tr > td > div"
                ],
                attr: 'style',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/width:.?(\d.+)%/);
                        return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            status: {
                text: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown,
                selector: [
                    "table[title='downloading']:has( > tbody > tr > td > div)",
                    "table[title='seeding']:has( > tbody > tr > td > div)",
                    "table[title='Stopped']:has( > tbody > tr > td > div)",
                    "table[title='completed']:has( > tbody > tr > td > div)"
                ],
                case: {
                    "table[title='downloading']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading,
                    "table[title='seeding']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    "table[title='Stopped']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive,
                    "table[title='completed']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed
                }
            }
        }
    }
};


/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'HDATMOS',
    schema: 'NexusPHP',
    tags: ['影视', '综合'],
    url: 'https://hdatmos.club/',
    collaborator: 'luoyefe'
};


/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _tjupt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);

const siteMetadata = {
    name: '伊甸园',
    description: '这里是伊甸园 让我们赤裸坦诚相见',
    url: 'https://pt.hdbd.us/',
    tags: ['综合', 'XXX'],
    schema: 'NexusPHP',
    selector: {
        search: {
            // FIXME 这个站基于TJUPT，所以 progress, status 两个选择器直接套用，但未测试过
            progress: _tjupt__WEBPACK_IMPORTED_MODULE_0__["selectorSearchProgress"],
            status: _tjupt__WEBPACK_IMPORTED_MODULE_0__["selectorSearchStatus"]
        }
    }
};


/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'HDBits',
    timezoneOffset: '+0000',
    description: 'HDB',
    url: 'https://hdbits.org/',
    tags: ['影视', '综合'],
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/browse.php'
        },
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { value: 1, name: 'Movie' },
                    { value: 2, name: 'TV' },
                    { value: 3, name: 'Documentary' },
                    { value: 4, name: 'Music' },
                    { value: 5, name: 'Sport' },
                    { value: 6, name: 'Audio Track' },
                    { value: 7, name: 'XXX' },
                    { value: 8, name: 'Misc/Demo' }
                ]
            }
        ]
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name', 'messageCount']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table#torrent-list > tbody > tr:has(a[href^="/details.php?id="])' },
            id: { selector: 'a[href^="/details.php?id="]', attr: 'href', filters: [{ name: 'querystring', args: ['id'] }] },
            title: { selector: 'td:nth-child(3) a' },
            url: { selector: 'a[href^="/details.php?id="]', attr: 'href' },
            link: { selector: 'a[href^="/download.php"]', attr: 'href' },
            time: { selector: 'td:nth-child(5)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(6)' },
            author: { selector: 'td:eq(9)' },
            category: { selector: 'a[href^="?cat="]', attr: 'href', filters: [{ name: 'querystring', args: ['cate'] }] },
            seeders: { selector: 'td:nth-child(8)' },
            leechers: { selector: 'td:nth-child(9)' },
            completed: { selector: 'td:nth-child(7) a' },
            tags: [
                { name: 'Free', selector: "a[title^='100% FL:']" },
                { name: '50%', selector: "a[title^='50% Free Leech:']" },
                { name: '25%', selector: "a[title^='25% Free Leech:']" } // FIXME 这应该是 25% 还是 75% ？
            ]
        },
        userInfo: {
            id: {
                selector: "a[href*='userdetails.php']:first",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: "a[href*='userdetails.php']:first"
            },
            messageCount: {
                selector: 'a.alert-box--pm, span.js-notifications-count',
                filters: [{ name: 'parseNumber' }]
            },
            uploaded: {
                selector: "td.rowhead:contains('Uploaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "td.rowhead:contains('Downloaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "td.rowhead:contains('Share ratio') + td",
                filters: [parseFloat]
            },
            levelName: {
                selector: "td.rowhead:contains('Class') + td"
            },
            bonus: {
                selector: "td.rowhead:contains('Bonus') + td",
                filters: [{ name: 'parseNumber' }]
            },
            joinTime: {
                selector: "td.rowhead:contains('JOIN'):contains('date') + td",
                filters: [
                    (query) => query.split(' (')[0],
                    { name: 'parseTime' }
                ]
            },
            seeding: {
                selector: "td.heading:contains('Currently'):contains('seeding') + td",
                filters: [{ name: 'parseNumber' }]
            },
            seedingSize: {
                selector: ["td.heading:contains('Seeding size') + td"],
                filters: [{ name: 'parseSize' }]
            }
        }
    }
};


/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hdcity; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _schema_NexusPHP__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16);


const levelMap = {
    0: '堕落者(Peasant)',
    1: '天使(Angel)',
    2: '大天使(Power Angel)',
    3: '权天使(Elite Angel)',
    4: '能天使(Crazy Angel)',
    5: '力天使(Insane Angel)',
    6: '主天使(Veteran Angel)',
    7: '座天使(Extreme Angel)',
    8: '智天使(Ultimate Angel)',
    9: '炽天使(Master Angel)',
    10: '壕(VIP)',
    11: '隐天使(Retiree)',
    12: '射种天使(Uploader)',
    13: '论坛版主(Forum Moderator)',
    14: '总版主(Moderator)',
    15: '管理员(Administrator)',
    16: '守护天使(Sysop)',
    17: '市长(Mayor)'
};
const siteMetadata = {
    name: 'HDCity',
    schema: 'NexusPHP',
    url: 'https://hdcity.city/',
    tags: ['综合', '影视'],
    legacyUrl: [
        'https://hdcity.leniter.org/',
        'https://hdcity.work/',
        'http://hdcity4.leniter.org/' // IPv4
    ],
    collaborator: 'waldens',
    search: {
        requestConfig: {
            url: '/pt',
            params: {
                v: 'legacyinv' // 强行设置统一的返回界面样式，方便后面解析
            }
        },
        keywordsParam: 'iwannaseethis',
        categories: [
            {
                name: '分类',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movies/电影' },
                    { value: 402, name: 'Series/剧集' },
                    { value: 404, name: 'Doc/档案记录' },
                    { value: 405, name: 'Anim/动漫' },
                    { value: 403, name: 'Shows/节目' },
                    { value: 406, name: 'MV/音乐视频' },
                    { value: 407, name: 'Sports/体育' },
                    { value: 408, name: 'Audio/音频' },
                    { value: 727, name: 'XXX/家长指引' },
                    { value: 728, name: 'Edu/文档/教材' },
                    { value: 729, name: 'Soft/软件' },
                    { value: 409, name: 'Other/其他' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'div.text > table, div.text_alt > table, div.tr_review > table, div.tr_inpro > table' },
            title: { selector: "span[style='color:#777']" },
            subTitle: { selector: 'a.torname' },
            id: { selector: ['a[href^=download]'], attr: 'href' },
            link: { selector: ['a[href^=download]'], attr: 'href' },
            url: { selector: ['a.torname'], attr: 'href' },
            time: { selector: ['td:nth-child(8)'] },
            size: {
                selector: ["nobr:contains('B')"],
                filters: [{ name: 'parseSize' }]
            },
            seeders: { selector: ["a[href*='#seeders'] font"] },
            leechers: {
                selector: ["a[href*='#leechers']"],
                elementProcess: (element) => element.childNodes[1].textContent || 0
            },
            completed: {
                selector: ["a[href^='viewsnatches']:first"],
                elementProcess: (element) => element.childNodes[1].textContent || 0
            },
            progress: {
                selector: ['div.pbo div.pbc.sd, div.pbo div.pbc.ns, .pbo div.pbc.dl'],
                elementProcess: (element) => {
                    if (element.classList.contains('sd') || element.classList.contains('ns')) {
                        return 100;
                    }
                    else if (element.classList.contains('dl')) {
                        const queryMatch = (element.getAttribute('style') || '').match(/width:([ \d.]+)%/);
                        return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
                    }
                    else {
                        return 0;
                    }
                }
            },
            status: {
                selector: ['div.pbo div.pbc.sd', 'div.pbo div.pbc.ns', '.pbo div.pbc.dl'],
                elementProcess: (element) => {
                    if (element.classList.contains('sd')) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                    }
                    else if (element.classList.contains('ns')) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed;
                    }
                    else if (element.classList.contains('dl')) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive;
                    }
                    else {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                }
            }
        },
        userInfo: {
            id: {
                selector: ["div.text:contains('ID'):first"],
                attr: null,
                filters: [
                    (query) => {
                        const queryMatch = query.match(/\d+/);
                        return (queryMatch && queryMatch.length >= 1) ? parseInt(queryMatch[0]) : 0;
                    }
                ]
            },
            name: {
                selector: ["a[href*='userdetails'] > strong:first"]
            },
            uploaded: {
                selector: ["div.text:contains('上传量')", "div.text:contains('上傳量')", "div.text:contains('Uploaded')"]
            },
            downloaded: {
                selector: ["div.text:contains('下载量')", "div.text:contains('下載量')", "div.text:contains('Downloaded')"]
            },
            levelName: {
                selector: "img[src*='/pic/class/']",
                attr: 'src',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/\/pic\/class\/(\d+).gif/);
                        /**
                         * 注意虽然我们前面在定义 levelMap 使用 number 作为键值，但由于 JS 的特性，
                         * 使用对应数值字面量，同样也能访问到我们需要的等级信息
                         */
                        // @ts-ignore
                        return levelMap[queryMatch[1]];
                    }
                ]
            },
            bonus: {
                selector: ["div.text:contains('魅力值')", "div.text:contains('Karma'):contains('Points')"]
            },
            messageCount: {
                selector: ["li > a[href='messages']"]
            },
            joinTime: {
                selector: ["div.text:contains('加入日期')", "div.text:contains('Join'):contains('date')"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(?:加入日期|Join date)\s+(.*)\s\(/);
                        return (queryMatch && queryMatch.length >= 2) ? queryMatch[1] : 0;
                    }
                ]
            }
        }
    }
};
class hdcity extends _schema_NexusPHP__WEBPACK_IMPORTED_MODULE_1__["default"] {
    // FIXME 这会导致第一次请求时出现两次 /userdetails 页面请求，不过问题不大2333
    async getUserIdFromSite() {
        var _a, _b;
        const userDetailDocument = await this.requestUserDetailsPage(null);
        const userId = this.getFieldData(userDetailDocument, (_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.userInfo) === null || _b === void 0 ? void 0 : _b.id);
        return parseInt(userId);
    }
    async requestUserDetailsPage(userId) {
        const { data: userDetailDocument } = await this.request({
            url: '/userdetails',
            // params: { id: userId },  // 该站点请求自己信息时可以不带入用户id
            responseType: 'document',
            checkLogin: true
        });
        return userDetailDocument;
    }
    async requestUserSeedingPage(userId, type = 'seeding') {
        const { data } = await this.request({
            url: '/getusertorrentlistajax',
            params: { userid: userId, type }
        });
        return data || null;
    }
}


/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _hdhome__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);

const siteMetadata = {
    name: 'HD Dolby',
    schema: 'NexusPHP',
    url: 'https://www.hddolby.com/',
    description: '高清杜比',
    tags: ['影视', '综合'],
    collaborator: ['iceyuamao0510', 'tongyifan'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movies电影' },
                    { value: 402, name: 'TV Series电视剧' },
                    { value: 404, name: 'Documentaries纪录片' },
                    { value: 405, name: 'Animations动漫' },
                    { value: 403, name: 'TV Shows综艺' },
                    { value: 406, name: 'Music Videos' },
                    { value: 407, name: 'Sports体育' },
                    { value: 408, name: 'HQ Audio音乐' },
                    { value: 410, name: 'Games游戏' },
                    { value: 411, name: 'Study学习' },
                    { value: 409, name: 'Others其他' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            // FIXME 先从HDHOME中抄一下，没测试过
            // 但两个站的 sysop 基本是同一人，应该和我一样会偷懒的吧
            progress: _hdhome__WEBPACK_IMPORTED_MODULE_0__["selectorSearchProgress"],
            status: _hdhome__WEBPACK_IMPORTED_MODULE_0__["selectorSearchStatus"],
            // FIXME 先从HDHOME中抄一下，没测试过
            tags: [
                { selector: 'img.hitandrun', name: 'H&R', color: '#000' },
                { selector: 'span.tgf', name: '官方', color: '#06c' },
                { selector: 'span.tyc', name: '原创', color: '#085' },
                { selector: 'span.tgz', name: '官字', color: '#530' },
                { selector: 'span.tdb', name: 'Dolby Vision', color: '#358' },
                { selector: 'span.thdr10', name: 'HDR10', color: '#9a3' },
                { selector: 'span.thdrm', name: 'HDR10+', color: '#9b5' },
                { selector: 'span.tgy', name: '国配', color: '#f96' },
                { selector: 'span.tyy', name: '粤配', color: '#f66' },
                { selector: 'span.tzz', name: '中字', color: '#9c0' },
                { selector: 'span.tjz', name: 'Excl.' },
                { selector: 'span.txz', name: '限转', color: '#c03' },
                { selector: 'span.tdiy', name: 'DIY', color: '#993' },
                { selector: 'span.tsf', name: '首发', color: '#339' },
                { selector: 'span.tyq', name: '应求', color: '#f90' },
                { selector: 'span.tm0', name: '零魔', color: '#096' }
            ]
        }
    }
};


/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/**
 * FIXME 无号，未进行测试
 * Rhilip, 2021.04.09
 */

const siteMetadata = {
    name: 'HDFans',
    timezoneOffset: '+0800',
    description: '与志同道合之人前行 分享更多值得珍藏的资源',
    url: 'https://hdfans.org/',
    tags: ['综合', '电影', '电视剧', '纪录片'],
    schema: 'NexusPHP',
    collaborator: 'csi0n',
    selector: {
        search: {
            progress: {
                selector: ['> td:eq(9)'],
                filters: [
                    (query) => query === '--' ? 0 : parseFloat(query)
                ]
            },
            status: {
                selector: ['> td:eq(9)'],
                filters: [
                    (query) => query === '--' ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown : (parseFloat(query) >= 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive)
                ]
            }
        }
    }
};


/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hdforever; });
/* harmony import */ var _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);

const siteMetadata = {
    name: 'HD-Forever',
    timezoneOffset: '+0100',
    description: 'HD-F',
    schema: 'GazelleJSONAPI',
    tags: ['影视', '综合'],
    url: 'https://hdf.world/',
    collaborator: ['luckiestone'],
    selector: {
        userInfo: {
            seedingSize: {
                selector: ['table.torrent_table:first td.nobr'],
                filters: [{ name: 'parseSize' }]
            },
            bonus: {
                selector: "li#BonusPoints a[href*='store.php']",
                filters: [
                    (query) => query.replace(/,|\n|\s+/g, '')
                ]
            }
        }
    }
};
class hdforever extends _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformGroupTorrent(group, torrent) {
        const parsedTorrent = await super.transformGroupTorrent(group, torrent);
        /**
         * 覆写 title 和 subTitle
         * @refs: https://www.diffchecker.com/jnRa1BMg
         */
        parsedTorrent.title = `${group.groupName} [${group.groupYear}] ${torrent.encoding} / ${torrent.format} / ${torrent.media}` +
            (torrent.isFreeleech || torrent.isNeutralLeech || torrent.isPersonalFreeleech ? ' / Freeleech' : '');
        parsedTorrent.subTitle = undefined;
        return parsedTorrent;
    }
    async getUserSeedingTorrents() {
        const { data: bonusPage } = await this.request({ url: '/store.php', params: { action: 'rate' }, responseType: 'document' });
        return this.getFieldsData(bonusPage, 'userInfo', ['seedingSize', 'bonus']);
    }
}


/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    schema: 'Unit3D',
    name: 'HDPOST',
    url: 'https://pt.hdpost.top/',
    tags: ['电影', '电视剧']
};


/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'HDRoute',
    timezoneOffset: '+0800',
    description: 'HDRoute',
    url: 'aHR0cDovL2hkcm91dGUub3JnLw==',
    tags: ['影视', '综合'],
    search: {
        keywordsParam: 's',
        requestConfig: {
            url: '/browse.php',
            params: {
                dp: 0,
                add: 0,
                action: 's',
                or: 1
            }
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'name', 'bonus']
            },
            {
                requestConfig: { url: '/userdetail.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'levelName', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: '#unsticky-torrent-table dl' },
            id: {
                selector: ':self',
                attr: 'id',
                filters: [
                    (query) => parseInt(query.replace('dl_torrent_', ''))
                ]
            },
            title: { selector: '.title_chs' },
            subTitle: { selector: '.title_eng' },
            url: {
                selector: ':self',
                attr: 'id',
                filters: [
                    (query) => `/details.php?id=${query.replace('dl_torrent_', '')}`
                ]
            },
            link: {
                selector: ':self',
                attr: 'id',
                filters: [
                    (query) => `/download.php?id=${query.replace('dl_torrent_', '')}`
                ]
            },
            time: { selector: '.torrent_added' },
            author: { selector: '.torrent_owner' },
            category: { text: 'ALL' },
            seeders: { selector: '.torrent_count.strong:eq(0)', filters: [(query) => query === '---' ? 0 : query] },
            leechers: { selector: '.torrent_count.strong:eq(1)', filters: [(query) => query === '---' ? 0 : query] },
            completed: { text: -1 },
            comments: { selector: 'span.torrent_comments_count' },
            tags: [
                { name: 'Free', selector: 'figure.sprite_dlp000, figure.sprite_tempo_free' },
                { name: '30%', selector: 'figure.sprite_dlp030' },
                { name: '50%', selector: 'figure.sprite_dlp050' },
                { name: '70%', selector: 'figure.sprite_dlp070' }
            ]
        },
        userInfo: {
            id: {
                selector: [".headerRightInfo a[href*='userdetail.php']"],
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: ".headerRightInfo a[href*='userdetail.php']"
            },
            bonus: { text: 'N/A' },
            uploaded: {
                selector: ".headerRightInfo span:contains('上传量: ') > span",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ".headerRightInfo span:contains('下载量: ') > span",
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: ".userdetail-list-title:contains('用户等级') + div",
                filters: [(query) => query.replace(' 级别', '')]
            },
            joinTime: {
                selector: ".userdetail-list-title:contains('注册日期') + div",
                filters: [{ name: 'parseTime' }]
            },
            seeding: {
                selector: ".header-user-data a[href*='list_seeding.php']"
            },
            seedingSize: {
                selector: ".header-user-data a[href*='list_seeding.php'] + span",
                filters: [{ name: 'parseSize' }]
            }
        }
    }
};


/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);


const siteMetadata = {
    name: 'HDSky',
    schema: 'NexusPHP',
    url: 'https://hdsky.me/',
    description: '高清发烧友后花园PT',
    tags: ['影视', '纪录片', '综合'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movies/电影' },
                    { value: 404, name: 'Documentaries/纪录片' },
                    { value: 410, name: 'iPad/iPad影视' },
                    { value: 405, name: 'Animations/动漫' },
                    { value: 402, name: 'TV Series/剧集' },
                    { value: 403, name: 'TV Shows/综艺' },
                    { value: 406, name: 'Music Videos/音乐MV' },
                    { value: 407, name: 'Sports/体育' },
                    { value: 408, name: 'HQ Audio/无损音乐' },
                    { value: 409, name: 'Misc/其他' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            id: {
                selector: 'form[action*="download.php"]:first',
                attr: 'action',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            url: {
                selector: 'form[action*="download.php"]:first',
                attr: 'action',
                filters: [
                    (query) => '/details.php?id=' + url_parse__WEBPACK_IMPORTED_MODULE_0___default()(query, true).query.id
                ]
            },
            link: {
                selector: 'form[action*="download.php"]:first',
                attr: 'action'
            },
            progress: {
                selector: ['div.progressseeding, div.progressfinished, div.progressdownloading, div.progressdownloaded'],
                attr: 'style',
                filters: [
                    (query) => {
                        query = query || '';
                        const queryMatch = query.match(/width:([ \d.]+)%/);
                        return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            status: {
                text: _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].unknown,
                selector: ['div[class^="progress"]'],
                case: {
                    '.progressseeding': _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].seeding,
                    '.progressdownloading': _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].downloading,
                    '.progressfinished': _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].completed,
                    '.progressdownloaded': _shared_types__WEBPACK_IMPORTED_MODULE_1__[/* ETorrentStatus */ "b"].inactive
                }
            }
        }
    }
};


/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);

const siteMetadata = {
    name: 'HD-Space',
    timezoneOffset: '+0000',
    description: 'Sharing The Universe',
    url: 'https://hd-space.org/',
    tags: ['影视'],
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/index.php',
            params: {
                page: 'torrents',
                active: 0
            }
        }
    },
    userInfo: {
        pickLast: ['id', 'name', 'joinTime'],
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name', 'messageCount', 'uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'seeding']
            },
            {
                requestConfig: { url: '/index.php', params: { page: 'usercp' } },
                assertion: { id: 'uid' },
                fields: ['joinTime']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.lista > tbody > tr:has(a[href*="index.php?page=torrent-details"])' },
            id: {
                selector: 'a[href*="index.php?page=torrent-details"]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: { selector: 'a[href*="index.php?page=torrent-details"]' },
            url: { selector: 'a[href*="index.php?page=torrent-details"]', attr: 'href' },
            link: { selector: 'a[href^="download.php]', attr: 'href' },
            time: {
                selector: '> td:eq(4)',
                filters: [
                    // "July 11, 2015, 13:34:09", "Today|Yesterday at 20:04:23"
                    (query) => {
                        if (query.includes('at')) {
                            query = query.replace('Today', Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])().format('DD/MM/YYYY'));
                            query = query.replace('Yesterday', Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])().add(-1, 'day').format('DD/MM/YYYY'));
                            query = query.replace(' at ', ' ');
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(query, 'DD/MM/YYYY HH:mm:ss').valueOf();
                        }
                        else {
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(query).valueOf();
                        }
                    }
                ]
            },
            size: { selector: '> td:eq(5)' },
            author: { selector: '> td:eq(6)' },
            category: { selector: '> td:eq(0) img', attr: 'alt', text: 'Other' },
            seeders: { selector: '> td:eq(7)' },
            leechers: { selector: '> td:eq(8)' },
            completed: { selector: '> td:eq(9)' },
            comments: { selector: '> td:eq(3)', filters: [(query) => query === '---' ? 0 : query] },
            tags: [
                { name: 'Free', selector: "img[src='gold/gold.png'], img[src='images/sf.png']" },
                { name: '50%', selector: "img[src='gold/silver.png']" }
            ]
        },
        userInfo: {
            // page: '/index.php'
            id: {
                selector: "a[href*='index.php?page=usercp']:first",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['uid'] }]
            },
            name: {
                selector: "td[align='center'][style='text-align:center;']:contains('Welcome back')>span"
            },
            messageCount: {
                selector: ["a[href*='do=pm']"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(\d+)/);
                        return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            uploaded: {
                selector: ["td.green:contains('UP')"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["td.red:contains('DL')"],
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "td.yellow:contains('Ratio')",
                filters: [
                    (query) => parseFloat(query.replace(' Ratio: ', ''))
                ]
            },
            levelName: {
                selector: ["td[align='center'][style='text-align:center;']:contains('Rank')"],
                filters: [(query) => query.replace('Rank: ', '')]
            },
            bonus: {
                selector: ["td.green:contains('Bonus')"],
                filters: [(query) => query.replace('Bonus: ', '')]
            },
            seeding: {
                selector: ['#menu + table > tbody > tr > td:nth-child(4) b > font:nth-child(2)']
            },
            seedingSize: {
                text: 'N/A' // FIXME 实际是能获取到的
            },
            // page: '/index.php?page=usercp&uid=$user.id$',
            joinTime: {
                selector: ["td.header:contains('Joined on') + td"],
                filters: [{ name: 'parseTime' }]
            }
        }
    }
};


/***/ }),
/* 154 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'HDTime',
    schema: 'NexusPHP',
    url: 'https://hdtime.org/',
    description: 'HDTime, time to forever!',
    tags: ['影视', '综合'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '电影' },
                    { value: 424, name: 'Blu-Ray原盘' },
                    { value: 402, name: '剧集' },
                    { value: 403, name: '综艺' },
                    { value: 405, name: '动漫' },
                    { value: 414, name: '软件' },
                    { value: 407, name: '体育' },
                    { value: 404, name: '纪录片' },
                    { value: 406, name: 'MV' },
                    { value: 408, name: '音乐' },
                    { value: 410, name: '游戏' },
                    { value: 411, name: '文档' },
                    { value: 409, name: '其他' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: ['div.progressarea'],
                filters: [parseFloat]
            },
            status: {
                selector: ['div.progressarea'],
                filters: [
                    // 未交待具体情况，不能准确判断时候是在下载中，所以置 unknown
                    (query) => parseFloat(query) >= 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown
                ]
            }
        }
    }
};


/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hdtorrents; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1);
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_5__);






const siteMetadata = {
    name: 'HD-Torrents',
    timezoneOffset: '+0000',
    description: 'HD-Torrents.org',
    url: 'https://hd-torrents.org/',
    legacyUrl: [
        'https://hdts.ru/',
        'https://hd-torrents.net/',
        'https://hd-torrents.me/'
    ],
    tags: ['综合'],
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/torrents.php',
            params: {
                active: 0
            }
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'messageCount']
            },
            {
                requestConfig: { url: '/usercp.php' },
                assertion: { id: 'uid' },
                fields: ['name', 'uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime', 'seeding']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.mainblockcontenttt tr:has(td.mainblockcontent:has(a[href*="details.php"]))' },
            id: {
                selector: 'a[href^="details.php?id="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: { selector: 'a[href^="details.php?id="]' },
            url: { selector: 'a[href^="details.php?id="]', attr: 'href' },
            link: { selector: "a[href*='download.php']", attr: 'href' },
            time: {
                selector: '> td:eq(6)',
                filters: [(query) => Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(query.replace('  ', ' '), 'HH:mm:ss MM/DD/YYYY').valueOf()]
            },
            size: { selector: '> td:eq(7)' },
            author: { selector: '> td:eq(8)' },
            category: { selector: '> td:eq(1) img[alt]', text: 'Other', attr: 'alt' },
            seeders: { selector: '> td:eq(9)' },
            leechers: { selector: '> td:eq(10)' },
            completed: { selector: '> td:eq(11)' },
            comments: { selector: '> td:eq(3)', filters: [(query) => query === '--' ? 0 : query] },
            tags: [
                { name: 'Free', selector: "img[src*='free.png']" },
                { name: '75%', selector: "img[src*='25.png']" },
                { name: '50%', selector: "img[src*='50.png']" },
                { name: '25%', selector: "img[src*='75.png']" }
            ],
            progress: {
                text: 0,
                selector: '> td:eq(1)',
                case: {
                    '.mainblockcontentpeersall': null,
                    '.mainblockcontentpeersseed': 100,
                    '.mainblockcontenthistact': 100,
                    '.mainblockcontentpeersleech': 0
                }
            },
            status: {
                text: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown,
                selector: '> td:eq(1)',
                case: {
                    '.mainblockcontentpeersall': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown,
                    '.mainblockcontentpeersseed': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    '.mainblockcontenthistact': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive,
                    '.mainblockcontentpeersleech': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading
                }
            }
        },
        userInfo: {
            // page: '/',
            id: {
                selector: ["a[href*='usercp.php?uid=']:first"],
                attr: 'href',
                filters: [{ name: 'querystring', args: ['uid'] }]
            },
            messageCount: {
                selector: ['.new-pm.warning'],
                filters: [{ name: 'parseNumber' }]
            },
            // page: '/usercp.php?uid=$user.id$',
            name: {
                selector: ["tr#CurrentDetailsHideShowTR td.header:contains('User') + td"]
            },
            uploaded: {
                selector: ["td.header:contains('Uploaded') + td"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["td.header:contains('Downloaded') + td"],
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "td.header:contains('Ratio') + td",
                filters: [{ name: 'parseNumber' }]
            },
            levelName: {
                selector: "td.header:contains('Rank') + td"
            },
            bonus: {
                selector: ["td.header:contains('Seed Bonus Points') + td"],
                filters: [(query) => parseFloat(query.replace(/,/g, '')) || 0]
            },
            joinTime: {
                selector: "td.header:contains('Joined on') + td",
                filters: [{ name: 'parseTime', args: ['DD/MM/YYYY HH:mm:ss'] }]
            },
            seeding: {
                selector: ["td.nav[title='Active-Torrents'] > a[href*='#actives']"],
                filters: [(query) => parseInt(query.replace(/,/g, '')) || 0]
            }
        }
    }
};
class hdtorrents extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_4__["default"] {
    /**
     * FIXME 由于目前使用csrf的站点并不多，所以先这么写，到时候看看是否进行抽象
     * 根据 Jackett 的代码，似乎并不需要 csrfToken 就可以实现搜索，
     * 且根据搜索测试，确实可以不需要........
     *
    protected override async transformSearchFilter (filter: searchFilter): Promise<AxiosRequestConfig> {
      const config = await super.transformSearchFilter(filter)
  
      if (filter.keywords) { // 如果 keywords 存在，则需要获取 csrfToken
        const { data: TPage } = await this.request({ url: '/torrents.php', responseType: 'document' })
        config.params.csrfToken = this.getFieldData(TPage, {
          selector: ["input[name='csrfToken']:first"]
        })
      }
  
      return config
    }
     */
    async flushUserInfo(lastUserInfo = {}) {
        const baseUserInfo = await super.flushUserInfo();
        if (baseUserInfo.id && !baseUserInfo.seedingSize) {
            baseUserInfo.seedingSize = 0;
            for (const pageInfo = { count: 0, current: 0 }; pageInfo.current <= pageInfo.count; pageInfo.current++) {
                const TListDocument = await this.request({ url: '/usercp.php', params: { uid: baseUserInfo.id, activepage: pageInfo.current }, responseType: 'document' });
                // 更新最大页数
                if (pageInfo.count === 0) {
                    pageInfo.count = this.getFieldData(TListDocument, {
                        selector: ["a[href*='activepage']:contains('1'):last"],
                        attr: 'href',
                        filters: [(query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_1___default()(query, true).query.activepage) || -1]
                    });
                }
                // 遍历并更新做种体积
                const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_5___default()('tr#SeedingtorrentsHideShowTR table > tbody > tr:gt(0)');
                trAnothers.forEach(trAnother => {
                    const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_5___default()('td:eq(1)', trAnother)[0];
                    baseUserInfo.seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_3__[/* parseSizeString */ "f"])(sizeAnother.innerText.trim());
                });
            }
        }
        return baseUserInfo;
    }
}


/***/ }),
/* 156 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'HDU',
    schema: 'NexusPHP',
    url: 'https://pt.hdupt.com/',
    legacyUrl: [
        'https://pt.upxin.net/'
    ],
    tags: ['影视', '综合'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movies/电影' },
                    { value: 402, name: 'TV Series/电视剧' },
                    { value: 403, name: 'TV Shows/综艺' },
                    { value: 404, name: 'Documentaries/纪录片' },
                    { value: 405, name: 'Animations/动画' },
                    { value: 406, name: 'Music Videos/音乐 MV' },
                    { value: 407, name: 'Sports/体育' },
                    { value: 408, name: 'HQ Audio/无损音乐' },
                    { value: 411, name: 'Misc/其他' },
                    { value: 410, name: 'Games/游戏' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: ["td.embedded[style*='color: blue;font-weight: bold']"],
                filters: [
                    (query) => {
                        return /\d+%/.test(query) ? parseFloat(query) : 0;
                    }
                ]
            }
            // TODO status
        },
        userInfo: {
            bonus: {
                selector: ["td.rowhead:contains('魔力值') + td"]
            }
        }
    }
};


/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'HDZone',
    url: 'https://hdzone.me/',
    tags: ['电影'],
    schema: 'NexusPHP',
    collaborator: 'ian',
    selector: {
        search: {
            progress: {
                selector: ['> td:eq(8)'],
                filters: [
                    (query) => query === '-' ? 0 : parseFloat(query)
                ]
            }
        }
    }
};


/***/ }),
/* 158 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: '百川PT',
    description: '校内10兆高速下载，优质高清资源共享！',
    url: 'https://www.hitpt.com/',
    tags: ['教育网', '影视', '综合'],
    schema: 'NexusPHP',
    host: 'www.hitpt.com',
    formerHosts: [
        'pt.ghtt.net'
    ],
    collaborator: 'tongyifan',
    search: {
        categories: [
            {
                name: '分区',
                key: '#changePath',
                options: [
                    { name: '影视', value: '/torrents.php' },
                    { name: '综合', value: '/music.php' /* 太NB了 */ }
                ]
            },
            {
                name: '影视分类',
                key: 'cat',
                options: [
                    { value: 401, name: '高清电影' },
                    { value: 402, name: '高清剧集' },
                    { value: 403, name: '抢鲜或标清' },
                    { value: 405, name: '动漫' },
                    { value: 407, name: '体育' },
                    { value: 413, name: '纪录片' },
                    { value: 416, name: '综艺' },
                    { value: 415, name: 'MV' }
                ]
            },
            {
                name: '综合分类',
                key: 'cat',
                notes: '请先在“分类”中选择综合，才能使用该分类',
                options: [
                    { value: 411, name: '电子文档' },
                    { value: 406, name: '音乐' },
                    { value: 408, name: '工程软件' },
                    { value: 404, name: '教学视频' },
                    { value: 410, name: '游戏' },
                    { value: 409, name: '其他' }
                ]
            }
        ]
    }
};


/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: '蝴蝶-HUDBT',
    timezoneOffset: '+0800',
    url: 'https://hudbt.hust.edu.cn/',
    tags: ['教育网', '影视', '综合'],
    schema: 'NexusPHP',
    collaborator: 'Rhilip',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                // FIXME 由于目前配置问题，不能在配置文件中做到大分类，可能需要用户自定义
                options: [
                    // 电影 cat1=1&cat401=1&cat413=1&cat414=1&cat415=1&cat430=1
                    { value: 401, name: '大陆电影' },
                    { value: 413, name: '港台电影' },
                    { value: 414, name: '亚洲电影' },
                    { value: 415, name: '欧美电影' },
                    { value: 430, name: 'iPad' },
                    { value: 433, name: '抢先视频' },
                    // 剧集 cat2=1&cat402=1&cat417=1&cat416=1&cat418=1
                    { value: 402, name: '大陆剧集' },
                    { value: 417, name: '港台剧集' },
                    { value: 416, name: '亚洲剧集' },
                    { value: 418, name: '欧美剧集' },
                    // 纪录片 cat9=1&cat404=1
                    { value: 404, name: '纪录片' },
                    // 体育 cat7=1&cat407=1
                    { value: 407, name: '体育' },
                    // 综艺 cat5=1&cat403=1&cat419=1&cat420=1&cat421=1
                    { value: 403, name: '大陆综艺' },
                    { value: 419, name: '港台综艺' },
                    { value: 420, name: '亚洲综艺' },
                    { value: 421, name: '欧美综艺' },
                    // 音乐 cat8=1&cat408=1&cat422=1&cat423=1&cat424=1&cat425=1
                    { value: 408, name: '华语音乐' },
                    { value: 422, name: '日韩音乐' },
                    { value: 423, name: '欧美音乐' },
                    { value: 424, name: '古典音乐' },
                    { value: 425, name: '原声音乐' },
                    // MV cat11=1&cat406=1
                    { value: 406, name: '音乐MV' },
                    // 资料 cat409=1
                    { value: 409, name: '其他' },
                    { value: 412, name: '学习' },
                    // 电子书 cat12=1&cat432=1
                    { value: 432, name: '电子书' },
                    // 动漫 cat3=1&cat405=1&cat427=1&cat428=1&cat429=1
                    { value: 405, name: '完结动漫' },
                    { value: 427, name: '连载动漫' },
                    { value: 428, name: '剧场OVA' },
                    { value: 429, name: '动漫周边' },
                    // 游戏 cat4=1&cat410=1&cat431=1
                    { value: 410, name: '游戏' },
                    { value: 431, name: '游戏视频' },
                    // 软件 cat10=1&cat411=1&cat426=1
                    { value: 411, name: '软件' },
                    { value: 426, name: 'MAC' },
                    // 华中科技大学 cat13=1&cat1037=1
                    { value: 1037, name: 'HUST' }
                ],
                cross: { mode: 'append' }
            }
        ]
    }
};


/***/ }),
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);

const siteMetadata = {
    name: 'IPTorrents',
    timezoneOffset: '+0000',
    description: 'IPTorrents - #1 Private Tracker',
    url: 'https://iptorrents.com/',
    tags: ['综合'],
    search: {
        keywordsParam: 'q',
        requestConfig: {
            url: '/t'
        }
    },
    userInfo: {
        pickLast: ['id'],
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['messageCount', 'name', 'uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table#torrents > tbody > tr' },
            id: {
                selector: ' > td.al > a',
                attr: 'href',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/\/t\/(\d+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : '';
                    }
                ]
            },
            title: { selector: ' > td.al > a' },
            subTitle: {
                selector: 'div.sub',
                filters: [
                    (query) => {
                        if (/ \| /.test(query)) {
                            return query.split(' | ')[0];
                        }
                        return '';
                    }
                ]
            },
            url: { selector: ' > td.al > a', attr: 'href' },
            link: { selector: 'a[href*="/download.php"]', attr: 'href' },
            time: {
                selector: 'div.sub',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(?:\| )?([\d.]+ .+? ago)/);
                        return queryMatch && queryMatch.length >= 2 ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseTimeToLive */ "g"])(queryMatch[1]) : '';
                    }
                ]
            },
            size: { selector: '> td:nth-child(6)' },
            author: {
                selector: 'div.sub',
                filters: [
                    (query) => {
                        if (query.includes(' by ')) {
                            const queryMatch = query.match(/by (.+)$/);
                            return queryMatch && queryMatch.length >= 2 ? queryMatch[1] : '';
                        }
                        return '';
                    }
                ]
            },
            category: { selector: 'td:eq(0) img', attr: 'alt' },
            seeders: { selector: 'td:nth-last-child(2)' },
            leechers: { selector: 'td:nth-last-child(1)' },
            completed: { selector: 'td:nth-last-child(3)' },
            /**
             * 部分用戶可能开启 “Torrents - Show files count”，此时在 Size 和 Snatched (即 completed ) 中间会添加 文件数 列，
             * 所以对于 seeders， leechers， completed 应该从后往前取，
             * 而 size，comments 应该从前往后取
             */
            comments: { selector: '> td:nth-child(5)', filters: [(q) => q.replace(/Go ?to ?comments/, '')] },
            tags: [
                { name: 'Free', selector: 'span.free' },
                { name: 'Free', selector: 'span.t_tag_free_leech' }
            ]
        },
        userInfo: {
            id: {
                selector: ["a[href*='/u/']:first", "a[href*='userdetails.php']:first"],
                attr: 'href',
                switchFilters: [
                    (query) => {
                        const queryMatch = query.match(/u\/(.+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : '';
                    },
                    { name: 'querystring', args: ['id'] }
                ]
            },
            messageCount: {
                selector: ["td[style*='background: red'] a[href*='messages.php']"],
                filters: [{ name: 'parseNumber' }]
            },
            name: {
                selector: 'h1.c0'
            },
            uploaded: {
                selector: "th:contains('Uploaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "th:contains('Downloaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "th:contains('Share ratio') + td",
                filters: [{ name: 'parseNumber' }]
            },
            levelName: {
                selector: "th:contains('Class') + td"
            },
            bonus: {
                selector: "a[href='/mybonus.php']",
                filters: [{ name: 'parseNumber' }]
            },
            joinTime: {
                selector: "th:contains('Join date') + td",
                filters: [
                    (query) => query.split(' (')[0],
                    { name: 'parseTime' }
                ]
            },
            seeding: {
                selector: "th:contains('Seeding') + td",
                filters: [{ name: 'parseNumber' }]
            },
            seedingSize: {
                text: 'N/A'
            }
        }
    }
};


/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'JoyHD',
    schema: 'NexusPHP',
    description: 'JoyHD成立於2013年，發佈藍光原碟，藍光DIY和原抓音樂。',
    url: 'https://www.joyhd.net/',
    tags: ['影视', '综合'],
    collaborator: 'ylxb2016',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { name: 'Movie', value: 401 },
                    { name: 'TV Series', value: 402 },
                    { name: 'Entertainment', value: 403 },
                    { name: 'Anime', value: 405 },
                    { name: 'Music', value: 414 },
                    { name: 'Sport', value: 407 },
                    { name: 'Documentaries', value: 404 },
                    { name: 'MV', value: 406 },
                    { name: 'Software', value: 408 },
                    { name: 'Game', value: 410 },
                    { name: 'e-Learn', value: 411 },
                    { name: 'Other', value: 409 }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        userInfo: {
            bonus: {
                selector: ["td.rowhead:contains('银元') + td"]
            }
        }
    }
};


/***/ }),
/* 162 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return jpopsuki; });
/* harmony import */ var _schema_Gazelle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_3__);




const siteMetadata = {
    name: 'JPopsuki',
    timezoneOffset: '+0000',
    description: '日韩音乐',
    url: 'https://jpopsuki.eu/',
    tags: ['音乐', '日韩'],
    schema: 'Gazelle',
    search: {
        categories: [
            {
                name: 'Category',
                key: 'filter_cat',
                options: [
                    { value: 1, name: 'Album' },
                    { value: 2, name: 'Single' },
                    { value: 3, name: 'PV' },
                    { value: 4, name: 'DVD' },
                    { value: 5, name: 'TV-Music' },
                    { value: 6, name: 'TV-Variety' },
                    { value: 7, name: 'TV-Drama' },
                    { value: 8, name: 'Fansubs' },
                    { value: 9, name: 'Pictures' },
                    { value: 10, name: 'Misc' }
                ]
            }
        ]
    },
    selector: {
        search: {
            // 对于特定站点，不使用自动生成列表，而是直接指定selector
            time: { selector: '> td:eq(5)' },
            size: { selector: '> td:eq(6)' },
            completed: { selector: '> td:eq(7)' },
            seeders: { selector: '> td:eq(8)' },
            leechers: { selector: '> td:eq(9)' },
            comments: { text: 0, selector: 'a[href*="#comments"][title="View Comments"]' },
            category: { selector: '> td:eq(1) > a' },
            link: { selector: "a[href*='torrents.php?action=download'][title='Download']", attr: 'href' },
            tags: [
                { selector: "strong:contains('Freeleech!')", name: 'Free' }
            ]
        },
        userInfo: {
            seeding: {
                selector: "div:contains('Community') + ul.stats > li:contains('Seeding:')",
                filters: [
                    (query) => {
                        const queryMatch = query.match(/Seeding.+?([\d.]+)/);
                        return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            messageCount: {
                selector: ["#alerts > .alertbar > a[href='notice.php']", "div.alertbar > a[href*='inbox.php']"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(\d+)/);
                        return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            }
        }
    }
};
class jpopsuki extends _schema_Gazelle__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchPage(doc) {
        const torrents = [];
        const rows = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('table.torrent_table:last > tbody > tr:gt(0)', doc);
        let albumAttr = {};
        for (let i = 0; i < rows.length; i++) {
            const tr = rows[i];
            const titleAnother = sizzle__WEBPACK_IMPORTED_MODULE_1___default()("a[href*='torrents.php?id=']:first", tr);
            if (titleAnother.length === 0) {
                continue;
            }
            // 检查 tr 的类型
            let torrent = {};
            if (tr.classList.contains('group_redline')) { // 专辑行，获取title信息
                albumAttr = this.getFieldsData(tr, 'search', ['comments', 'category']);
                // 移除掉其他无关元素后的作为专辑标题
                const albumRow = (sizzle__WEBPACK_IMPORTED_MODULE_1___default()('> td:eq(3)', tr)[0]).cloneNode(true);
                sizzle__WEBPACK_IMPORTED_MODULE_1___default()(">span, div.tags, a[title='View Comments']", albumRow).forEach(e => e.remove());
                albumAttr.title = albumRow.innerText.trim();
                continue;
            }
            else if (tr.classList.contains('group_torrent_redline')) { // 专辑对应的不同格式行
                // 补全前面的单元格，使后续的 selector 能正常生效
                tr.insertCell(0);
                tr.insertCell(0);
                tr.insertCell(0);
                torrent = { ...albumAttr, ...torrent }; // 传入专辑信息，并将格式信息作为 subTitle
                torrent.subTitle = this.getFieldData(tr, { selector: '> td:eq(3) > a[href*="torrents.php?id="]' });
            }
            else if (tr.classList.contains('torrent_redline') || tr.classList.contains('torrent')) { // 单种行
                const cloneTitleAnother = titleAnother[0].parentElement.cloneNode(true);
                sizzle__WEBPACK_IMPORTED_MODULE_1___default()(">span, div.tags, a[title='View Comments']", cloneTitleAnother).forEach(e => e.remove());
                torrent.title = cloneTitleAnother.innerText.trim();
            }
            else {
                continue;
            }
            if (torrent.title) {
                torrent.title = torrent.title.replace(/\t+/g, ' ').replace(/\(\d*\)$/, '').trim();
            }
            torrent = this.parseRowToTorrent(tr, torrent);
            torrents.push(torrent);
        }
        return torrents;
    }
    async getUserTorrentList(userId, page = 0, type = 'seeding') {
        const { data: TListDocument } = await this.request({
            url: '/torrents.php',
            params: {
                userid: userId, page, type
            },
            responseType: 'document'
        });
        return TListDocument;
    }
    async flushUserInfo(lastUserInfo = {}) {
        const flushUserInfo = await super.flushUserInfo();
        if (flushUserInfo.id) {
            let seedingSize = 0;
            const pageInfo = { count: 0, current: 0 }; // 生成页面信息
            for (; pageInfo.current <= pageInfo.count; pageInfo.current++) {
                const TListDocument = await this.getUserTorrentList(flushUserInfo.id, pageInfo.current);
                // 更新最大页数
                if (pageInfo.count === 0) {
                    pageInfo.count = this.getFieldData(TListDocument, {
                        selector: ["a[href*='torrents.php?page=']:contains('Last'):last"],
                        attr: 'href',
                        filters: [(query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_3___default()(query, true).query.page) || -1]
                    });
                }
                const torrentAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('tr.torrent', TListDocument);
                torrentAnothers.forEach(element => {
                    const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('td:eq(5)', element);
                    if (sizeAnother && sizeAnother.length >= 0) {
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_2__[/* parseSizeString */ "f"])(sizeAnother[0].innerText.trim());
                    }
                });
            }
            // 更新做种信息
            flushUserInfo.seedingSize = seedingSize;
        }
        return flushUserInfo;
    }
}


/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'JPTV',
    timezoneOffset: '+0800',
    schema: 'Unit3D',
    url: 'https://jptv.club/',
    description: 'JPTV',
    tags: ['影视', '剧集', '动漫'],
    collaborator: 'MewX'
};


/***/ }),
/* 164 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_1__);


const siteMetadata = {
    name: 'KaraGarga',
    timezoneOffset: '+0000',
    aka: ['KG'],
    url: 'https://karagarga.in/',
    tags: ['影视', '音乐', '文学'],
    collaborator: 'luckiestone',
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/browse.php',
            params: {
                search_type: 'torrent',
                cat: 0
            }
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'name', 'messageCount', 'bonus']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'ratio', 'levelName', 'joinTime']
            },
            {
                requestConfig: { url: '/current.php' },
                assertion: { id: 'id' },
                fields: ['seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table#browse > tbody > tr:has(a[href^="browse.php?genre="])' },
            id: { selector: 'a[href^="details.php?id="]', attr: 'href', filters: [{ name: 'querystring', args: ['id'] }] },
            title: { selector: 'a[href^="details.php?id="]' },
            url: { selector: 'a[href^="details.php?id="]', attr: 'href' },
            link: { selector: 'a[href^="/down.php/"]', attr: 'href' },
            time: {
                selector: 'td:nth-child(9)',
                filters: [
                    (query) => query.replace(/([A-Za-z]{3})\s(\d+)\s'(\d{2})/, '$2 $1 $3')
                ]
            },
            size: { selector: 'td:nth-child(11)' },
            author: { selector: 'td:eq(7)' },
            category: {
                selector: 'a[href^="browse.php?genre="] img',
                case: {
                    'img[title^="Movie"]': 'Movies',
                    'img[title^="Music"]': 'Music',
                    'img[title^="Literature"]': 'Literature'
                }
            },
            seeders: { selector: 'td:nth-child(13)' },
            leechers: { selector: 'td:nth-child(14)' },
            completed: { selector: 'td:nth-child(12)', filters: [{ name: 'parseNumber' }] },
            comments: { selector: "a[href*='#startcomments']" }
        },
        userInfo: {
            id: {
                selector: "a[title='click to see your details page']:last",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: "a[title='click to see your details page']:last"
            },
            messageCount: {
                selector: ["td[style*='background: #DF0101'] a[href*='messages.php']"],
                filters: [{ name: 'parseNumber' }]
            },
            bonus: { text: 'N/A' },
            uploaded: {
                selector: ["td.rowhead:contains('Uploaded') + td"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["td.rowhead:contains('Downloaded') + td"],
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "td.rowhead:contains('Share ratio') + td > table > tbody > tr > td:nth-child(1) > font",
                filters: [parseFloat]
            },
            levelName: {
                selector: ["td.rowhead:contains('Class') + td"]
            },
            joinTime: {
                selector: ["td.rowhead:contains('Join'):contains('date') + td"],
                filters: [
                    (query) => query.split(' (')[0],
                    { name: 'parseTime' }
                ]
            },
            seeding: {
                selector: ["table[id='browse'] > tbody"],
                elementProcess: (tbody) => {
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()("> tr[style*='padding-top:0px']", tbody);
                    return trAnothers.length;
                }
            },
            seedingSize: {
                selector: ["table[id='browse'] > tbody > tr[style*='padding-top:0px']"],
                elementProcess: (tbody) => {
                    let seedingSize = 0;
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()("> tr[style*='padding-top:0px']", tbody);
                    trAnothers.forEach(trAnother => {
                        const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('td:eq(9)', trAnother)[0];
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(sizeAnother.innerText.trim());
                    });
                    return seedingSize;
                }
            }
        }
    }
};


/***/ }),
/* 165 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'PT@KEEPFRDS',
    schema: 'NexusPHP',
    timezoneOffset: '+0000',
    url: 'https://pt.keepfrds.com/',
    favicon: 'https://pt.keepfrds.com/static/favicon-64x64.png',
    tags: ['影视', '综合'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movies' },
                    { value: 404, name: 'Documentaries' },
                    { value: 405, name: 'Animations' },
                    { value: 402, name: 'TV Series' },
                    { value: 403, name: 'TV Shows' },
                    { value: 406, name: 'Music Videos' },
                    { value: 407, name: 'Sports' },
                    { value: 409, name: 'Misc' },
                    { value: 408, name: 'HQ Audio' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            subTitle: {
                filters: [
                    (query) => {
                        // 处理类似以下 尾部中括号的情况
                        // The Invisible Man 2020 Bluray 1080p x265 10bit 2Audios DDP 7.1 MNHD-FRDS[ ] [限时禁转]
                        while (/\[.*?]$/.test(query)) {
                            query = query.replace(/\[.*?]$/, '').trim();
                        }
                        return query;
                    }
                ]
            },
            tags: [
                // 禁转, 限时禁转
                { selector: "td.embedded b > font.recommended:contains('禁转')", name: 'Excl.' }
            ]
        },
        userInfo: {
            messageCount: {
                selector: ["a[href*='messages.php'] b span[style*='color: red']"]
            },
            /**
             * 老版的写法，但是新版本中 filter 已经是文本而不是 Element，所以从其父元素中选取，并用正则匹配出来
             * "seeding": {
             *   "selector": ["img[alt='Torrents seeding']"],
             *   "filters": ["$(query[0].nextSibling).text().trim()"]
             * }
             */
            seeding: {
                selector: ["td:has(> img[alt='Torrents seeding'])"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(Active Torrents:|当前活动：|當前活動：).*?(\d+)/);
                        return (queryMatch && queryMatch.length >= 3) ? parseInt(queryMatch[2]) : 0;
                    }
                ]
            },
            seedingSize: {
                selector: ["td.rowhead:contains('当前做种') + td, td.rowhead:contains('Current Seeding') + td, td.rowhead:contains('目前做種') + td"],
                filters: [{ name: 'parseSize' }]
            }
        }
    }
};


/***/ }),
/* 166 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);


const siteMetadata = {
    name: 'LemonHD',
    timezoneOffset: '+0800',
    schema: 'NexusPHP',
    url: 'https://lemonhd.org/',
    description: 'LemonHD',
    tags: ['影视', '综合'],
    formerHosts: [
        'leaguehd.com'
    ],
    collaborator: ['enigmaz', 'timyuan'],
    search: {
        requestConfig: {
            params: {
                stype: 's' // 强行更改输出类型为 NexusPHP
            }
        },
        categories: [
            {
                name: '搜索入口',
                key: '#changePath',
                options: [
                    { name: '全站', value: '/torrents.php' },
                    { name: '电影', value: '/torrents_movie.php' },
                    { name: '电视综艺', value: '/torrents_tv.php' },
                    { name: '音乐', value: '/torrents_music.php' },
                    { name: '动漫', value: '/torrents_animate.php' },
                    { name: 'MV', value: '/torrents_mv.php' },
                    { name: '纪录片', value: '/torrents_doc.php' },
                    { name: '其他', value: '/torrents_other.php' }
                ]
            }
        ]
    },
    selector: {
        search: {
            id: {
                selector: ['> td:eq(1) a[href*="id="]:first']
            },
            url: {
                selector: ['> td:eq(1) a[href^="details"][href*="id="]:first'],
                filters: [] // 覆盖掉NPHP默认的处理方式，因为该站点没有办法通过 /details.php?id=xxxx 的方式访问到种子
            },
            link: {
                selector: ['> td:eq(1) a[href^="download.php"][href*="id="]:first']
            },
            category: {
                selector: ['> td:eq(0) > img'],
                attr: 'class',
                filters: [
                    (query) => query.replace('cat_', '')
                ],
                elementProcess: null // 覆盖掉NPHP默认的处理方式
            },
            progress: {
                selector: ['> td:eq(8)'],
                filters: [
                    (query) => query === '--' ? 0 : parseFloat(query)
                ]
            },
            status: {
                selector: ['> td:eq(8)'],
                elementProcess: (element) => {
                    const query = element.innerText.trim(); // 100% or --
                    if (query === '--') {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                    else if (element.classList.contains('peer-active')) {
                        return parseFloat(query) > 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                    }
                    else {
                        return parseFloat(query) > 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive;
                    }
                }
            }
        },
        userInfo: {
            seeding: {
                selector: ["td.rowfollow:contains('总做种数')"],
                filters: [
                    (query) => {
                        query = query.replace(/,/g, '');
                        const queryMatch = query.match(/(?:总做种数|seeding).+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            seedingSize: {
                selector: ["td.rowfollow:contains('总做种数')"],
                filters: [
                    (query) => {
                        query = query.replace(/,/g, '');
                        const queryMatch = query.match(/(?:总做种体积|seedingSize).+?([\d.]+ ?[ZEPTGMK]?i?B)/);
                        return queryMatch && queryMatch.length >= 2 ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(queryMatch[1]) : 0;
                    }
                ]
            }
        }
    }
};


/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'LzTr',
    timezoneOffset: '+0000',
    description: 'music',
    url: 'https://lztr.me/',
    tags: ['音乐'],
    schema: 'Gazelle',
    collaborator: 'ylxb2016'
};


/***/ }),
/* 168 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return morethantv; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);



const siteMetadata = {
    name: 'MoreThanTV',
    timezoneOffset: '+0000',
    description: 'MTV',
    // schema: 'Luminance',
    tags: ['电视剧', '剧集'],
    url: 'https://www.morethantv.me/',
    collaborator: 'luckiestone',
    formerHosts: [
        'www.morethan.tv'
    ],
    search: {
        keywordsParam: 'searchtext',
        requestConfig: {
            url: '/torrents.php',
            params: {
                order_by: 'time',
                order_way: 'desc'
            }
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name', 'messageCount']
            },
            {
                requestConfig: { url: '/user.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime', 'bonus', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            // 建立group基本信息: category, title, url, time, size, author , seeders, leechers, completed, comments
            // rows: '#torrent_table > tbody > tr.torrent'
            category: { selector: '.cats_col div', attr: 'title' },
            title: { selector: 'a[href^="/torrents.php?id="]' },
            url: { selector: 'a[href^="/torrents.php?id="]', attr: 'href' },
            time: {
                selector: 'span.time[title]',
                attr: 'title',
                filters: [(query) => query + ':00']
            },
            size: { selector: '> td:nth-last-child(5)' },
            author: { selector: '> td:nth-last-child(1)' },
            seeders: { selector: '> td:nth-last-child(3)' },
            leechers: { selector: '> td:nth-last-child(2)' },
            completed: { selector: '> td:nth-last-child(4)' },
            comments: { selector: '> td:nth-last-child(7)' },
            // 建立种子相关信息： id, link, subTitle
            // 这里有个顶层 selector: 'td:has(> .torrent_icon_container:has(a[href^="/torrents.php?action=download"]))'
            id: {
                selector: 'a[href^="/torrents.php?action=download"]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            link: { selector: 'a[href^="/torrents.php?action=download"]', attr: 'href' },
            subTitle: { selector: ':self' }
        },
        userInfo: {
            id: {
                selector: ["a.username[href*='user.php']:first"],
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }, parseInt]
            },
            name: {
                selector: ["a.username[href*='user.php']:first"]
            },
            messageCount: {
                selector: ["div.alert-bar > a[href*='inbox.php']", "div.alertbar > a[href*='inbox.php']"],
                filters: [
                    (query) => {
                        const queryMatch = query.match(/(\d+)/);
                        return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            // 'uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime', 'bonus', 'seeding', 'seedingSize'
            uploaded: {
                selector: "ul.stats > li:contains('Uploaded'):contains('B')",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "ul.stats > li:contains('Downloaded')",
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "ul.stats > li:contains('Ratio:')",
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/Ratio.+?([\d.]+)/);
                        return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            levelName: {
                selector: "ul.stats > li:contains('Class:')",
                filters: [
                    (query) => {
                        const queryMatch = query.match(/Class:.+?(.+)/);
                        return (queryMatch && queryMatch.length >= 2) ? queryMatch[1] : 0;
                    }
                ]
            },
            bonus: {
                selector: '#stats_credits',
                filters: [(query) => parseFloat(query.replace(',', ''))]
            },
            joinTime: {
                selector: ["ul.stats > li:contains('Joined:') > span"],
                elementProcess: (element) => {
                    const time = element.getAttribute('title') || element.innerText;
                    return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(time).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(time).valueOf() : time;
                }
            },
            seeding: {
                selector: 'ul.stats > li:contains("Seeding:")',
                filters: [
                    (query) => {
                        const queryMatch = query.replace(',', '').match(/Seeding:.+?(\d+)/);
                        return (queryMatch && queryMatch.length >= 2) ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            seedingSize: {
                selector: 'ul.stats > li:contains("Seeding Size:")',
                filters: [{ name: 'parseSize' }]
            }
        }
    }
};
class morethantv extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_1__["default"] {
    async transformSearchPage(doc) {
        const torrents = [];
        const trs = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('#torrent_table > tbody > tr.torrent', doc);
        trs.forEach(tr => {
            // 建立group基本信息: category, title, url, time, size, author , seeders, leechers, completed, comments
            const groupInfo = this.getFieldsData(tr, 'search', [
                'category', 'title', 'url', 'time', 'size', 'author', 'seeders', 'leechers', 'completed', 'comments'
            ]);
            // 搜索种子信息 id, link, subTitle
            const torrentAnother = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('td:has(> .torrent_icon_container:has(a[href^="/torrents.php?action=download"]))', tr);
            torrentAnother.forEach(t => {
                const torrentInfo = this.getFieldsData(t, 'search', ['id', 'link', 'subTitle']);
                torrents.push({ ...groupInfo, ...torrentInfo }); // 将 groupInfo 和 torrentInfo 合并作为种子信息
            });
        });
        return torrents;
    }
}


/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mteam; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _schema_NexusPHP__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_3__);




const siteMetadata = {
    name: 'M-Team',
    timezoneOffset: '+0800',
    description: 'M-Team',
    url: 'https://kp.m-team.cc/',
    tags: ['影视', '综合'],
    schema: 'NexusPHP',
    host: 'kp.m-team.cc',
    formerHosts: [
        'pt.m-team.cc',
        'tp.m-team.cc'
    ],
    search: {
        categories: [
            {
                name: '搜索入口',
                key: '#changePath',
                options: [
                    { name: '综合', value: '/torrents.php' },
                    { name: '音乐', value: '/music.php' },
                    { name: 'Adult', value: '/adult.php' }
                ]
            },
            {
                name: '综合分类',
                key: 'cat',
                options: [
                    { value: 401, name: 'Movie(電影)/SD' },
                    { value: 419, name: 'Movie(電影)/HD' },
                    { value: 420, name: 'Movie(電影)/DVDiSo' },
                    { value: 421, name: 'Movie(電影)/Blu-Ray' },
                    { value: 439, name: 'Movie(電影)/Remux' },
                    { value: 403, name: 'TV Series(影劇/綜藝)/SD' },
                    { value: 402, name: 'TV Series(影劇/綜藝)/HD' },
                    { value: 435, name: 'TV Series(影劇/綜藝)/DVDiSo' },
                    { value: 438, name: 'TV Series(影劇/綜藝)/BD' },
                    { value: 404, name: '紀錄教育' },
                    { value: 405, name: 'Anime(動畫)' },
                    { value: 407, name: 'Sports(運動)' },
                    { value: 422, name: 'Software(軟體)' },
                    { value: 423, name: 'PCGame(PC遊戲)' },
                    { value: 427, name: 'eBook(電子書)' },
                    { value: 409, name: 'Misc(其他)' }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '音乐分类',
                key: 'cat',
                options: [
                    { value: 406, name: 'MV(演唱)' },
                    { value: 408, name: 'Music(AAC/ALAC)' },
                    { value: 434, name: 'Music(無損)' }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '成人分类',
                key: 'cat',
                options: [
                    { value: 410, name: 'AV(有碼)/HD Censored' },
                    { value: 429, name: 'AV(無碼)/HD Uncensored' },
                    { value: 424, name: 'AV(有碼)/SD Censored' },
                    { value: 430, name: 'AV(無碼)/SD Uncensored' },
                    { value: 426, name: 'AV(無碼)/DVDiSo Uncensored' },
                    { value: 437, name: 'AV(有碼)/DVDiSo Censored' },
                    { value: 431, name: 'AV(有碼)/Blu-Ray Censored' },
                    { value: 432, name: 'AV(無碼)/Blu-Ray Uncensored' },
                    { value: 436, name: 'AV(網站)/0Day' },
                    { value: 425, name: 'IV(寫真影集)/Video Collection' },
                    { value: 433, name: 'IV(寫真圖集)/Picture Collection' },
                    { value: 411, name: 'H-Game(遊戲)' },
                    { value: 412, name: 'H-Anime(動畫)' },
                    { value: 413, name: 'H-Comic(漫畫)' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: ['> td:eq(8)'],
                filters: [
                    (query) => query === '--' ? 0 : parseFloat(query)
                ]
            },
            status: {
                selector: ['> td:eq(8)'],
                elementProcess: (element) => {
                    const elementText = element.innerText.trim();
                    const floatElementText = parseFloat(elementText);
                    if (elementText === '--') {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                    else if (element.classList.contains('peer-active')) {
                        return floatElementText >= 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                    }
                    else {
                        return floatElementText >= 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive;
                    }
                }
            }
        },
        userInfo: {
            uploaded: {
                selector: ["td.rowfollow:contains('分享率')", "td.rowhead:contains('传输') + td", "td.rowhead:contains('傳送') + td", "td.rowhead:contains('Transfers') + td"]
            },
            downloaded: {
                selector: ["td.rowfollow:contains('分享率')", "td.rowhead:contains('传输') + td", "td.rowhead:contains('傳送') + td", "td.rowhead:contains('Transfers') + td"]
            }
        }
    }
};
class mteam extends _schema_NexusPHP__WEBPACK_IMPORTED_MODULE_1__["default"] {
    async getUserTorrentList(userId, page = 0, type = 'seeding') {
        const { data: TListDocument } = await this.request({
            url: '/getusertorrentlist.php',
            params: {
                userid: userId, page, type
            },
            responseType: 'document'
        });
        return TListDocument;
    }
    async getUserSeedingStatus(userId) {
        let seedStatus = { seeding: 0, seedingSize: 0 };
        /**
         * 首先尝试ajax接口，如果超出 100条，则 ajax 接口会返回 OVERLOADED，
         * 转而请求 /getusertorrentlist.php 页面
         */
        const userSeedingRequestString = await this.requestUserSeedingPage(userId);
        if (userSeedingRequestString && userSeedingRequestString.indexOf('OVERLOADED') === -1) {
            const userSeedingDocument = Object(_shared_filter__WEBPACK_IMPORTED_MODULE_2__[/* createDocument */ "b"])(userSeedingRequestString);
            seedStatus = this.countSeedingStatusFromDocument(userSeedingDocument);
        }
        else {
            for (const pageInfo = { count: 0, current: 0 }; // 生成页面信息
             pageInfo.current <= pageInfo.count; pageInfo.current++) {
                const TListDocument = await this.getUserTorrentList(userId, pageInfo.current);
                // 更新最大页数
                if (pageInfo.count === 0) {
                    pageInfo.count = this.getFieldData(TListDocument, {
                        selector: ["a[href*='page=']:contains('-'):last"],
                        attr: 'href',
                        filters: [(query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_3___default()(query, true).query.page) || -1]
                    });
                }
                // 解析当前页信息， 并合并至顶层字典中
                const pageSeedStatus = this.countSeedingStatusFromDocument(TListDocument);
                seedStatus.seeding += pageSeedStatus.seeding;
                seedStatus.seedingSize += pageSeedStatus.seedingSize;
            }
        }
        return seedStatus;
    }
}


/***/ }),
/* 170 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return myanonamouse; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1);




const siteMetadata = {
    name: 'MyAnonaMouse',
    description: 'Friendliness, Warmth and Sharing',
    url: 'https://www.myanonamouse.net/',
    tags: ['电子书', '有声书'],
    collaborator: ['tongyifan', 'Rhilip'],
    search: {
        /**
         * 更新为API接口
         * @docs: /api/endpoint.php/1/tor/js/loadSearchJSONbasic.php
         */
        keywordsParam: 'tor[text]',
        requestConfig: {
            url: '/tor/js/loadSearchJSONbasic.php',
            params: {
                'tor[srchIn][title]': true,
                'tor[srchIn][author]': true,
                'tor[srchIn][narrator]': true,
                'tor[searchType]': 'all',
                'tor[searchIn]': 'torrents',
                'tor[cat]': [0],
                'tor[browseFlagsHideVsShow]': 0,
                'tor[sortType]': 'default',
                'tor[startNumber]': 0
                // dlLink: 1  // include the url to download the torrent
            },
            responseType: 'json'
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name', 'messageCount']
            },
            {
                requestConfig: { url: '/u/$userId$' },
                assertion: { id: 'userId' },
                fields: ['uploaded', 'downloaded', 'levelName', 'bonus', 'joinTime']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'data' },
            id: { selector: 'id' },
            title: { selector: 'title' },
            subTitle: { selector: 'tags' },
            url: { selector: 'id', filters: [(id) => `/t/${id}`] },
            link: { selector: 'id', filters: [(id) => `/tor/download.php?tid=${id}`] },
            time: { selector: 'added' },
            size: { selector: 'size' },
            author: { selector: 'owner_name' },
            category: { selector: 'catname' },
            seeders: { selector: 'seeders' },
            leechers: { selector: 'leechers' },
            completed: { selector: 'times_completed' },
            comments: { selector: 'comments' }
        },
        userInfo: {
            id: {
                selector: 'li.myInfo > a',
                attr: 'href',
                filters: [
                    (query) => query.match(/(\d+)/)[1]
                ]
            },
            name: {
                selector: 'a#userMenu',
                filters: [
                    (query) => query.replace('↓', '').trim()
                ]
            },
            messageCount: {
                selector: 'div#sbNotifs',
                elementProcess: (div) => {
                    let msgCount = 0;
                    const msgAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('a.tmnb, a.tmn, a.tmng', div);
                    msgAnothers.forEach(msgAnother => {
                        const msgText = msgAnother.innerText.trim();
                        msgCount += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_3__[/* findThenParseNumberString */ "d"])(msgText);
                    });
                    return msgCount;
                }
            },
            uploaded: {
                selector: "td.rowhead:contains('Uploaded'):eq(0) + td",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "td.rowhead:contains('Downloaded'):eq(0) + td",
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: "td.rowhead:contains('Class') + td"
            },
            bonus: {
                selector: 'a#tmBP',
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/Bonus: ([\d.]+)/);
                        return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            joinTime: {
                selector: "td.rowhead:contains('Join'):contains('date') + td",
                filters: [
                    (query) => query.split(' (')[0],
                    { name: 'parseTime' }
                ]
            }
        }
    }
};
class myanonamouse extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_1__["default"] {
    parseTagsFromRow(row) {
        const tags = [];
        if (row.vip) {
            tags.push({ name: 'VIP', color: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentBaseTagColor */ "a"].VIP });
        }
        if (row.free) {
            tags.push({ name: 'Free', color: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentBaseTagColor */ "a"].Free });
        }
        return tags;
    }
    // userscript 模式下无法获取mamId Cookies，所以无法得到做种信息
    async getUserSeedingInfo(userid) {
        return { seeding: 0, seedingSize: 0 };
    }
    async flushUserInfo(lastUserInfo = {}) {
        let userInfo = await super.flushUserInfo();
        if (userInfo.id && (!userInfo.seeding || !userInfo.seedingSize)) {
            userInfo = {
                ...await this.getUserSeedingInfo(userInfo.id),
                ...userInfo
            };
        }
        return userInfo;
    }
}


/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: '南洋PT',
    timezoneOffset: '+0800',
    description: '网站由西安交通大学学生自主创建与管理，汇集学习资料、纪录片、电影、剧集等各类优质资源',
    url: 'https://nanyangpt.com/',
    tags: ['教育网', '影视', '综合'],
    schema: 'NexusPHP',
    collaborator: 'Rhilip',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '电影' },
                    { value: 402, name: '剧集' },
                    { value: 403, name: '动漫' },
                    { value: 404, name: '综艺' },
                    { value: 405, name: '体育' },
                    { value: 406, name: '纪录' },
                    { value: 407, name: '音乐' },
                    { value: 408, name: '学习' },
                    { value: 409, name: '软件' },
                    { value: 410, name: '游戏' },
                    { value: 411, name: '其他' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: [".rowfollow[title='Downloading'], .rowfollow[title='Seeding'], .rowfollow[title='Stopped'], .rowfollow[title='Completed']"],
                filters: [
                    (query) => query === '--' ? 0 : parseFloat(query)
                ]
            },
            status: {
                text: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown,
                selector: [".rowfollow[title='Downloading']", ".rowfollow[title='Seeding']", ".rowfollow[title='Stopped']", ".rowfollow[title='Completed']"],
                case: {
                    ".rowfollow[title='Downloading']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading,
                    ".rowfollow[title='Seeding']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    ".rowfollow[title='Stopped']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive,
                    ".rowfollow[title='Completed']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed
                }
            },
            tags: [
                { name: 'Excl.', selector: "td.embedded > a[title] > b > font[color='red']" }
            ]
        }
    }
};


/***/ }),
/* 172 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);


const siteMetadata = {
    name: 'Nebulance',
    timezoneOffset: '+0000',
    description: 'NBL',
    url: 'https://nebulance.io/',
    tags: ['剧集'],
    schema: 'Gazelle',
    host: 'nebulance.io',
    collaborator: 'luckiestone',
    search: {
        keywordsParam: 'searchtext',
        categories: [
            {
                name: 'Category',
                key: 'filter_cat',
                options: [
                    { name: 'Episodes', value: 1 },
                    { name: 'Season', value: 3 }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/ajax.php?action=index', responseType: 'json' },
                fields: ['id', 'name', 'uploaded', 'downloaded', 'ratio', 'levelName']
            },
            {
                requestConfig: { url: '/user.php', params: { /* id: flushUserInfo.id */}, responseType: 'document' },
                assertion: { id: 'id' },
                fields: ['messageCount', 'bonus', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: ".torrent_table > tbody > tr[class^='torrent row']" },
            title: { selector: 'a[data-src]', data: 'src' },
            link: { selector: "a[href*='torrents.php?action=download']:first", attr: 'href' },
            time: { selector: '> td:nth-child(4)' },
            size: { selector: '> td:nth-child(3) div' },
            seeders: { selector: '> "td:nth-child(6)' },
            leechers: { selector: '> td:nth-child(7)' },
            completed: { selector: '> td:nth-child(5)' }
        },
        userInfo: {
            // page: '/ajax.php?action=index'
            id: {
                selector: ['response.id']
            },
            name: {
                selector: ['response.username']
            },
            uploaded: {
                selector: ['response.userstats.uploaded']
            },
            downloaded: {
                selector: ['response.userstats.downloaded']
            },
            ratio: {
                selector: ['response.userstats.ratio']
            },
            levelName: {
                selector: ['response.userstats.class']
            },
            // page: '/user.php?id=$user.id$'
            messageCount: {
                selector: ["div.alertbar a[href*='inbox.php']"],
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/\s+/g, '').match(/(\d+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            seeding: {
                selector: "ul.stats.nobullet > li:contains('Seeding:')",
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/[,\n]/g, '').match(/:.+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            seedingSize: {
                selector: "ul.stats.nobullet > li:contains('Seeding Size:')",
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/Seeding Size:.+?([\d.]+ ?[ZEPTGMK]?i?B)/);
                        return queryMatch && queryMatch.length >= 2 ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(queryMatch[1]) : 0;
                    }
                ]
            },
            bonus: {
                selector: "ul#userinfo_major > li > a:contains('Cubits:')",
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,|\n|\s+/g, '').match(/Cubits:.+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? queryMatch[1] : 0;
                    }
                ]
            },
            joinTime: {
                selector: ["ul.stats.nobullet > li:contains('Joined:') > span"],
                elementProcess: (element) => {
                    const timeText = (element.getAttribute('title') || element.innerText).trim();
                    return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(timeText).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(timeText).valueOf() : timeText;
                }
            }
        }
    }
};


/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return neu6; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var urlencode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85);
/* harmony import */ var urlencode__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(urlencode__WEBPACK_IMPORTED_MODULE_1__);


const siteMetadata = {
    name: '六维空间',
    description: '东北大学ipv6资源分享平台',
    timezoneOffset: '+0800',
    url: 'http://bt.neu6.edu.cn/',
    tags: ['教育网', '综合'],
    collaborator: ['xfl03', 'Rhilip'],
    userInfo: {
        process: [
            {
                requestConfig: { url: '/forum.php' },
                fields: ['id', 'name']
            },
            {
                requestConfig: {
                    url: '/home.php',
                    params: {
                        mod: 'space',
                        do: 'profile'
                    }
                },
                assertion: { id: 'uid' },
                fields: ['uploaded', 'downloaded', 'levelName', 'bonus', 'joinTime']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.dt tr:gt(0):not(:has( > td:eq(1):contains("0 Bytes")))' },
            id: {
                selector: 'td:eq(2) a[href*="thread-"]',
                attr: 'href',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/thread-(\d+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            title: { selector: 'td:eq(2) a[href*="thread-"]' },
            url: { selector: 'td:eq(2) a[href*="thread-"]', attr: 'href' },
            // link: {}   // 种子链接得从 details 页面抓，走 getTorrentDownloadLink 方法
            time: { selector: 'td.by > em > span' },
            size: { selector: '> td:nth-child(2)' },
            author: { selector: 'td.by > cite > a' },
            category: {
                selector: '> td:nth-child(5) > a',
                attr: 'href',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/forum-(\d+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            seeders: {
                selector: ' > td:nth-child(1) > img',
                case: {
                    'img[href*="signal_0.png"]': 0,
                    'img[href*="signal_1.png"]': 10,
                    'img[href*="signal_2.png"]': 50,
                    'img[href*="signal_3.png"]': 100,
                    'img[href*="signal_4.png"]': 200
                }
            },
            leechers: { text: 0 },
            completed: { text: 0 },
            comments: { text: 0 },
            tags: [
                { name: '50%', selector: 'img[src*="dl50.gif"]' },
                { name: 'Free', selector: 'img[src*="free.gif"]' }
            ]
        },
        userInfo: {
            // page: '/forum.php'
            id: {
                selector: ".vwmy a[href*='home.php']:first",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['uid'] }]
            },
            name: {
                selector: ".vwmy a[href*='home.php']:first"
            },
            //  page: '/home.php?mod=space&uid=$user.id$&do=profile',
            uploaded: {
                selector: "li:contains('上传')",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "li:contains('下载')",
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: "li:contains('用户组')",
                filters: [(query) => query.replace(/用户组 +/, '')]
            },
            bonus: {
                selector: "li:contains('积分')",
                filters: [{ name: 'parseNumber' }]
            },
            joinTime: {
                selector: "li:contains('注册时间')",
                filters: [
                    (query) => query.replace('注册时间', ''),
                    { name: 'parseTime' }
                ]
            }
        }
    }
};
const nonTorrentCategory = [
    129,
    29,
    33,
    358,
    /**
     * 试种区理应当作无法使用的区域
     */
    41,
    156,
    155,
    153,
    152,
    154,
    162,
    147,
    148,
    149,
    151,
    150,
    146,
    79,
    96,
    125,
    169,
    163,
    173,
    7,
    4,
    139,
    43,
    175,
    136,
    444,
    445,
    38,
    121,
    131,
    122,
    39,
    119,
    31,
    143,
    87,
    123,
    113,
    135,
    187 // 升级BUG汇报板块
];
class neu6 extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const baseConfig = {
            url: '/search.php',
            responseType: 'document',
            params: {},
            headers: {}
        };
        // 请求并获取 formhash
        const { data: formDocument } = await this.request(baseConfig);
        const formhash = this.getFieldData(formDocument, {
            selector: 'input[name="formhash"]',
            attr: 'value'
        });
        // 设置搜索参数
        baseConfig.method = 'post';
        baseConfig.params.mod = 'forum';
        // 因为此处使用 GBK 编码，所以我们不能使用 new URLSearchParams() 来让axios自动构造，所以只能 hack 相关信息
        baseConfig.headers['Content-Type'] = 'application/x-www-form-urlencoded';
        const postData = {
            formhash,
            srchuname: '',
            srchfilter: 'all',
            srchfrom: 0,
            before: '',
            orderby: 'lastpost',
            ascdesc: 'desc',
            'srchfid[]': 'all',
            searchsubmit: 'yes'
        };
        if (filter.keywords) {
            postData.srchtxt = filter.keywords;
        }
        // 要将其转为gbk编码
        baseConfig.data = urlencode__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(postData, { charset: 'gbk' });
        return baseConfig;
    }
    async transformSearchPage(doc) {
        const torrents = await super.transformSearchPage(doc);
        return torrents.filter(t => !nonTorrentCategory.includes(t.category));
    }
    /**
     * 6v这里有两种情况，如果用户等级为up以上，则直接返回种子信息，
     * 反之则会进入提示页面，需要在提示页面进一步获取种子链接
     * 但是我们又不能在此处获取种子的metadata，所以只能根据页面是否存在 下载浮云 提示来判断具体情况
     *
     * (ps. 只有 发种员 以上用户组才能直接返回种子信息
     *
     * @ref: https://github.com/tongyifan/Reseed-backend/blob/db8b25fd336f820a7469d588a9bbd8185d7e17b9/scripts/6v.py#L46-L67
     * @param torrent
     */
    async getTorrentDownloadLink(torrent) {
        var _a;
        const { data: DetailPage, config: RequestConfig } = await this.request({
            url: torrent.url,
            responseType: ((_a = this.config.detail) === null || _a === void 0 ? void 0 : _a.type) || 'document'
        });
        let downloadLink = this.getFieldData(DetailPage, {
            selector: 'p.attnm > a[href*="forum.php?mod=attachment"]:contains(".torrent")',
            attr: 'href'
        });
        // 检查是不是需要下载浮云
        if (/下载积分.+?浮云/.test(DetailPage.documentElement.outerHTML)) {
            const { data: attachmentPage } = await this.request({
                url: downloadLink,
                responseType: 'document'
            });
            downloadLink = this.getFieldData(attachmentPage, {
                selector: 'p.alert_btnleft > a[href*="forum.php?mod=attachment"]',
                attr: 'href'
            });
        }
        return this.fixLink(downloadLink, RequestConfig);
    }
}


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

// Some environments don't have global Buffer (e.g. React Native).
// Solution would be installing npm modules "buffer" and "stream" explicitly.
var Buffer = __webpack_require__(35).Buffer;

var bomHandling = __webpack_require__(178),
    iconv = module.exports;

// All codecs and aliases are kept here, keyed by encoding name/alias.
// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.
iconv.encodings = null;

// Characters emitted in case of error.
iconv.defaultCharUnicode = '�';
iconv.defaultCharSingleByte = '?';

// Public API.
iconv.encode = function encode(str, encoding, options) {
    str = "" + (str || ""); // Ensure string.

    var encoder = iconv.getEncoder(encoding, options);

    var res = encoder.write(str);
    var trail = encoder.end();
    
    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;
}

iconv.decode = function decode(buf, encoding, options) {
    if (typeof buf === 'string') {
        if (!iconv.skipDecodeWarning) {
            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');
            iconv.skipDecodeWarning = true;
        }

        buf = Buffer.from("" + (buf || ""), "binary"); // Ensure buffer.
    }

    var decoder = iconv.getDecoder(encoding, options);

    var res = decoder.write(buf);
    var trail = decoder.end();

    return trail ? (res + trail) : res;
}

iconv.encodingExists = function encodingExists(enc) {
    try {
        iconv.getCodec(enc);
        return true;
    } catch (e) {
        return false;
    }
}

// Legacy aliases to convert functions
iconv.toEncoding = iconv.encode;
iconv.fromEncoding = iconv.decode;

// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.
iconv._codecDataCache = {};
iconv.getCodec = function getCodec(encoding) {
    if (!iconv.encodings)
        iconv.encodings = __webpack_require__(179); // Lazy load all encoding definitions.
    
    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
    var enc = iconv._canonicalizeEncoding(encoding);

    // Traverse iconv.encodings to find actual codec.
    var codecOptions = {};
    while (true) {
        var codec = iconv._codecDataCache[enc];
        if (codec)
            return codec;

        var codecDef = iconv.encodings[enc];

        switch (typeof codecDef) {
            case "string": // Direct alias to other encoding.
                enc = codecDef;
                break;

            case "object": // Alias with options. Can be layered.
                for (var key in codecDef)
                    codecOptions[key] = codecDef[key];

                if (!codecOptions.encodingName)
                    codecOptions.encodingName = enc;
                
                enc = codecDef.type;
                break;

            case "function": // Codec itself.
                if (!codecOptions.encodingName)
                    codecOptions.encodingName = enc;

                // The codec function must load all tables and return object with .encoder and .decoder methods.
                // It'll be called only once (for each different options object).
                codec = new codecDef(codecOptions, iconv);

                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.
                return codec;

            default:
                throw new Error("Encoding not recognized: '" + encoding + "' (searched as: '"+enc+"')");
        }
    }
}

iconv._canonicalizeEncoding = function(encoding) {
    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
    return (''+encoding).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g, "");
}

iconv.getEncoder = function getEncoder(encoding, options) {
    var codec = iconv.getCodec(encoding),
        encoder = new codec.encoder(options, codec);

    if (codec.bomAware && options && options.addBOM)
        encoder = new bomHandling.PrependBOM(encoder, options);

    return encoder;
}

iconv.getDecoder = function getDecoder(encoding, options) {
    var codec = iconv.getCodec(encoding),
        decoder = new codec.decoder(options, codec);

    if (codec.bomAware && !(options && options.stripBOM === false))
        decoder = new bomHandling.StripBOM(decoder, options);

    return decoder;
}


// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.
var nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;
if (nodeVer) {

    // Load streaming support in Node v0.10+
    var nodeVerArr = nodeVer.split(".").map(Number);
    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {
        __webpack_require__(195)(iconv);
    }

    // Load Node primitive extensions.
    __webpack_require__(196)(iconv);
}

if (false) {}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(63)))

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 176 */
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 177 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BOMChar = '\uFEFF';

exports.PrependBOM = PrependBOMWrapper
function PrependBOMWrapper(encoder, options) {
    this.encoder = encoder;
    this.addBOM = true;
}

PrependBOMWrapper.prototype.write = function(str) {
    if (this.addBOM) {
        str = BOMChar + str;
        this.addBOM = false;
    }

    return this.encoder.write(str);
}

PrependBOMWrapper.prototype.end = function() {
    return this.encoder.end();
}


//------------------------------------------------------------------------------

exports.StripBOM = StripBOMWrapper;
function StripBOMWrapper(decoder, options) {
    this.decoder = decoder;
    this.pass = false;
    this.options = options || {};
}

StripBOMWrapper.prototype.write = function(buf) {
    var res = this.decoder.write(buf);
    if (this.pass || !res)
        return res;

    if (res[0] === BOMChar) {
        res = res.slice(1);
        if (typeof this.options.stripBOM === 'function')
            this.options.stripBOM();
    }

    this.pass = true;
    return res;
}

StripBOMWrapper.prototype.end = function() {
    return this.decoder.end();
}



/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Update this array if you add/rename/remove files in this directory.
// We support Browserify by skipping automatic module discovery and requiring modules directly.
var modules = [
    __webpack_require__(180),
    __webpack_require__(183),
    __webpack_require__(184),
    __webpack_require__(185),
    __webpack_require__(186),
    __webpack_require__(187),
    __webpack_require__(188),
    __webpack_require__(189),
];

// Put all encoding/alias/codec definitions to single object and export it. 
for (var i = 0; i < modules.length; i++) {
    var module = modules[i];
    for (var enc in module)
        if (Object.prototype.hasOwnProperty.call(module, enc))
            exports[enc] = module[enc];
}


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(35).Buffer;

// Export Node.js internal encodings.

module.exports = {
    // Encodings
    utf8:   { type: "_internal", bomAware: true},
    cesu8:  { type: "_internal", bomAware: true},
    unicode11utf8: "utf8",

    ucs2:   { type: "_internal", bomAware: true},
    utf16le: "ucs2",

    binary: { type: "_internal" },
    base64: { type: "_internal" },
    hex:    { type: "_internal" },

    // Codec.
    _internal: InternalCodec,
};

//------------------------------------------------------------------------------

function InternalCodec(codecOptions, iconv) {
    this.enc = codecOptions.encodingName;
    this.bomAware = codecOptions.bomAware;

    if (this.enc === "base64")
        this.encoder = InternalEncoderBase64;
    else if (this.enc === "cesu8") {
        this.enc = "utf8"; // Use utf8 for decoding.
        this.encoder = InternalEncoderCesu8;

        // Add decoder for versions of Node not supporting CESU-8
        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {
            this.decoder = InternalDecoderCesu8;
            this.defaultCharUnicode = iconv.defaultCharUnicode;
        }
    }
}

InternalCodec.prototype.encoder = InternalEncoder;
InternalCodec.prototype.decoder = InternalDecoder;

//------------------------------------------------------------------------------

// We use node.js internal decoder. Its signature is the same as ours.
var StringDecoder = __webpack_require__(181).StringDecoder;

if (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.
    StringDecoder.prototype.end = function() {};


function InternalDecoder(options, codec) {
    StringDecoder.call(this, codec.enc);
}

InternalDecoder.prototype = StringDecoder.prototype;


//------------------------------------------------------------------------------
// Encoder is mostly trivial

function InternalEncoder(options, codec) {
    this.enc = codec.enc;
}

InternalEncoder.prototype.write = function(str) {
    return Buffer.from(str, this.enc);
}

InternalEncoder.prototype.end = function() {
}


//------------------------------------------------------------------------------
// Except base64 encoder, which must keep its state.

function InternalEncoderBase64(options, codec) {
    this.prevStr = '';
}

InternalEncoderBase64.prototype.write = function(str) {
    str = this.prevStr + str;
    var completeQuads = str.length - (str.length % 4);
    this.prevStr = str.slice(completeQuads);
    str = str.slice(0, completeQuads);

    return Buffer.from(str, "base64");
}

InternalEncoderBase64.prototype.end = function() {
    return Buffer.from(this.prevStr, "base64");
}


//------------------------------------------------------------------------------
// CESU-8 encoder is also special.

function InternalEncoderCesu8(options, codec) {
}

InternalEncoderCesu8.prototype.write = function(str) {
    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;
    for (var i = 0; i < str.length; i++) {
        var charCode = str.charCodeAt(i);
        // Naive implementation, but it works because CESU-8 is especially easy
        // to convert from UTF-16 (which all JS strings are encoded in).
        if (charCode < 0x80)
            buf[bufIdx++] = charCode;
        else if (charCode < 0x800) {
            buf[bufIdx++] = 0xC0 + (charCode >>> 6);
            buf[bufIdx++] = 0x80 + (charCode & 0x3f);
        }
        else { // charCode will always be < 0x10000 in javascript.
            buf[bufIdx++] = 0xE0 + (charCode >>> 12);
            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);
            buf[bufIdx++] = 0x80 + (charCode & 0x3f);
        }
    }
    return buf.slice(0, bufIdx);
}

InternalEncoderCesu8.prototype.end = function() {
}

//------------------------------------------------------------------------------
// CESU-8 decoder is not implemented in Node v4.0+

function InternalDecoderCesu8(options, codec) {
    this.acc = 0;
    this.contBytes = 0;
    this.accBytes = 0;
    this.defaultCharUnicode = codec.defaultCharUnicode;
}

InternalDecoderCesu8.prototype.write = function(buf) {
    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, 
        res = '';
    for (var i = 0; i < buf.length; i++) {
        var curByte = buf[i];
        if ((curByte & 0xC0) !== 0x80) { // Leading byte
            if (contBytes > 0) { // Previous code is invalid
                res += this.defaultCharUnicode;
                contBytes = 0;
            }

            if (curByte < 0x80) { // Single-byte code
                res += String.fromCharCode(curByte);
            } else if (curByte < 0xE0) { // Two-byte code
                acc = curByte & 0x1F;
                contBytes = 1; accBytes = 1;
            } else if (curByte < 0xF0) { // Three-byte code
                acc = curByte & 0x0F;
                contBytes = 2; accBytes = 1;
            } else { // Four or more are not supported for CESU-8.
                res += this.defaultCharUnicode;
            }
        } else { // Continuation byte
            if (contBytes > 0) { // We're waiting for it.
                acc = (acc << 6) | (curByte & 0x3f);
                contBytes--; accBytes++;
                if (contBytes === 0) {
                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)
                    if (accBytes === 2 && acc < 0x80 && acc > 0)
                        res += this.defaultCharUnicode;
                    else if (accBytes === 3 && acc < 0x800)
                        res += this.defaultCharUnicode;
                    else
                        // Actually add character.
                        res += String.fromCharCode(acc);
                }
            } else { // Unexpected continuation byte
                res += this.defaultCharUnicode;
            }
        }
    }
    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;
    return res;
}

InternalDecoderCesu8.prototype.end = function() {
    var res = 0;
    if (this.contBytes > 0)
        res += this.defaultCharUnicode;
    return res;
}


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(182).Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(77)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(35).Buffer;

// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js

// == UTF16-BE codec. ==========================================================

exports.utf16be = Utf16BECodec;
function Utf16BECodec() {
}

Utf16BECodec.prototype.encoder = Utf16BEEncoder;
Utf16BECodec.prototype.decoder = Utf16BEDecoder;
Utf16BECodec.prototype.bomAware = true;


// -- Encoding

function Utf16BEEncoder() {
}

Utf16BEEncoder.prototype.write = function(str) {
    var buf = Buffer.from(str, 'ucs2');
    for (var i = 0; i < buf.length; i += 2) {
        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;
    }
    return buf;
}

Utf16BEEncoder.prototype.end = function() {
}


// -- Decoding

function Utf16BEDecoder() {
    this.overflowByte = -1;
}

Utf16BEDecoder.prototype.write = function(buf) {
    if (buf.length == 0)
        return '';

    var buf2 = Buffer.alloc(buf.length + 1),
        i = 0, j = 0;

    if (this.overflowByte !== -1) {
        buf2[0] = buf[0];
        buf2[1] = this.overflowByte;
        i = 1; j = 2;
    }

    for (; i < buf.length-1; i += 2, j+= 2) {
        buf2[j] = buf[i+1];
        buf2[j+1] = buf[i];
    }

    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;

    return buf2.slice(0, j).toString('ucs2');
}

Utf16BEDecoder.prototype.end = function() {
}


// == UTF-16 codec =============================================================
// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.
// Defaults to UTF-16LE, as it's prevalent and default in Node.
// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le
// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});

// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).

exports.utf16 = Utf16Codec;
function Utf16Codec(codecOptions, iconv) {
    this.iconv = iconv;
}

Utf16Codec.prototype.encoder = Utf16Encoder;
Utf16Codec.prototype.decoder = Utf16Decoder;


// -- Encoding (pass-through)

function Utf16Encoder(options, codec) {
    options = options || {};
    if (options.addBOM === undefined)
        options.addBOM = true;
    this.encoder = codec.iconv.getEncoder('utf-16le', options);
}

Utf16Encoder.prototype.write = function(str) {
    return this.encoder.write(str);
}

Utf16Encoder.prototype.end = function() {
    return this.encoder.end();
}


// -- Decoding

function Utf16Decoder(options, codec) {
    this.decoder = null;
    this.initialBytes = [];
    this.initialBytesLen = 0;

    this.options = options || {};
    this.iconv = codec.iconv;
}

Utf16Decoder.prototype.write = function(buf) {
    if (!this.decoder) {
        // Codec is not chosen yet. Accumulate initial bytes.
        this.initialBytes.push(buf);
        this.initialBytesLen += buf.length;
        
        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)
            return '';

        // We have enough bytes -> detect endianness.
        var buf = Buffer.concat(this.initialBytes),
            encoding = detectEncoding(buf, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);
        this.initialBytes.length = this.initialBytesLen = 0;
    }

    return this.decoder.write(buf);
}

Utf16Decoder.prototype.end = function() {
    if (!this.decoder) {
        var buf = Buffer.concat(this.initialBytes),
            encoding = detectEncoding(buf, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var res = this.decoder.write(buf),
            trail = this.decoder.end();

        return trail ? (res + trail) : res;
    }
    return this.decoder.end();
}

function detectEncoding(buf, defaultEncoding) {
    var enc = defaultEncoding || 'utf-16le';

    if (buf.length >= 2) {
        // Check BOM.
        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM
            enc = 'utf-16be';
        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM
            enc = 'utf-16le';
        else {
            // No BOM found. Try to deduce encoding from initial content.
            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.
            // So, we count ASCII as if it was LE or BE, and decide from that.
            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions
                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.

            for (var i = 0; i < _len; i += 2) {
                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;
                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;
            }

            if (asciiCharsBE > asciiCharsLE)
                enc = 'utf-16be';
            else if (asciiCharsBE < asciiCharsLE)
                enc = 'utf-16le';
        }
    }

    return enc;
}




/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(35).Buffer;

// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152
// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3

exports.utf7 = Utf7Codec;
exports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7
function Utf7Codec(codecOptions, iconv) {
    this.iconv = iconv;
};

Utf7Codec.prototype.encoder = Utf7Encoder;
Utf7Codec.prototype.decoder = Utf7Decoder;
Utf7Codec.prototype.bomAware = true;


// -- Encoding

var nonDirectChars = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;

function Utf7Encoder(options, codec) {
    this.iconv = codec.iconv;
}

Utf7Encoder.prototype.write = function(str) {
    // Naive implementation.
    // Non-direct chars are encoded as "+<base64>-"; single "+" char is encoded as "+-".
    return Buffer.from(str.replace(nonDirectChars, function(chunk) {
        return "+" + (chunk === '+' ? '' : 
            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) 
            + "-";
    }.bind(this)));
}

Utf7Encoder.prototype.end = function() {
}


// -- Decoding

function Utf7Decoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = '';
}

var base64Regex = /[A-Za-z0-9\/+]/;
var base64Chars = [];
for (var i = 0; i < 256; i++)
    base64Chars[i] = base64Regex.test(String.fromCharCode(i));

var plusChar = '+'.charCodeAt(0), 
    minusChar = '-'.charCodeAt(0),
    andChar = '&'.charCodeAt(0);

Utf7Decoder.prototype.write = function(buf) {
    var res = "", lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;

    // The decoder is more involved as we must handle chunks in stream.

    for (var i = 0; i < buf.length; i++) {
        if (!inBase64) { // We're in direct mode.
            // Write direct chars until '+'
            if (buf[i] == plusChar) {
                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
                lastI = i+1;
                inBase64 = true;
            }
        } else { // We decode base64.
            if (!base64Chars[buf[i]]) { // Base64 ended.
                if (i == lastI && buf[i] == minusChar) {// "+-" -> "+"
                    res += "+";
                } else {
                    var b64str = base64Accum + buf.slice(lastI, i).toString();
                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
                }

                if (buf[i] != minusChar) // Minus is absorbed after base64.
                    i--;

                lastI = i+1;
                inBase64 = false;
                base64Accum = '';
            }
        }
    }

    if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
    } else {
        var b64str = base64Accum + buf.slice(lastI).toString();

        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
        b64str = b64str.slice(0, canBeDecoded);

        res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
    }

    this.inBase64 = inBase64;
    this.base64Accum = base64Accum;

    return res;
}

Utf7Decoder.prototype.end = function() {
    var res = "";
    if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), "utf16-be");

    this.inBase64 = false;
    this.base64Accum = '';
    return res;
}


// UTF-7-IMAP codec.
// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)
// Differences:
//  * Base64 part is started by "&" instead of "+"
//  * Direct characters are 0x20-0x7E, except "&" (0x26)
//  * In Base64, "," is used instead of "/"
//  * Base64 must not be used to represent direct characters.
//  * No implicit shift back from Base64 (should always end with '-')
//  * String must end in non-shifted position.
//  * "-&" while in base64 is not allowed.


exports.utf7imap = Utf7IMAPCodec;
function Utf7IMAPCodec(codecOptions, iconv) {
    this.iconv = iconv;
};

Utf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;
Utf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;
Utf7IMAPCodec.prototype.bomAware = true;


// -- Encoding

function Utf7IMAPEncoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = Buffer.alloc(6);
    this.base64AccumIdx = 0;
}

Utf7IMAPEncoder.prototype.write = function(str) {
    var inBase64 = this.inBase64,
        base64Accum = this.base64Accum,
        base64AccumIdx = this.base64AccumIdx,
        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;

    for (var i = 0; i < str.length; i++) {
        var uChar = str.charCodeAt(i);
        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.
            if (inBase64) {
                if (base64AccumIdx > 0) {
                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
                    base64AccumIdx = 0;
                }

                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
                inBase64 = false;
            }

            if (!inBase64) {
                buf[bufIdx++] = uChar; // Write direct character

                if (uChar === andChar)  // Ampersand -> '&-'
                    buf[bufIdx++] = minusChar;
            }

        } else { // Non-direct character
            if (!inBase64) {
                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.
                inBase64 = true;
            }
            if (inBase64) {
                base64Accum[base64AccumIdx++] = uChar >> 8;
                base64Accum[base64AccumIdx++] = uChar & 0xFF;

                if (base64AccumIdx == base64Accum.length) {
                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\//g, ','), bufIdx);
                    base64AccumIdx = 0;
                }
            }
        }
    }

    this.inBase64 = inBase64;
    this.base64AccumIdx = base64AccumIdx;

    return buf.slice(0, bufIdx);
}

Utf7IMAPEncoder.prototype.end = function() {
    var buf = Buffer.alloc(10), bufIdx = 0;
    if (this.inBase64) {
        if (this.base64AccumIdx > 0) {
            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
            this.base64AccumIdx = 0;
        }

        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
        this.inBase64 = false;
    }

    return buf.slice(0, bufIdx);
}


// -- Decoding

function Utf7IMAPDecoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = '';
}

var base64IMAPChars = base64Chars.slice();
base64IMAPChars[','.charCodeAt(0)] = true;

Utf7IMAPDecoder.prototype.write = function(buf) {
    var res = "", lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;

    // The decoder is more involved as we must handle chunks in stream.
    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).

    for (var i = 0; i < buf.length; i++) {
        if (!inBase64) { // We're in direct mode.
            // Write direct chars until '&'
            if (buf[i] == andChar) {
                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
                lastI = i+1;
                inBase64 = true;
            }
        } else { // We decode base64.
            if (!base64IMAPChars[buf[i]]) { // Base64 ended.
                if (i == lastI && buf[i] == minusChar) { // "&-" -> "&"
                    res += "&";
                } else {
                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');
                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
                }

                if (buf[i] != minusChar) // Minus may be absorbed after base64.
                    i--;

                lastI = i+1;
                inBase64 = false;
                base64Accum = '';
            }
        }
    }

    if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
    } else {
        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');

        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
        b64str = b64str.slice(0, canBeDecoded);

        res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
    }

    this.inBase64 = inBase64;
    this.base64Accum = base64Accum;

    return res;
}

Utf7IMAPDecoder.prototype.end = function() {
    var res = "";
    if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), "utf16-be");

    this.inBase64 = false;
    this.base64Accum = '';
    return res;
}




/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(35).Buffer;

// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that
// correspond to encoded bytes (if 128 - then lower half is ASCII). 

exports._sbcs = SBCSCodec;
function SBCSCodec(codecOptions, iconv) {
    if (!codecOptions)
        throw new Error("SBCS codec is called without the data.")
    
    // Prepare char buffer for decoding.
    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))
        throw new Error("Encoding '"+codecOptions.type+"' has incorrect 'chars' (must be of len 128 or 256)");
    
    if (codecOptions.chars.length === 128) {
        var asciiString = "";
        for (var i = 0; i < 128; i++)
            asciiString += String.fromCharCode(i);
        codecOptions.chars = asciiString + codecOptions.chars;
    }

    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');
    
    // Encoding buffer.
    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));

    for (var i = 0; i < codecOptions.chars.length; i++)
        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;

    this.encodeBuf = encodeBuf;
}

SBCSCodec.prototype.encoder = SBCSEncoder;
SBCSCodec.prototype.decoder = SBCSDecoder;


function SBCSEncoder(options, codec) {
    this.encodeBuf = codec.encodeBuf;
}

SBCSEncoder.prototype.write = function(str) {
    var buf = Buffer.alloc(str.length);
    for (var i = 0; i < str.length; i++)
        buf[i] = this.encodeBuf[str.charCodeAt(i)];
    
    return buf;
}

SBCSEncoder.prototype.end = function() {
}


function SBCSDecoder(options, codec) {
    this.decodeBuf = codec.decodeBuf;
}

SBCSDecoder.prototype.write = function(buf) {
    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.
    var decodeBuf = this.decodeBuf;
    var newBuf = Buffer.alloc(buf.length*2);
    var idx1 = 0, idx2 = 0;
    for (var i = 0; i < buf.length; i++) {
        idx1 = buf[i]*2; idx2 = i*2;
        newBuf[idx2] = decodeBuf[idx1];
        newBuf[idx2+1] = decodeBuf[idx1+1];
    }
    return newBuf.toString('ucs2');
}

SBCSDecoder.prototype.end = function() {
}


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Manually added data to be used by sbcs codec in addition to generated one.

module.exports = {
    // Not supported by iconv, not sure why.
    "10029": "maccenteuro",
    "maccenteuro": {
        "type": "_sbcs",
        "chars": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"
    },

    "808": "cp808",
    "ibm808": "cp808",
    "cp808": {
        "type": "_sbcs",
        "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "
    },

    "mik": {
        "type": "_sbcs",
        "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
    },

    // Aliases of generated encodings.
    "ascii8bit": "ascii",
    "usascii": "ascii",
    "ansix34": "ascii",
    "ansix341968": "ascii",
    "ansix341986": "ascii",
    "csascii": "ascii",
    "cp367": "ascii",
    "ibm367": "ascii",
    "isoir6": "ascii",
    "iso646us": "ascii",
    "iso646irv": "ascii",
    "us": "ascii",

    "latin1": "iso88591",
    "latin2": "iso88592",
    "latin3": "iso88593",
    "latin4": "iso88594",
    "latin5": "iso88599",
    "latin6": "iso885910",
    "latin7": "iso885913",
    "latin8": "iso885914",
    "latin9": "iso885915",
    "latin10": "iso885916",

    "csisolatin1": "iso88591",
    "csisolatin2": "iso88592",
    "csisolatin3": "iso88593",
    "csisolatin4": "iso88594",
    "csisolatincyrillic": "iso88595",
    "csisolatinarabic": "iso88596",
    "csisolatingreek" : "iso88597",
    "csisolatinhebrew": "iso88598",
    "csisolatin5": "iso88599",
    "csisolatin6": "iso885910",

    "l1": "iso88591",
    "l2": "iso88592",
    "l3": "iso88593",
    "l4": "iso88594",
    "l5": "iso88599",
    "l6": "iso885910",
    "l7": "iso885913",
    "l8": "iso885914",
    "l9": "iso885915",
    "l10": "iso885916",

    "isoir14": "iso646jp",
    "isoir57": "iso646cn",
    "isoir100": "iso88591",
    "isoir101": "iso88592",
    "isoir109": "iso88593",
    "isoir110": "iso88594",
    "isoir144": "iso88595",
    "isoir127": "iso88596",
    "isoir126": "iso88597",
    "isoir138": "iso88598",
    "isoir148": "iso88599",
    "isoir157": "iso885910",
    "isoir166": "tis620",
    "isoir179": "iso885913",
    "isoir199": "iso885914",
    "isoir203": "iso885915",
    "isoir226": "iso885916",

    "cp819": "iso88591",
    "ibm819": "iso88591",

    "cyrillic": "iso88595",

    "arabic": "iso88596",
    "arabic8": "iso88596",
    "ecma114": "iso88596",
    "asmo708": "iso88596",

    "greek" : "iso88597",
    "greek8" : "iso88597",
    "ecma118" : "iso88597",
    "elot928" : "iso88597",

    "hebrew": "iso88598",
    "hebrew8": "iso88598",

    "turkish": "iso88599",
    "turkish8": "iso88599",

    "thai": "iso885911",
    "thai8": "iso885911",

    "celtic": "iso885914",
    "celtic8": "iso885914",
    "isoceltic": "iso885914",

    "tis6200": "tis620",
    "tis62025291": "tis620",
    "tis62025330": "tis620",

    "10000": "macroman",
    "10006": "macgreek",
    "10007": "maccyrillic",
    "10079": "maciceland",
    "10081": "macturkish",

    "cspc8codepage437": "cp437",
    "cspc775baltic": "cp775",
    "cspc850multilingual": "cp850",
    "cspcp852": "cp852",
    "cspc862latinhebrew": "cp862",
    "cpgr": "cp869",

    "msee": "cp1250",
    "mscyrl": "cp1251",
    "msansi": "cp1252",
    "msgreek": "cp1253",
    "msturk": "cp1254",
    "mshebr": "cp1255",
    "msarab": "cp1256",
    "winbaltrim": "cp1257",

    "cp20866": "koi8r",
    "20866": "koi8r",
    "ibm878": "koi8r",
    "cskoi8r": "koi8r",

    "cp21866": "koi8u",
    "21866": "koi8u",
    "ibm1168": "koi8u",

    "strk10482002": "rk1048",

    "tcvn5712": "tcvn",
    "tcvn57121": "tcvn",

    "gb198880": "iso646cn",
    "cn": "iso646cn",

    "csiso14jisc6220ro": "iso646jp",
    "jisc62201969ro": "iso646jp",
    "jp": "iso646jp",

    "cshproman8": "hproman8",
    "r8": "hproman8",
    "roman8": "hproman8",
    "xroman8": "hproman8",
    "ibm1051": "hproman8",

    "mac": "macintosh",
    "csmacintosh": "macintosh",
};



/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.
module.exports = {
  "437": "cp437",
  "737": "cp737",
  "775": "cp775",
  "850": "cp850",
  "852": "cp852",
  "855": "cp855",
  "856": "cp856",
  "857": "cp857",
  "858": "cp858",
  "860": "cp860",
  "861": "cp861",
  "862": "cp862",
  "863": "cp863",
  "864": "cp864",
  "865": "cp865",
  "866": "cp866",
  "869": "cp869",
  "874": "windows874",
  "922": "cp922",
  "1046": "cp1046",
  "1124": "cp1124",
  "1125": "cp1125",
  "1129": "cp1129",
  "1133": "cp1133",
  "1161": "cp1161",
  "1162": "cp1162",
  "1163": "cp1163",
  "1250": "windows1250",
  "1251": "windows1251",
  "1252": "windows1252",
  "1253": "windows1253",
  "1254": "windows1254",
  "1255": "windows1255",
  "1256": "windows1256",
  "1257": "windows1257",
  "1258": "windows1258",
  "28591": "iso88591",
  "28592": "iso88592",
  "28593": "iso88593",
  "28594": "iso88594",
  "28595": "iso88595",
  "28596": "iso88596",
  "28597": "iso88597",
  "28598": "iso88598",
  "28599": "iso88599",
  "28600": "iso885910",
  "28601": "iso885911",
  "28603": "iso885913",
  "28604": "iso885914",
  "28605": "iso885915",
  "28606": "iso885916",
  "windows874": {
    "type": "_sbcs",
    "chars": "€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "win874": "windows874",
  "cp874": "windows874",
  "windows1250": {
    "type": "_sbcs",
    "chars": "€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
  },
  "win1250": "windows1250",
  "cp1250": "windows1250",
  "windows1251": {
    "type": "_sbcs",
    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "win1251": "windows1251",
  "cp1251": "windows1251",
  "windows1252": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "win1252": "windows1252",
  "cp1252": "windows1252",
  "windows1253": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
  },
  "win1253": "windows1253",
  "cp1253": "windows1253",
  "windows1254": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
  },
  "win1254": "windows1254",
  "cp1254": "windows1254",
  "windows1255": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
  },
  "win1255": "windows1255",
  "cp1255": "windows1255",
  "windows1256": {
    "type": "_sbcs",
    "chars": "€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"
  },
  "win1256": "windows1256",
  "cp1256": "windows1256",
  "windows1257": {
    "type": "_sbcs",
    "chars": "€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"
  },
  "win1257": "windows1257",
  "cp1257": "windows1257",
  "windows1258": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "win1258": "windows1258",
  "cp1258": "windows1258",
  "iso88591": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "cp28591": "iso88591",
  "iso88592": {
    "type": "_sbcs",
    "chars": " Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
  },
  "cp28592": "iso88592",
  "iso88593": {
    "type": "_sbcs",
    "chars": " Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"
  },
  "cp28593": "iso88593",
  "iso88594": {
    "type": "_sbcs",
    "chars": " ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"
  },
  "cp28594": "iso88594",
  "iso88595": {
    "type": "_sbcs",
    "chars": " ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"
  },
  "cp28595": "iso88595",
  "iso88596": {
    "type": "_sbcs",
    "chars": " ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"
  },
  "cp28596": "iso88596",
  "iso88597": {
    "type": "_sbcs",
    "chars": " ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
  },
  "cp28597": "iso88597",
  "iso88598": {
    "type": "_sbcs",
    "chars": " �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
  },
  "cp28598": "iso88598",
  "iso88599": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
  },
  "cp28599": "iso88599",
  "iso885910": {
    "type": "_sbcs",
    "chars": " ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"
  },
  "cp28600": "iso885910",
  "iso885911": {
    "type": "_sbcs",
    "chars": " กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "cp28601": "iso885911",
  "iso885913": {
    "type": "_sbcs",
    "chars": " ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"
  },
  "cp28603": "iso885913",
  "iso885914": {
    "type": "_sbcs",
    "chars": " Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"
  },
  "cp28604": "iso885914",
  "iso885915": {
    "type": "_sbcs",
    "chars": " ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "cp28605": "iso885915",
  "iso885916": {
    "type": "_sbcs",
    "chars": " ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"
  },
  "cp28606": "iso885916",
  "cp437": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm437": "cp437",
  "csibm437": "cp437",
  "cp737": {
    "type": "_sbcs",
    "chars": "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "
  },
  "ibm737": "cp737",
  "csibm737": "cp737",
  "cp775": {
    "type": "_sbcs",
    "chars": "ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "
  },
  "ibm775": "cp775",
  "csibm775": "cp775",
  "cp850": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm850": "cp850",
  "csibm850": "cp850",
  "cp852": {
    "type": "_sbcs",
    "chars": "ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "
  },
  "ibm852": "cp852",
  "csibm852": "cp852",
  "cp855": {
    "type": "_sbcs",
    "chars": "ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "
  },
  "ibm855": "cp855",
  "csibm855": "cp855",
  "cp856": {
    "type": "_sbcs",
    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm856": "cp856",
  "csibm856": "cp856",
  "cp857": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "
  },
  "ibm857": "cp857",
  "csibm857": "cp857",
  "cp858": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm858": "cp858",
  "csibm858": "cp858",
  "cp860": {
    "type": "_sbcs",
    "chars": "ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm860": "cp860",
  "csibm860": "cp860",
  "cp861": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm861": "cp861",
  "csibm861": "cp861",
  "cp862": {
    "type": "_sbcs",
    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm862": "cp862",
  "csibm862": "cp862",
  "cp863": {
    "type": "_sbcs",
    "chars": "ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm863": "cp863",
  "csibm863": "cp863",
  "cp864": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"
  },
  "ibm864": "cp864",
  "csibm864": "cp864",
  "cp865": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm865": "cp865",
  "csibm865": "cp865",
  "cp866": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "
  },
  "ibm866": "cp866",
  "csibm866": "cp866",
  "cp869": {
    "type": "_sbcs",
    "chars": "������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "
  },
  "ibm869": "cp869",
  "csibm869": "cp869",
  "cp922": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"
  },
  "ibm922": "cp922",
  "csibm922": "cp922",
  "cp1046": {
    "type": "_sbcs",
    "chars": "ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"
  },
  "ibm1046": "cp1046",
  "csibm1046": "cp1046",
  "cp1124": {
    "type": "_sbcs",
    "chars": " ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"
  },
  "ibm1124": "cp1124",
  "csibm1124": "cp1124",
  "cp1125": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "
  },
  "ibm1125": "cp1125",
  "csibm1125": "cp1125",
  "cp1129": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "ibm1129": "cp1129",
  "csibm1129": "cp1129",
  "cp1133": {
    "type": "_sbcs",
    "chars": " ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"
  },
  "ibm1133": "cp1133",
  "csibm1133": "cp1133",
  "cp1161": {
    "type": "_sbcs",
    "chars": "��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "
  },
  "ibm1161": "cp1161",
  "csibm1161": "cp1161",
  "cp1162": {
    "type": "_sbcs",
    "chars": "€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "ibm1162": "cp1162",
  "csibm1162": "cp1162",
  "cp1163": {
    "type": "_sbcs",
    "chars": " ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "ibm1163": "cp1163",
  "csibm1163": "cp1163",
  "maccroatian": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"
  },
  "maccyrillic": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
  },
  "macgreek": {
    "type": "_sbcs",
    "chars": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"
  },
  "maciceland": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macroman": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macromania": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macthai": {
    "type": "_sbcs",
    "chars": "«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"
  },
  "macturkish": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macukraine": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
  },
  "koi8r": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8u": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8ru": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8t": {
    "type": "_sbcs",
    "chars": "қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "armscii8": {
    "type": "_sbcs",
    "chars": " �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"
  },
  "rk1048": {
    "type": "_sbcs",
    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "tcvn": {
    "type": "_sbcs",
    "chars": "\u0000ÚỤ\u0003ỪỬỮ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010ỨỰỲỶỸÝỴ\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"
  },
  "georgianacademy": {
    "type": "_sbcs",
    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "georgianps": {
    "type": "_sbcs",
    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "pt154": {
    "type": "_sbcs",
    "chars": "ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "viscii": {
    "type": "_sbcs",
    "chars": "\u0000\u0001Ẳ\u0003\u0004ẴẪ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013Ỷ\u0015\u0016\u0017\u0018Ỹ\u001a\u001b\u001c\u001dỴ\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"
  },
  "iso646cn": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
  },
  "iso646jp": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
  },
  "hproman8": {
    "type": "_sbcs",
    "chars": " ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"
  },
  "macintosh": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "ascii": {
    "type": "_sbcs",
    "chars": "��������������������������������������������������������������������������������������������������������������������������������"
  },
  "tis620": {
    "type": "_sbcs",
    "chars": "���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  }
}

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(35).Buffer;

// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.
// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.
// To save memory and loading time, we read table files only when requested.

exports._dbcs = DBCSCodec;

var UNASSIGNED = -1,
    GB18030_CODE = -2,
    SEQ_START  = -10,
    NODE_START = -1000,
    UNASSIGNED_NODE = new Array(0x100),
    DEF_CHAR = -1;

for (var i = 0; i < 0x100; i++)
    UNASSIGNED_NODE[i] = UNASSIGNED;


// Class DBCSCodec reads and initializes mapping tables.
function DBCSCodec(codecOptions, iconv) {
    this.encodingName = codecOptions.encodingName;
    if (!codecOptions)
        throw new Error("DBCS codec is called without the data.")
    if (!codecOptions.table)
        throw new Error("Encoding '" + this.encodingName + "' has no data.");

    // Load tables.
    var mappingTable = codecOptions.table();


    // Decode tables: MBCS -> Unicode.

    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.
    // Trie root is decodeTables[0].
    // Values: >=  0 -> unicode character code. can be > 0xFFFF
    //         == UNASSIGNED -> unknown/unassigned sequence.
    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.
    //         <= NODE_START -> index of the next node in our trie to process next byte.
    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.
    this.decodeTables = [];
    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.

    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. 
    this.decodeTableSeq = [];

    // Actual mapping tables consist of chunks. Use them to fill up decode tables.
    for (var i = 0; i < mappingTable.length; i++)
        this._addDecodeChunk(mappingTable[i]);

    this.defaultCharUnicode = iconv.defaultCharUnicode;

    
    // Encode tables: Unicode -> DBCS.

    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.
    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.
    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).
    //         == UNASSIGNED -> no conversion found. Output a default char.
    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.
    this.encodeTable = [];
    
    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of
    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key
    // means end of sequence (needed when one sequence is a strict subsequence of another).
    // Objects are kept separately from encodeTable to increase performance.
    this.encodeTableSeq = [];

    // Some chars can be decoded, but need not be encoded.
    var skipEncodeChars = {};
    if (codecOptions.encodeSkipVals)
        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {
            var val = codecOptions.encodeSkipVals[i];
            if (typeof val === 'number')
                skipEncodeChars[val] = true;
            else
                for (var j = val.from; j <= val.to; j++)
                    skipEncodeChars[j] = true;
        }
        
    // Use decode trie to recursively fill out encode tables.
    this._fillEncodeTable(0, 0, skipEncodeChars);

    // Add more encoding pairs when needed.
    if (codecOptions.encodeAdd) {
        for (var uChar in codecOptions.encodeAdd)
            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))
                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);
    }

    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];
    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];
    if (this.defCharSB === UNASSIGNED) this.defCharSB = "?".charCodeAt(0);


    // Load & create GB18030 tables when needed.
    if (typeof codecOptions.gb18030 === 'function') {
        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.

        // Add GB18030 decode tables.
        var thirdByteNodeIdx = this.decodeTables.length;
        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);

        var fourthByteNodeIdx = this.decodeTables.length;
        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);

        for (var i = 0x81; i <= 0xFE; i++) {
            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];
            var secondByteNode = this.decodeTables[secondByteNodeIdx];
            for (var j = 0x30; j <= 0x39; j++)
                secondByteNode[j] = NODE_START - thirdByteNodeIdx;
        }
        for (var i = 0x81; i <= 0xFE; i++)
            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;
        for (var i = 0x30; i <= 0x39; i++)
            fourthByteNode[i] = GB18030_CODE
    }        
}

DBCSCodec.prototype.encoder = DBCSEncoder;
DBCSCodec.prototype.decoder = DBCSDecoder;

// Decoder helpers
DBCSCodec.prototype._getDecodeTrieNode = function(addr) {
    var bytes = [];
    for (; addr > 0; addr >>= 8)
        bytes.push(addr & 0xFF);
    if (bytes.length == 0)
        bytes.push(0);

    var node = this.decodeTables[0];
    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.
        var val = node[bytes[i]];

        if (val == UNASSIGNED) { // Create new node.
            node[bytes[i]] = NODE_START - this.decodeTables.length;
            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));
        }
        else if (val <= NODE_START) { // Existing node.
            node = this.decodeTables[NODE_START - val];
        }
        else
            throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + addr.toString(16));
    }
    return node;
}


DBCSCodec.prototype._addDecodeChunk = function(chunk) {
    // First element of chunk is the hex mbcs code where we start.
    var curAddr = parseInt(chunk[0], 16);

    // Choose the decoding node where we'll write our chars.
    var writeTable = this._getDecodeTrieNode(curAddr);
    curAddr = curAddr & 0xFF;

    // Write all other elements of the chunk to the table.
    for (var k = 1; k < chunk.length; k++) {
        var part = chunk[k];
        if (typeof part === "string") { // String, write as-is.
            for (var l = 0; l < part.length;) {
                var code = part.charCodeAt(l++);
                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate
                    var codeTrail = part.charCodeAt(l++);
                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)
                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);
                    else
                        throw new Error("Incorrect surrogate pair in "  + this.encodingName + " at chunk " + chunk[0]);
                }
                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)
                    var len = 0xFFF - code + 2;
                    var seq = [];
                    for (var m = 0; m < len; m++)
                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.

                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;
                    this.decodeTableSeq.push(seq);
                }
                else
                    writeTable[curAddr++] = code; // Basic char
            }
        } 
        else if (typeof part === "number") { // Integer, meaning increasing sequence starting with prev character.
            var charCode = writeTable[curAddr - 1] + 1;
            for (var l = 0; l < part; l++)
                writeTable[curAddr++] = charCode++;
        }
        else
            throw new Error("Incorrect type '" + typeof part + "' given in "  + this.encodingName + " at chunk " + chunk[0]);
    }
    if (curAddr > 0xFF)
        throw new Error("Incorrect chunk in "  + this.encodingName + " at addr " + chunk[0] + ": too long" + curAddr);
}

// Encoder helpers
DBCSCodec.prototype._getEncodeBucket = function(uCode) {
    var high = uCode >> 8; // This could be > 0xFF because of astral characters.
    if (this.encodeTable[high] === undefined)
        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.
    return this.encodeTable[high];
}

DBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {
    var bucket = this._getEncodeBucket(uCode);
    var low = uCode & 0xFF;
    if (bucket[low] <= SEQ_START)
        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.
    else if (bucket[low] == UNASSIGNED)
        bucket[low] = dbcsCode;
}

DBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {
    
    // Get the root of character tree according to first character of the sequence.
    var uCode = seq[0];
    var bucket = this._getEncodeBucket(uCode);
    var low = uCode & 0xFF;

    var node;
    if (bucket[low] <= SEQ_START) {
        // There's already a sequence with  - use it.
        node = this.encodeTableSeq[SEQ_START-bucket[low]];
    }
    else {
        // There was no sequence object - allocate a new one.
        node = {};
        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.
        bucket[low] = SEQ_START - this.encodeTableSeq.length;
        this.encodeTableSeq.push(node);
    }

    // Traverse the character tree, allocating new nodes as needed.
    for (var j = 1; j < seq.length-1; j++) {
        var oldVal = node[uCode];
        if (typeof oldVal === 'object')
            node = oldVal;
        else {
            node = node[uCode] = {}
            if (oldVal !== undefined)
                node[DEF_CHAR] = oldVal
        }
    }

    // Set the leaf to given dbcsCode.
    uCode = seq[seq.length-1];
    node[uCode] = dbcsCode;
}

DBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {
    var node = this.decodeTables[nodeIdx];
    for (var i = 0; i < 0x100; i++) {
        var uCode = node[i];
        var mbCode = prefix + i;
        if (skipEncodeChars[mbCode])
            continue;

        if (uCode >= 0)
            this._setEncodeChar(uCode, mbCode);
        else if (uCode <= NODE_START)
            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);
        else if (uCode <= SEQ_START)
            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);
    }
}



// == Encoder ==================================================================

function DBCSEncoder(options, codec) {
    // Encoder state
    this.leadSurrogate = -1;
    this.seqObj = undefined;
    
    // Static data
    this.encodeTable = codec.encodeTable;
    this.encodeTableSeq = codec.encodeTableSeq;
    this.defaultCharSingleByte = codec.defCharSB;
    this.gb18030 = codec.gb18030;
}

DBCSEncoder.prototype.write = function(str) {
    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),
        leadSurrogate = this.leadSurrogate,
        seqObj = this.seqObj, nextChar = -1,
        i = 0, j = 0;

    while (true) {
        // 0. Get next character.
        if (nextChar === -1) {
            if (i == str.length) break;
            var uCode = str.charCodeAt(i++);
        }
        else {
            var uCode = nextChar;
            nextChar = -1;    
        }

        // 1. Handle surrogates.
        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.
            if (uCode < 0xDC00) { // We've got lead surrogate.
                if (leadSurrogate === -1) {
                    leadSurrogate = uCode;
                    continue;
                } else {
                    leadSurrogate = uCode;
                    // Double lead surrogate found.
                    uCode = UNASSIGNED;
                }
            } else { // We've got trail surrogate.
                if (leadSurrogate !== -1) {
                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);
                    leadSurrogate = -1;
                } else {
                    // Incomplete surrogate pair - only trail surrogate found.
                    uCode = UNASSIGNED;
                }
                
            }
        }
        else if (leadSurrogate !== -1) {
            // Incomplete surrogate pair - only lead surrogate found.
            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.
            leadSurrogate = -1;
        }

        // 2. Convert uCode character.
        var dbcsCode = UNASSIGNED;
        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence
            var resCode = seqObj[uCode];
            if (typeof resCode === 'object') { // Sequence continues.
                seqObj = resCode;
                continue;

            } else if (typeof resCode == 'number') { // Sequence finished. Write it.
                dbcsCode = resCode;

            } else if (resCode == undefined) { // Current character is not part of the sequence.

                // Try default character for this sequence
                resCode = seqObj[DEF_CHAR];
                if (resCode !== undefined) {
                    dbcsCode = resCode; // Found. Write it.
                    nextChar = uCode; // Current character will be written too in the next iteration.

                } else {
                    // TODO: What if we have no default? (resCode == undefined)
                    // Then, we should write first char of the sequence as-is and try the rest recursively.
                    // Didn't do it for now because no encoding has this situation yet.
                    // Currently, just skip the sequence and write current char.
                }
            }
            seqObj = undefined;
        }
        else if (uCode >= 0) {  // Regular character
            var subtable = this.encodeTable[uCode >> 8];
            if (subtable !== undefined)
                dbcsCode = subtable[uCode & 0xFF];
            
            if (dbcsCode <= SEQ_START) { // Sequence start
                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];
                continue;
            }

            if (dbcsCode == UNASSIGNED && this.gb18030) {
                // Use GB18030 algorithm to find character(s) to write.
                var idx = findIdx(this.gb18030.uChars, uCode);
                if (idx != -1) {
                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);
                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;
                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;
                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;
                    newBuf[j++] = 0x30 + dbcsCode;
                    continue;
                }
            }
        }

        // 3. Write dbcsCode character.
        if (dbcsCode === UNASSIGNED)
            dbcsCode = this.defaultCharSingleByte;
        
        if (dbcsCode < 0x100) {
            newBuf[j++] = dbcsCode;
        }
        else if (dbcsCode < 0x10000) {
            newBuf[j++] = dbcsCode >> 8;   // high byte
            newBuf[j++] = dbcsCode & 0xFF; // low byte
        }
        else {
            newBuf[j++] = dbcsCode >> 16;
            newBuf[j++] = (dbcsCode >> 8) & 0xFF;
            newBuf[j++] = dbcsCode & 0xFF;
        }
    }

    this.seqObj = seqObj;
    this.leadSurrogate = leadSurrogate;
    return newBuf.slice(0, j);
}

DBCSEncoder.prototype.end = function() {
    if (this.leadSurrogate === -1 && this.seqObj === undefined)
        return; // All clean. Most often case.

    var newBuf = Buffer.alloc(10), j = 0;

    if (this.seqObj) { // We're in the sequence.
        var dbcsCode = this.seqObj[DEF_CHAR];
        if (dbcsCode !== undefined) { // Write beginning of the sequence.
            if (dbcsCode < 0x100) {
                newBuf[j++] = dbcsCode;
            }
            else {
                newBuf[j++] = dbcsCode >> 8;   // high byte
                newBuf[j++] = dbcsCode & 0xFF; // low byte
            }
        } else {
            // See todo above.
        }
        this.seqObj = undefined;
    }

    if (this.leadSurrogate !== -1) {
        // Incomplete surrogate pair - only lead surrogate found.
        newBuf[j++] = this.defaultCharSingleByte;
        this.leadSurrogate = -1;
    }
    
    return newBuf.slice(0, j);
}

// Export for testing
DBCSEncoder.prototype.findIdx = findIdx;


// == Decoder ==================================================================

function DBCSDecoder(options, codec) {
    // Decoder state
    this.nodeIdx = 0;
    this.prevBuf = Buffer.alloc(0);

    // Static data
    this.decodeTables = codec.decodeTables;
    this.decodeTableSeq = codec.decodeTableSeq;
    this.defaultCharUnicode = codec.defaultCharUnicode;
    this.gb18030 = codec.gb18030;
}

DBCSDecoder.prototype.write = function(buf) {
    var newBuf = Buffer.alloc(buf.length*2),
        nodeIdx = this.nodeIdx, 
        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,
        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.
        uCode;

    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.
        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);
    
    for (var i = 0, j = 0; i < buf.length; i++) {
        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];

        // Lookup in current trie node.
        var uCode = this.decodeTables[nodeIdx][curByte];

        if (uCode >= 0) { 
            // Normal character, just use it.
        }
        else if (uCode === UNASSIGNED) { // Unknown char.
            // TODO: Callback with seq.
            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);
            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).
            uCode = this.defaultCharUnicode.charCodeAt(0);
        }
        else if (uCode === GB18030_CODE) {
            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);
            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);
            var idx = findIdx(this.gb18030.gbChars, ptr);
            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];
        }
        else if (uCode <= NODE_START) { // Go to next trie node.
            nodeIdx = NODE_START - uCode;
            continue;
        }
        else if (uCode <= SEQ_START) { // Output a sequence of chars.
            var seq = this.decodeTableSeq[SEQ_START - uCode];
            for (var k = 0; k < seq.length - 1; k++) {
                uCode = seq[k];
                newBuf[j++] = uCode & 0xFF;
                newBuf[j++] = uCode >> 8;
            }
            uCode = seq[seq.length-1];
        }
        else
            throw new Error("iconv-lite internal error: invalid decoding table value " + uCode + " at " + nodeIdx + "/" + curByte);

        // Write the character to buffer, handling higher planes using surrogate pair.
        if (uCode > 0xFFFF) { 
            uCode -= 0x10000;
            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);
            newBuf[j++] = uCodeLead & 0xFF;
            newBuf[j++] = uCodeLead >> 8;

            uCode = 0xDC00 + uCode % 0x400;
        }
        newBuf[j++] = uCode & 0xFF;
        newBuf[j++] = uCode >> 8;

        // Reset trie node.
        nodeIdx = 0; seqStart = i+1;
    }

    this.nodeIdx = nodeIdx;
    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);
    return newBuf.slice(0, j).toString('ucs2');
}

DBCSDecoder.prototype.end = function() {
    var ret = '';

    // Try to parse all remaining chars.
    while (this.prevBuf.length > 0) {
        // Skip 1 character in the buffer.
        ret += this.defaultCharUnicode;
        var buf = this.prevBuf.slice(1);

        // Parse remaining as usual.
        this.prevBuf = Buffer.alloc(0);
        this.nodeIdx = 0;
        if (buf.length > 0)
            ret += this.write(buf);
    }

    this.nodeIdx = 0;
    return ret;
}

// Binary search for GB18030. Returns largest i such that table[i] <= val.
function findIdx(table, val) {
    if (table[0] > val)
        return -1;

    var l = 0, r = table.length;
    while (l < r-1) { // always table[l] <= val < table[r]
        var mid = l + Math.floor((r-l+1)/2);
        if (table[mid] <= val)
            l = mid;
        else
            r = mid;
    }
    return l;
}



/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Description of supported double byte encodings and aliases.
// Tables are not require()-d until they are needed to speed up library load.
// require()-s are direct to support Browserify.

module.exports = {
    
    // == Japanese/ShiftJIS ====================================================
    // All japanese encodings are based on JIS X set of standards:
    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.
    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
    //              Has several variations in 1978, 1983, 1990 and 1997.
    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
    //              2 planes, first is superset of 0208, second - revised 0212.
    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)

    // Byte encodings are:
    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
    //               0x00-0x7F       - lower part of 0201
    //               0x8E, 0xA1-0xDF - upper part of 0201
    //               (0xA1-0xFE)x2   - 0208 plane (94x94).
    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
    //               Used as-is in ISO2022 family.
    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
    //                0201-1976 Roman, 0208-1978, 0208-1983.
    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
    //
    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
    //
    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html

    'shiftjis': {
        type: '_dbcs',
        table: function() { return __webpack_require__(190) },
        encodeAdd: {'\u00a5': 0x5C, '\u203E': 0x7E},
        encodeSkipVals: [{from: 0xED40, to: 0xF940}],
    },
    'csshiftjis': 'shiftjis',
    'mskanji': 'shiftjis',
    'sjis': 'shiftjis',
    'windows31j': 'shiftjis',
    'ms31j': 'shiftjis',
    'xsjis': 'shiftjis',
    'windows932': 'shiftjis',
    'ms932': 'shiftjis',
    '932': 'shiftjis',
    'cp932': 'shiftjis',

    'eucjp': {
        type: '_dbcs',
        table: function() { return __webpack_require__(191) },
        encodeAdd: {'\u00a5': 0x5C, '\u203E': 0x7E},
    },

    // TODO: KDDI extension to Shift_JIS
    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.


    // == Chinese/GBK ==========================================================
    // http://en.wikipedia.org/wiki/GBK
    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder

    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
    'gb2312': 'cp936',
    'gb231280': 'cp936',
    'gb23121980': 'cp936',
    'csgb2312': 'cp936',
    'csiso58gb231280': 'cp936',
    'euccn': 'cp936',

    // Microsoft's CP936 is a subset and approximation of GBK.
    'windows936': 'cp936',
    'ms936': 'cp936',
    '936': 'cp936',
    'cp936': {
        type: '_dbcs',
        table: function() { return __webpack_require__(65) },
    },

    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
    'gbk': {
        type: '_dbcs',
        table: function() { return __webpack_require__(65).concat(__webpack_require__(78)) },
    },
    'xgbk': 'gbk',
    'isoir58': 'gbk',

    // GB18030 is an algorithmic extension of GBK.
    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder
    // http://icu-project.org/docs/papers/gb18030.html
    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
    'gb18030': {
        type: '_dbcs',
        table: function() { return __webpack_require__(65).concat(__webpack_require__(78)) },
        gb18030: function() { return __webpack_require__(192) },
        encodeSkipVals: [0x80],
        encodeAdd: {'€': 0xA2E3},
    },

    'chinese': 'gb18030',


    // == Korean ===============================================================
    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
    'windows949': 'cp949',
    'ms949': 'cp949',
    '949': 'cp949',
    'cp949': {
        type: '_dbcs',
        table: function() { return __webpack_require__(193) },
    },

    'cseuckr': 'cp949',
    'csksc56011987': 'cp949',
    'euckr': 'cp949',
    'isoir149': 'cp949',
    'korean': 'cp949',
    'ksc56011987': 'cp949',
    'ksc56011989': 'cp949',
    'ksc5601': 'cp949',


    // == Big5/Taiwan/Hong Kong ================================================
    // There are lots of tables for Big5 and cp950. Please see the following links for history:
    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
    // Variations, in roughly number of defined chars:
    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
    //  * Big5-2003 (Taiwan standard) almost superset of cp950.
    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
    //    Plus, it has 4 combining sequences.
    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
    //    Implementations are not consistent within browsers; sometimes labeled as just big5.
    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
    // 
    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.

    'windows950': 'cp950',
    'ms950': 'cp950',
    '950': 'cp950',
    'cp950': {
        type: '_dbcs',
        table: function() { return __webpack_require__(79) },
    },

    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
    'big5': 'big5hkscs',
    'big5hkscs': {
        type: '_dbcs',
        table: function() { return __webpack_require__(79).concat(__webpack_require__(194)) },
        encodeSkipVals: [0xa2cc],
    },

    'cnbig5': 'big5hkscs',
    'csbig5': 'big5hkscs',
    'xxbig5': 'big5hkscs',
};


/***/ }),
/* 190 */
/***/ (function(module) {

module.exports = JSON.parse("[[\"0\",\"\\u0000\",128],[\"a1\",\"｡\",62],[\"8140\",\"　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈\",9,\"＋－±×\"],[\"8180\",\"÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓\"],[\"81b8\",\"∈∋⊆⊇⊂⊃∪∩\"],[\"81c8\",\"∧∨￢⇒⇔∀∃\"],[\"81da\",\"∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬\"],[\"81f0\",\"Å‰♯♭♪†‡¶\"],[\"81fc\",\"◯\"],[\"824f\",\"０\",9],[\"8260\",\"Ａ\",25],[\"8281\",\"ａ\",25],[\"829f\",\"ぁ\",82],[\"8340\",\"ァ\",62],[\"8380\",\"ム\",22],[\"839f\",\"Α\",16,\"Σ\",6],[\"83bf\",\"α\",16,\"σ\",6],[\"8440\",\"А\",5,\"ЁЖ\",25],[\"8470\",\"а\",5,\"ёж\",7],[\"8480\",\"о\",17],[\"849f\",\"─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂\"],[\"8740\",\"①\",19,\"Ⅰ\",9],[\"875f\",\"㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡\"],[\"877e\",\"㍻\"],[\"8780\",\"〝〟№㏍℡㊤\",4,\"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪\"],[\"889f\",\"亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭\"],[\"8940\",\"院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円\"],[\"8980\",\"園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改\"],[\"8a40\",\"魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫\"],[\"8a80\",\"橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄\"],[\"8b40\",\"機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救\"],[\"8b80\",\"朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈\"],[\"8c40\",\"掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨\"],[\"8c80\",\"劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向\"],[\"8d40\",\"后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降\"],[\"8d80\",\"項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷\"],[\"8e40\",\"察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止\"],[\"8e80\",\"死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周\"],[\"8f40\",\"宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳\"],[\"8f80\",\"準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾\"],[\"9040\",\"拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨\"],[\"9080\",\"逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線\"],[\"9140\",\"繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻\"],[\"9180\",\"操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只\"],[\"9240\",\"叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄\"],[\"9280\",\"逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓\"],[\"9340\",\"邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬\"],[\"9380\",\"凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入\"],[\"9440\",\"如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅\"],[\"9480\",\"楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美\"],[\"9540\",\"鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷\"],[\"9580\",\"斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋\"],[\"9640\",\"法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆\"],[\"9680\",\"摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒\"],[\"9740\",\"諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲\"],[\"9780\",\"沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯\"],[\"9840\",\"蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕\"],[\"989f\",\"弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲\"],[\"9940\",\"僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭\"],[\"9980\",\"凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨\"],[\"9a40\",\"咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸\"],[\"9a80\",\"噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩\"],[\"9b40\",\"奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀\"],[\"9b80\",\"它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏\"],[\"9c40\",\"廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠\"],[\"9c80\",\"怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛\"],[\"9d40\",\"戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫\"],[\"9d80\",\"捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼\"],[\"9e40\",\"曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎\"],[\"9e80\",\"梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣\"],[\"9f40\",\"檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯\"],[\"9f80\",\"麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌\"],[\"e040\",\"漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝\"],[\"e080\",\"烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱\"],[\"e140\",\"瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿\"],[\"e180\",\"痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬\"],[\"e240\",\"磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰\"],[\"e280\",\"窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆\"],[\"e340\",\"紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷\"],[\"e380\",\"縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋\"],[\"e440\",\"隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤\"],[\"e480\",\"艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈\"],[\"e540\",\"蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬\"],[\"e580\",\"蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞\"],[\"e640\",\"襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧\"],[\"e680\",\"諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊\"],[\"e740\",\"蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜\"],[\"e780\",\"轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮\"],[\"e840\",\"錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙\"],[\"e880\",\"閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰\"],[\"e940\",\"顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃\"],[\"e980\",\"騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈\"],[\"ea40\",\"鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯\"],[\"ea80\",\"黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙\"],[\"ed40\",\"纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏\"],[\"ed80\",\"塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱\"],[\"ee40\",\"犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙\"],[\"ee80\",\"蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"],[\"eeef\",\"ⅰ\",9,\"￢￤＇＂\"],[\"f040\",\"\",62],[\"f080\",\"\",124],[\"f140\",\"\",62],[\"f180\",\"\",124],[\"f240\",\"\",62],[\"f280\",\"\",124],[\"f340\",\"\",62],[\"f380\",\"\",124],[\"f440\",\"\",62],[\"f480\",\"\",124],[\"f540\",\"\",62],[\"f580\",\"\",124],[\"f640\",\"\",62],[\"f680\",\"\",124],[\"f740\",\"\",62],[\"f780\",\"\",124],[\"f840\",\"\",62],[\"f880\",\"\",124],[\"f940\",\"\"],[\"fa40\",\"ⅰ\",9,\"Ⅰ\",9,\"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊\"],[\"fa80\",\"兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯\"],[\"fb40\",\"涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神\"],[\"fb80\",\"祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙\"],[\"fc40\",\"髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"]]");

/***/ }),
/* 191 */
/***/ (function(module) {

module.exports = JSON.parse("[[\"0\",\"\\u0000\",127],[\"8ea1\",\"｡\",62],[\"a1a1\",\"　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈\",9,\"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇\"],[\"a2a1\",\"◆□■△▲▽▼※〒→←↑↓〓\"],[\"a2ba\",\"∈∋⊆⊇⊂⊃∪∩\"],[\"a2ca\",\"∧∨￢⇒⇔∀∃\"],[\"a2dc\",\"∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬\"],[\"a2f2\",\"Å‰♯♭♪†‡¶\"],[\"a2fe\",\"◯\"],[\"a3b0\",\"０\",9],[\"a3c1\",\"Ａ\",25],[\"a3e1\",\"ａ\",25],[\"a4a1\",\"ぁ\",82],[\"a5a1\",\"ァ\",85],[\"a6a1\",\"Α\",16,\"Σ\",6],[\"a6c1\",\"α\",16,\"σ\",6],[\"a7a1\",\"А\",5,\"ЁЖ\",25],[\"a7d1\",\"а\",5,\"ёж\",25],[\"a8a1\",\"─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂\"],[\"ada1\",\"①\",19,\"Ⅰ\",9],[\"adc0\",\"㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡\"],[\"addf\",\"㍻〝〟№㏍℡㊤\",4,\"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪\"],[\"b0a1\",\"亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭\"],[\"b1a1\",\"院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応\"],[\"b2a1\",\"押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改\"],[\"b3a1\",\"魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱\"],[\"b4a1\",\"粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄\"],[\"b5a1\",\"機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京\"],[\"b6a1\",\"供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈\"],[\"b7a1\",\"掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲\"],[\"b8a1\",\"検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向\"],[\"b9a1\",\"后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込\"],[\"baa1\",\"此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷\"],[\"bba1\",\"察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時\"],[\"bca1\",\"次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周\"],[\"bda1\",\"宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償\"],[\"bea1\",\"勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾\"],[\"bfa1\",\"拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾\"],[\"c0a1\",\"澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線\"],[\"c1a1\",\"繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎\"],[\"c2a1\",\"臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只\"],[\"c3a1\",\"叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵\"],[\"c4a1\",\"帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓\"],[\"c5a1\",\"邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到\"],[\"c6a1\",\"董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入\"],[\"c7a1\",\"如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦\"],[\"c8a1\",\"函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美\"],[\"c9a1\",\"鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服\"],[\"caa1\",\"福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋\"],[\"cba1\",\"法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満\"],[\"cca1\",\"漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒\"],[\"cda1\",\"諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃\"],[\"cea1\",\"痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯\"],[\"cfa1\",\"蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕\"],[\"d0a1\",\"弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲\"],[\"d1a1\",\"僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨\"],[\"d2a1\",\"辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨\"],[\"d3a1\",\"咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉\"],[\"d4a1\",\"圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩\"],[\"d5a1\",\"奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓\"],[\"d6a1\",\"屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏\"],[\"d7a1\",\"廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚\"],[\"d8a1\",\"悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛\"],[\"d9a1\",\"戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼\"],[\"daa1\",\"據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼\"],[\"dba1\",\"曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍\"],[\"dca1\",\"棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣\"],[\"dda1\",\"檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾\"],[\"dea1\",\"沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌\"],[\"dfa1\",\"漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼\"],[\"e0a1\",\"燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱\"],[\"e1a1\",\"瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰\"],[\"e2a1\",\"癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬\"],[\"e3a1\",\"磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐\"],[\"e4a1\",\"筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆\"],[\"e5a1\",\"紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺\"],[\"e6a1\",\"罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋\"],[\"e7a1\",\"隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙\"],[\"e8a1\",\"茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈\"],[\"e9a1\",\"蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙\"],[\"eaa1\",\"蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞\"],[\"eba1\",\"襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫\"],[\"eca1\",\"譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊\"],[\"eda1\",\"蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸\"],[\"eea1\",\"遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮\"],[\"efa1\",\"錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞\"],[\"f0a1\",\"陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰\"],[\"f1a1\",\"顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷\"],[\"f2a1\",\"髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈\"],[\"f3a1\",\"鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠\"],[\"f4a1\",\"堯槇遙瑤凜熙\"],[\"f9a1\",\"纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德\"],[\"faa1\",\"忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱\"],[\"fba1\",\"犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚\"],[\"fca1\",\"釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"],[\"fcf1\",\"ⅰ\",9,\"￢￤＇＂\"],[\"8fa2af\",\"˘ˇ¸˙˝¯˛˚～΄΅\"],[\"8fa2c2\",\"¡¦¿\"],[\"8fa2eb\",\"ºª©®™¤№\"],[\"8fa6e1\",\"ΆΈΉΊΪ\"],[\"8fa6e7\",\"Ό\"],[\"8fa6e9\",\"ΎΫ\"],[\"8fa6ec\",\"Ώ\"],[\"8fa6f1\",\"άέήίϊΐόςύϋΰώ\"],[\"8fa7c2\",\"Ђ\",10,\"ЎЏ\"],[\"8fa7f2\",\"ђ\",10,\"ўџ\"],[\"8fa9a1\",\"ÆĐ\"],[\"8fa9a4\",\"Ħ\"],[\"8fa9a6\",\"Ĳ\"],[\"8fa9a8\",\"ŁĿ\"],[\"8fa9ab\",\"ŊØŒ\"],[\"8fa9af\",\"ŦÞ\"],[\"8fa9c1\",\"æđðħıĳĸłŀŉŋøœßŧþ\"],[\"8faaa1\",\"ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ\"],[\"8faaba\",\"ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ\"],[\"8faba1\",\"áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ\"],[\"8fabbd\",\"ġĥíìïîǐ\"],[\"8fabc5\",\"īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż\"],[\"8fb0a1\",\"丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄\"],[\"8fb1a1\",\"侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐\"],[\"8fb2a1\",\"傒傓傔傖傛傜傞\",4,\"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂\"],[\"8fb3a1\",\"凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋\"],[\"8fb4a1\",\"匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿\"],[\"8fb5a1\",\"咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒\"],[\"8fb6a1\",\"嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍\",5,\"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤\",4,\"囱囫园\"],[\"8fb7a1\",\"囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭\",4,\"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡\"],[\"8fb8a1\",\"堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭\"],[\"8fb9a1\",\"奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿\"],[\"8fbaa1\",\"嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖\",4,\"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩\"],[\"8fbba1\",\"屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤\"],[\"8fbca1\",\"巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪\",4,\"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧\"],[\"8fbda1\",\"彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐\",4,\"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷\"],[\"8fbea1\",\"悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐\",4,\"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥\"],[\"8fbfa1\",\"懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵\"],[\"8fc0a1\",\"捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿\"],[\"8fc1a1\",\"擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝\"],[\"8fc2a1\",\"昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝\"],[\"8fc3a1\",\"杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮\",4,\"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏\"],[\"8fc4a1\",\"棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲\"],[\"8fc5a1\",\"樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽\"],[\"8fc6a1\",\"歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖\"],[\"8fc7a1\",\"泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞\"],[\"8fc8a1\",\"湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊\"],[\"8fc9a1\",\"濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔\",4,\"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃\",4,\"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠\"],[\"8fcaa1\",\"煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻\"],[\"8fcba1\",\"狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽\"],[\"8fcca1\",\"珿琀琁琄琇琊琑琚琛琤琦琨\",9,\"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆\"],[\"8fcda1\",\"甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹\",5,\"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹\"],[\"8fcea1\",\"瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢\",6,\"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢\"],[\"8fcfa1\",\"睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳\"],[\"8fd0a1\",\"碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞\"],[\"8fd1a1\",\"秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰\"],[\"8fd2a1\",\"笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙\",5],[\"8fd3a1\",\"籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝\"],[\"8fd4a1\",\"綞綦綧綪綳綶綷綹緂\",4,\"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭\"],[\"8fd5a1\",\"罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮\"],[\"8fd6a1\",\"胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆\"],[\"8fd7a1\",\"艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸\"],[\"8fd8a1\",\"荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓\"],[\"8fd9a1\",\"蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏\",4,\"蕖蕙蕜\",6,\"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼\"],[\"8fdaa1\",\"藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠\",4,\"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣\"],[\"8fdba1\",\"蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃\",6,\"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵\"],[\"8fdca1\",\"蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊\",4,\"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺\"],[\"8fdda1\",\"襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔\",4,\"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳\"],[\"8fdea1\",\"誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂\",4,\"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆\"],[\"8fdfa1\",\"貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢\"],[\"8fe0a1\",\"踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁\"],[\"8fe1a1\",\"轃轇轏轑\",4,\"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃\"],[\"8fe2a1\",\"郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿\"],[\"8fe3a1\",\"釂釃釅釓釔釗釙釚釞釤釥釩釪釬\",5,\"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵\",4,\"鉻鉼鉽鉿銈銉銊銍銎銒銗\"],[\"8fe4a1\",\"銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿\",4,\"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶\"],[\"8fe5a1\",\"鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉\",4,\"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹\"],[\"8fe6a1\",\"镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂\"],[\"8fe7a1\",\"霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦\"],[\"8fe8a1\",\"頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱\",4,\"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵\"],[\"8fe9a1\",\"馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿\",4],[\"8feaa1\",\"鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪\",4,\"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸\"],[\"8feba1\",\"鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦\",4,\"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻\"],[\"8feca1\",\"鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵\"],[\"8feda1\",\"黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃\",4,\"齓齕齖齗齘齚齝齞齨齩齭\",4,\"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥\"]]");

/***/ }),
/* 192 */
/***/ (function(module) {

module.exports = JSON.parse("{\"uChars\":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],\"gbChars\":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}");

/***/ }),
/* 193 */
/***/ (function(module) {

module.exports = JSON.parse("[[\"0\",\"\\u0000\",127],[\"8141\",\"갂갃갅갆갋\",4,\"갘갞갟갡갢갣갥\",6,\"갮갲갳갴\"],[\"8161\",\"갵갶갷갺갻갽갾갿걁\",9,\"걌걎\",5,\"걕\"],[\"8181\",\"걖걗걙걚걛걝\",18,\"걲걳걵걶걹걻\",4,\"겂겇겈겍겎겏겑겒겓겕\",6,\"겞겢\",5,\"겫겭겮겱\",6,\"겺겾겿곀곂곃곅곆곇곉곊곋곍\",7,\"곖곘\",7,\"곢곣곥곦곩곫곭곮곲곴곷\",4,\"곾곿괁괂괃괅괇\",4,\"괎괐괒괓\"],[\"8241\",\"괔괕괖괗괙괚괛괝괞괟괡\",7,\"괪괫괮\",5],[\"8261\",\"괶괷괹괺괻괽\",6,\"굆굈굊\",5,\"굑굒굓굕굖굗\"],[\"8281\",\"굙\",7,\"굢굤\",7,\"굮굯굱굲굷굸굹굺굾궀궃\",4,\"궊궋궍궎궏궑\",10,\"궞\",5,\"궥\",17,\"궸\",7,\"귂귃귅귆귇귉\",6,\"귒귔\",7,\"귝귞귟귡귢귣귥\",18],[\"8341\",\"귺귻귽귾긂\",5,\"긊긌긎\",5,\"긕\",7],[\"8361\",\"긝\",18,\"긲긳긵긶긹긻긼\"],[\"8381\",\"긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗\",4,\"깞깢깣깤깦깧깪깫깭깮깯깱\",6,\"깺깾\",5,\"꺆\",5,\"꺍\",46,\"꺿껁껂껃껅\",6,\"껎껒\",5,\"껚껛껝\",8],[\"8441\",\"껦껧껩껪껬껮\",5,\"껵껶껷껹껺껻껽\",8],[\"8461\",\"꼆꼉꼊꼋꼌꼎꼏꼑\",18],[\"8481\",\"꼤\",7,\"꼮꼯꼱꼳꼵\",6,\"꼾꽀꽄꽅꽆꽇꽊\",5,\"꽑\",10,\"꽞\",5,\"꽦\",18,\"꽺\",5,\"꾁꾂꾃꾅꾆꾇꾉\",6,\"꾒꾓꾔꾖\",5,\"꾝\",26,\"꾺꾻꾽꾾\"],[\"8541\",\"꾿꿁\",5,\"꿊꿌꿏\",4,\"꿕\",6,\"꿝\",4],[\"8561\",\"꿢\",5,\"꿪\",5,\"꿲꿳꿵꿶꿷꿹\",6,\"뀂뀃\"],[\"8581\",\"뀅\",6,\"뀍뀎뀏뀑뀒뀓뀕\",6,\"뀞\",9,\"뀩\",26,\"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞\",29,\"끾끿낁낂낃낅\",6,\"낎낐낒\",5,\"낛낝낞낣낤\"],[\"8641\",\"낥낦낧낪낰낲낶낷낹낺낻낽\",6,\"냆냊\",5,\"냒\"],[\"8661\",\"냓냕냖냗냙\",6,\"냡냢냣냤냦\",10],[\"8681\",\"냱\",22,\"넊넍넎넏넑넔넕넖넗넚넞\",4,\"넦넧넩넪넫넭\",6,\"넶넺\",5,\"녂녃녅녆녇녉\",6,\"녒녓녖녗녙녚녛녝녞녟녡\",22,\"녺녻녽녾녿놁놃\",4,\"놊놌놎놏놐놑놕놖놗놙놚놛놝\"],[\"8741\",\"놞\",9,\"놩\",15],[\"8761\",\"놹\",18,\"뇍뇎뇏뇑뇒뇓뇕\"],[\"8781\",\"뇖\",5,\"뇞뇠\",7,\"뇪뇫뇭뇮뇯뇱\",7,\"뇺뇼뇾\",5,\"눆눇눉눊눍\",6,\"눖눘눚\",5,\"눡\",18,\"눵\",6,\"눽\",26,\"뉙뉚뉛뉝뉞뉟뉡\",6,\"뉪\",4],[\"8841\",\"뉯\",4,\"뉶\",5,\"뉽\",6,\"늆늇늈늊\",4],[\"8861\",\"늏늒늓늕늖늗늛\",4,\"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷\"],[\"8881\",\"늸\",15,\"닊닋닍닎닏닑닓\",4,\"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉\",6,\"댒댖\",5,\"댝\",54,\"덗덙덚덝덠덡덢덣\"],[\"8941\",\"덦덨덪덬덭덯덲덳덵덶덷덹\",6,\"뎂뎆\",5,\"뎍\"],[\"8961\",\"뎎뎏뎑뎒뎓뎕\",10,\"뎢\",5,\"뎩뎪뎫뎭\"],[\"8981\",\"뎮\",21,\"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩\",18,\"돽\",18,\"됑\",6,\"됙됚됛됝됞됟됡\",6,\"됪됬\",7,\"됵\",15],[\"8a41\",\"둅\",10,\"둒둓둕둖둗둙\",6,\"둢둤둦\"],[\"8a61\",\"둧\",4,\"둭\",18,\"뒁뒂\"],[\"8a81\",\"뒃\",4,\"뒉\",19,\"뒞\",5,\"뒥뒦뒧뒩뒪뒫뒭\",7,\"뒶뒸뒺\",5,\"듁듂듃듅듆듇듉\",6,\"듑듒듓듔듖\",5,\"듞듟듡듢듥듧\",4,\"듮듰듲\",5,\"듹\",26,\"딖딗딙딚딝\"],[\"8b41\",\"딞\",5,\"딦딫\",4,\"딲딳딵딶딷딹\",6,\"땂땆\"],[\"8b61\",\"땇땈땉땊땎땏땑땒땓땕\",6,\"땞땢\",8],[\"8b81\",\"땫\",52,\"떢떣떥떦떧떩떬떭떮떯떲떶\",4,\"떾떿뗁뗂뗃뗅\",6,\"뗎뗒\",5,\"뗙\",18,\"뗭\",18],[\"8c41\",\"똀\",15,\"똒똓똕똖똗똙\",4],[\"8c61\",\"똞\",6,\"똦\",5,\"똭\",6,\"똵\",5],[\"8c81\",\"똻\",12,\"뙉\",26,\"뙥뙦뙧뙩\",50,\"뚞뚟뚡뚢뚣뚥\",5,\"뚭뚮뚯뚰뚲\",16],[\"8d41\",\"뛃\",16,\"뛕\",8],[\"8d61\",\"뛞\",17,\"뛱뛲뛳뛵뛶뛷뛹뛺\"],[\"8d81\",\"뛻\",4,\"뜂뜃뜄뜆\",33,\"뜪뜫뜭뜮뜱\",6,\"뜺뜼\",7,\"띅띆띇띉띊띋띍\",6,\"띖\",9,\"띡띢띣띥띦띧띩\",6,\"띲띴띶\",5,\"띾띿랁랂랃랅\",6,\"랎랓랔랕랚랛랝랞\"],[\"8e41\",\"랟랡\",6,\"랪랮\",5,\"랶랷랹\",8],[\"8e61\",\"럂\",4,\"럈럊\",19],[\"8e81\",\"럞\",13,\"럮럯럱럲럳럵\",6,\"럾렂\",4,\"렊렋렍렎렏렑\",6,\"렚렜렞\",5,\"렦렧렩렪렫렭\",6,\"렶렺\",5,\"롁롂롃롅\",11,\"롒롔\",7,\"롞롟롡롢롣롥\",6,\"롮롰롲\",5,\"롹롺롻롽\",7],[\"8f41\",\"뢅\",7,\"뢎\",17],[\"8f61\",\"뢠\",7,\"뢩\",6,\"뢱뢲뢳뢵뢶뢷뢹\",4],[\"8f81\",\"뢾뢿룂룄룆\",5,\"룍룎룏룑룒룓룕\",7,\"룞룠룢\",5,\"룪룫룭룮룯룱\",6,\"룺룼룾\",5,\"뤅\",18,\"뤙\",6,\"뤡\",26,\"뤾뤿륁륂륃륅\",6,\"륍륎륐륒\",5],[\"9041\",\"륚륛륝륞륟륡\",6,\"륪륬륮\",5,\"륶륷륹륺륻륽\"],[\"9061\",\"륾\",5,\"릆릈릋릌릏\",15],[\"9081\",\"릟\",12,\"릮릯릱릲릳릵\",6,\"릾맀맂\",5,\"맊맋맍맓\",4,\"맚맜맟맠맢맦맧맩맪맫맭\",6,\"맶맻\",4,\"먂\",5,\"먉\",11,\"먖\",33,\"먺먻먽먾먿멁멃멄멅멆\"],[\"9141\",\"멇멊멌멏멐멑멒멖멗멙멚멛멝\",6,\"멦멪\",5],[\"9161\",\"멲멳멵멶멷멹\",9,\"몆몈몉몊몋몍\",5],[\"9181\",\"몓\",20,\"몪몭몮몯몱몳\",4,\"몺몼몾\",5,\"뫅뫆뫇뫉\",14,\"뫚\",33,\"뫽뫾뫿묁묂묃묅\",7,\"묎묐묒\",5,\"묙묚묛묝묞묟묡\",6],[\"9241\",\"묨묪묬\",7,\"묷묹묺묿\",4,\"뭆뭈뭊뭋뭌뭎뭑뭒\"],[\"9261\",\"뭓뭕뭖뭗뭙\",7,\"뭢뭤\",7,\"뭭\",4],[\"9281\",\"뭲\",21,\"뮉뮊뮋뮍뮎뮏뮑\",18,\"뮥뮦뮧뮩뮪뮫뮭\",6,\"뮵뮶뮸\",7,\"믁믂믃믅믆믇믉\",6,\"믑믒믔\",35,\"믺믻믽믾밁\"],[\"9341\",\"밃\",4,\"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵\"],[\"9361\",\"밶밷밹\",6,\"뱂뱆뱇뱈뱊뱋뱎뱏뱑\",8],[\"9381\",\"뱚뱛뱜뱞\",37,\"벆벇벉벊벍벏\",4,\"벖벘벛\",4,\"벢벣벥벦벩\",6,\"벲벶\",5,\"벾벿볁볂볃볅\",7,\"볎볒볓볔볖볗볙볚볛볝\",22,\"볷볹볺볻볽\"],[\"9441\",\"볾\",5,\"봆봈봊\",5,\"봑봒봓봕\",8],[\"9461\",\"봞\",5,\"봥\",6,\"봭\",12],[\"9481\",\"봺\",5,\"뵁\",6,\"뵊뵋뵍뵎뵏뵑\",6,\"뵚\",9,\"뵥뵦뵧뵩\",22,\"붂붃붅붆붋\",4,\"붒붔붖붗붘붛붝\",6,\"붥\",10,\"붱\",6,\"붹\",24],[\"9541\",\"뷒뷓뷖뷗뷙뷚뷛뷝\",11,\"뷪\",5,\"뷱\"],[\"9561\",\"뷲뷳뷵뷶뷷뷹\",6,\"븁븂븄븆\",5,\"븎븏븑븒븓\"],[\"9581\",\"븕\",6,\"븞븠\",35,\"빆빇빉빊빋빍빏\",4,\"빖빘빜빝빞빟빢빣빥빦빧빩빫\",4,\"빲빶\",4,\"빾빿뺁뺂뺃뺅\",6,\"뺎뺒\",5,\"뺚\",13,\"뺩\",14],[\"9641\",\"뺸\",23,\"뻒뻓\"],[\"9661\",\"뻕뻖뻙\",6,\"뻡뻢뻦\",5,\"뻭\",8],[\"9681\",\"뻶\",10,\"뼂\",5,\"뼊\",13,\"뼚뼞\",33,\"뽂뽃뽅뽆뽇뽉\",6,\"뽒뽓뽔뽖\",44],[\"9741\",\"뾃\",16,\"뾕\",8],[\"9761\",\"뾞\",17,\"뾱\",7],[\"9781\",\"뾹\",11,\"뿆\",5,\"뿎뿏뿑뿒뿓뿕\",6,\"뿝뿞뿠뿢\",89,\"쀽쀾쀿\"],[\"9841\",\"쁀\",16,\"쁒\",5,\"쁙쁚쁛\"],[\"9861\",\"쁝쁞쁟쁡\",6,\"쁪\",15],[\"9881\",\"쁺\",21,\"삒삓삕삖삗삙\",6,\"삢삤삦\",5,\"삮삱삲삷\",4,\"삾샂샃샄샆샇샊샋샍샎샏샑\",6,\"샚샞\",5,\"샦샧샩샪샫샭\",6,\"샶샸샺\",5,\"섁섂섃섅섆섇섉\",6,\"섑섒섓섔섖\",5,\"섡섢섥섨섩섪섫섮\"],[\"9941\",\"섲섳섴섵섷섺섻섽섾섿셁\",6,\"셊셎\",5,\"셖셗\"],[\"9961\",\"셙셚셛셝\",6,\"셦셪\",5,\"셱셲셳셵셶셷셹셺셻\"],[\"9981\",\"셼\",8,\"솆\",5,\"솏솑솒솓솕솗\",4,\"솞솠솢솣솤솦솧솪솫솭솮솯솱\",11,\"솾\",5,\"쇅쇆쇇쇉쇊쇋쇍\",6,\"쇕쇖쇙\",6,\"쇡쇢쇣쇥쇦쇧쇩\",6,\"쇲쇴\",7,\"쇾쇿숁숂숃숅\",6,\"숎숐숒\",5,\"숚숛숝숞숡숢숣\"],[\"9a41\",\"숤숥숦숧숪숬숮숰숳숵\",16],[\"9a61\",\"쉆쉇쉉\",6,\"쉒쉓쉕쉖쉗쉙\",6,\"쉡쉢쉣쉤쉦\"],[\"9a81\",\"쉧\",4,\"쉮쉯쉱쉲쉳쉵\",6,\"쉾슀슂\",5,\"슊\",5,\"슑\",6,\"슙슚슜슞\",5,\"슦슧슩슪슫슮\",5,\"슶슸슺\",33,\"싞싟싡싢싥\",5,\"싮싰싲싳싴싵싷싺싽싾싿쌁\",6,\"쌊쌋쌎쌏\"],[\"9b41\",\"쌐쌑쌒쌖쌗쌙쌚쌛쌝\",6,\"쌦쌧쌪\",8],[\"9b61\",\"쌳\",17,\"썆\",7],[\"9b81\",\"썎\",25,\"썪썫썭썮썯썱썳\",4,\"썺썻썾\",5,\"쎅쎆쎇쎉쎊쎋쎍\",50,\"쏁\",22,\"쏚\"],[\"9c41\",\"쏛쏝쏞쏡쏣\",4,\"쏪쏫쏬쏮\",5,\"쏶쏷쏹\",5],[\"9c61\",\"쏿\",8,\"쐉\",6,\"쐑\",9],[\"9c81\",\"쐛\",8,\"쐥\",6,\"쐭쐮쐯쐱쐲쐳쐵\",6,\"쐾\",9,\"쑉\",26,\"쑦쑧쑩쑪쑫쑭\",6,\"쑶쑷쑸쑺\",5,\"쒁\",18,\"쒕\",6,\"쒝\",12],[\"9d41\",\"쒪\",13,\"쒹쒺쒻쒽\",8],[\"9d61\",\"쓆\",25],[\"9d81\",\"쓠\",8,\"쓪\",5,\"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂\",9,\"씍씎씏씑씒씓씕\",6,\"씝\",10,\"씪씫씭씮씯씱\",6,\"씺씼씾\",5,\"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩\",6,\"앲앶\",5,\"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔\"],[\"9e41\",\"얖얙얚얛얝얞얟얡\",7,\"얪\",9,\"얶\"],[\"9e61\",\"얷얺얿\",4,\"엋엍엏엒엓엕엖엗엙\",6,\"엢엤엦엧\"],[\"9e81\",\"엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑\",6,\"옚옝\",6,\"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉\",6,\"왒왖\",5,\"왞왟왡\",10,\"왭왮왰왲\",5,\"왺왻왽왾왿욁\",6,\"욊욌욎\",5,\"욖욗욙욚욛욝\",6,\"욦\"],[\"9f41\",\"욨욪\",5,\"욲욳욵욶욷욻\",4,\"웂웄웆\",5,\"웎\"],[\"9f61\",\"웏웑웒웓웕\",6,\"웞웟웢\",5,\"웪웫웭웮웯웱웲\"],[\"9f81\",\"웳\",4,\"웺웻웼웾\",5,\"윆윇윉윊윋윍\",6,\"윖윘윚\",5,\"윢윣윥윦윧윩\",6,\"윲윴윶윸윹윺윻윾윿읁읂읃읅\",4,\"읋읎읐읙읚읛읝읞읟읡\",6,\"읩읪읬\",7,\"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛\",4,\"잢잧\",4,\"잮잯잱잲잳잵잶잷\"],[\"a041\",\"잸잹잺잻잾쟂\",5,\"쟊쟋쟍쟏쟑\",6,\"쟙쟚쟛쟜\"],[\"a061\",\"쟞\",5,\"쟥쟦쟧쟩쟪쟫쟭\",13],[\"a081\",\"쟻\",4,\"젂젃젅젆젇젉젋\",4,\"젒젔젗\",4,\"젞젟젡젢젣젥\",6,\"젮젰젲\",5,\"젹젺젻젽젾젿졁\",6,\"졊졋졎\",5,\"졕\",26,\"졲졳졵졶졷졹졻\",4,\"좂좄좈좉좊좎\",5,\"좕\",7,\"좞좠좢좣좤\"],[\"a141\",\"좥좦좧좩\",18,\"좾좿죀죁\"],[\"a161\",\"죂죃죅죆죇죉죊죋죍\",6,\"죖죘죚\",5,\"죢죣죥\"],[\"a181\",\"죦\",14,\"죶\",5,\"죾죿줁줂줃줇\",4,\"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈\",9,\"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢\"],[\"a241\",\"줐줒\",5,\"줙\",18],[\"a261\",\"줭\",6,\"줵\",18],[\"a281\",\"쥈\",7,\"쥒쥓쥕쥖쥗쥙\",6,\"쥢쥤\",7,\"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®\"],[\"a341\",\"쥱쥲쥳쥵\",6,\"쥽\",10,\"즊즋즍즎즏\"],[\"a361\",\"즑\",6,\"즚즜즞\",16],[\"a381\",\"즯\",16,\"짂짃짅짆짉짋\",4,\"짒짔짗짘짛！\",58,\"￦］\",32,\"￣\"],[\"a441\",\"짞짟짡짣짥짦짨짩짪짫짮짲\",5,\"짺짻짽짾짿쨁쨂쨃쨄\"],[\"a461\",\"쨅쨆쨇쨊쨎\",5,\"쨕쨖쨗쨙\",12],[\"a481\",\"쨦쨧쨨쨪\",28,\"ㄱ\",93],[\"a541\",\"쩇\",4,\"쩎쩏쩑쩒쩓쩕\",6,\"쩞쩢\",5,\"쩩쩪\"],[\"a561\",\"쩫\",17,\"쩾\",5,\"쪅쪆\"],[\"a581\",\"쪇\",16,\"쪙\",14,\"ⅰ\",9],[\"a5b0\",\"Ⅰ\",9],[\"a5c1\",\"Α\",16,\"Σ\",6],[\"a5e1\",\"α\",16,\"σ\",6],[\"a641\",\"쪨\",19,\"쪾쪿쫁쫂쫃쫅\"],[\"a661\",\"쫆\",5,\"쫎쫐쫒쫔쫕쫖쫗쫚\",5,\"쫡\",6],[\"a681\",\"쫨쫩쫪쫫쫭\",6,\"쫵\",18,\"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃\",7],[\"a741\",\"쬋\",4,\"쬑쬒쬓쬕쬖쬗쬙\",6,\"쬢\",7],[\"a761\",\"쬪\",22,\"쭂쭃쭄\"],[\"a781\",\"쭅쭆쭇쭊쭋쭍쭎쭏쭑\",6,\"쭚쭛쭜쭞\",5,\"쭥\",7,\"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙\",9,\"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰\",9,\"㎀\",4,\"㎺\",5,\"㎐\",4,\"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆\"],[\"a841\",\"쭭\",10,\"쭺\",14],[\"a861\",\"쮉\",18,\"쮝\",6],[\"a881\",\"쮤\",19,\"쮹\",11,\"ÆÐªĦ\"],[\"a8a6\",\"Ĳ\"],[\"a8a8\",\"ĿŁØŒºÞŦŊ\"],[\"a8b1\",\"㉠\",27,\"ⓐ\",25,\"①\",14,\"½⅓⅔¼¾⅛⅜⅝⅞\"],[\"a941\",\"쯅\",14,\"쯕\",10],[\"a961\",\"쯠쯡쯢쯣쯥쯦쯨쯪\",18],[\"a981\",\"쯽\",14,\"찎찏찑찒찓찕\",6,\"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀\",27,\"⒜\",25,\"⑴\",14,\"¹²³⁴ⁿ₁₂₃₄\"],[\"aa41\",\"찥찦찪찫찭찯찱\",6,\"찺찿\",4,\"챆챇챉챊챋챍챎\"],[\"aa61\",\"챏\",4,\"챖챚\",5,\"챡챢챣챥챧챩\",6,\"챱챲\"],[\"aa81\",\"챳챴챶\",29,\"ぁ\",82],[\"ab41\",\"첔첕첖첗첚첛첝첞첟첡\",6,\"첪첮\",5,\"첶첷첹\"],[\"ab61\",\"첺첻첽\",6,\"쳆쳈쳊\",5,\"쳑쳒쳓쳕\",5],[\"ab81\",\"쳛\",8,\"쳥\",6,\"쳭쳮쳯쳱\",12,\"ァ\",85],[\"ac41\",\"쳾쳿촀촂\",5,\"촊촋촍촎촏촑\",6,\"촚촜촞촟촠\"],[\"ac61\",\"촡촢촣촥촦촧촩촪촫촭\",11,\"촺\",4],[\"ac81\",\"촿\",28,\"쵝쵞쵟А\",5,\"ЁЖ\",25],[\"acd1\",\"а\",5,\"ёж\",25],[\"ad41\",\"쵡쵢쵣쵥\",6,\"쵮쵰쵲\",5,\"쵹\",7],[\"ad61\",\"춁\",6,\"춉\",10,\"춖춗춙춚춛춝춞춟\"],[\"ad81\",\"춠춡춢춣춦춨춪\",5,\"춱\",18,\"췅\"],[\"ae41\",\"췆\",5,\"췍췎췏췑\",16],[\"ae61\",\"췢\",5,\"췩췪췫췭췮췯췱\",6,\"췺췼췾\",4],[\"ae81\",\"츃츅츆츇츉츊츋츍\",6,\"츕츖츗츘츚\",5,\"츢츣츥츦츧츩츪츫\"],[\"af41\",\"츬츭츮츯츲츴츶\",19],[\"af61\",\"칊\",13,\"칚칛칝칞칢\",5,\"칪칬\"],[\"af81\",\"칮\",5,\"칶칷칹칺칻칽\",6,\"캆캈캊\",5,\"캒캓캕캖캗캙\"],[\"b041\",\"캚\",5,\"캢캦\",5,\"캮\",12],[\"b061\",\"캻\",5,\"컂\",19],[\"b081\",\"컖\",13,\"컦컧컩컪컭\",6,\"컶컺\",5,\"가각간갇갈갉갊감\",7,\"같\",4,\"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆\"],[\"b141\",\"켂켃켅켆켇켉\",6,\"켒켔켖\",5,\"켝켞켟켡켢켣\"],[\"b161\",\"켥\",6,\"켮켲\",5,\"켹\",11],[\"b181\",\"콅\",14,\"콖콗콙콚콛콝\",6,\"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸\"],[\"b241\",\"콭콮콯콲콳콵콶콷콹\",6,\"쾁쾂쾃쾄쾆\",5,\"쾍\"],[\"b261\",\"쾎\",18,\"쾢\",5,\"쾩\"],[\"b281\",\"쾪\",5,\"쾱\",18,\"쿅\",6,\"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙\"],[\"b341\",\"쿌\",19,\"쿢쿣쿥쿦쿧쿩\"],[\"b361\",\"쿪\",5,\"쿲쿴쿶\",5,\"쿽쿾쿿퀁퀂퀃퀅\",5],[\"b381\",\"퀋\",5,\"퀒\",5,\"퀙\",19,\"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫\",4,\"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝\"],[\"b441\",\"퀮\",5,\"퀶퀷퀹퀺퀻퀽\",6,\"큆큈큊\",5],[\"b461\",\"큑큒큓큕큖큗큙\",6,\"큡\",10,\"큮큯\"],[\"b481\",\"큱큲큳큵\",6,\"큾큿킀킂\",18,\"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫\",4,\"닳담답닷\",4,\"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥\"],[\"b541\",\"킕\",14,\"킦킧킩킪킫킭\",5],[\"b561\",\"킳킶킸킺\",5,\"탂탃탅탆탇탊\",5,\"탒탖\",4],[\"b581\",\"탛탞탟탡탢탣탥\",6,\"탮탲\",5,\"탹\",11,\"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸\"],[\"b641\",\"턅\",7,\"턎\",17],[\"b661\",\"턠\",15,\"턲턳턵턶턷턹턻턼턽턾\"],[\"b681\",\"턿텂텆\",5,\"텎텏텑텒텓텕\",6,\"텞텠텢\",5,\"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗\"],[\"b741\",\"텮\",13,\"텽\",6,\"톅톆톇톉톊\"],[\"b761\",\"톋\",20,\"톢톣톥톦톧\"],[\"b781\",\"톩\",6,\"톲톴톶톷톸톹톻톽톾톿퇁\",14,\"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩\"],[\"b841\",\"퇐\",7,\"퇙\",17],[\"b861\",\"퇫\",8,\"퇵퇶퇷퇹\",13],[\"b881\",\"툈툊\",5,\"툑\",24,\"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많\",4,\"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼\"],[\"b941\",\"툪툫툮툯툱툲툳툵\",6,\"툾퉀퉂\",5,\"퉉퉊퉋퉌\"],[\"b961\",\"퉍\",14,\"퉝\",6,\"퉥퉦퉧퉨\"],[\"b981\",\"퉩\",22,\"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바\",4,\"받\",4,\"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗\"],[\"ba41\",\"튍튎튏튒튓튔튖\",5,\"튝튞튟튡튢튣튥\",6,\"튭\"],[\"ba61\",\"튮튯튰튲\",5,\"튺튻튽튾틁틃\",4,\"틊틌\",5],[\"ba81\",\"틒틓틕틖틗틙틚틛틝\",6,\"틦\",9,\"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤\"],[\"bb41\",\"틻\",4,\"팂팄팆\",5,\"팏팑팒팓팕팗\",4,\"팞팢팣\"],[\"bb61\",\"팤팦팧팪팫팭팮팯팱\",6,\"팺팾\",5,\"퍆퍇퍈퍉\"],[\"bb81\",\"퍊\",31,\"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤\"],[\"bc41\",\"퍪\",17,\"퍾퍿펁펂펃펅펆펇\"],[\"bc61\",\"펈펉펊펋펎펒\",5,\"펚펛펝펞펟펡\",6,\"펪펬펮\"],[\"bc81\",\"펯\",4,\"펵펶펷펹펺펻펽\",6,\"폆폇폊\",5,\"폑\",5,\"샥샨샬샴샵샷샹섀섄섈섐섕서\",4,\"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭\"],[\"bd41\",\"폗폙\",7,\"폢폤\",7,\"폮폯폱폲폳폵폶폷\"],[\"bd61\",\"폸폹폺폻폾퐀퐂\",5,\"퐉\",13],[\"bd81\",\"퐗\",5,\"퐞\",25,\"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰\"],[\"be41\",\"퐸\",7,\"푁푂푃푅\",14],[\"be61\",\"푔\",7,\"푝푞푟푡푢푣푥\",7,\"푮푰푱푲\"],[\"be81\",\"푳\",4,\"푺푻푽푾풁풃\",4,\"풊풌풎\",5,\"풕\",8,\"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄\",6,\"엌엎\"],[\"bf41\",\"풞\",10,\"풪\",14],[\"bf61\",\"풹\",18,\"퓍퓎퓏퓑퓒퓓퓕\"],[\"bf81\",\"퓖\",5,\"퓝퓞퓠\",7,\"퓩퓪퓫퓭퓮퓯퓱\",6,\"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염\",5,\"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨\"],[\"c041\",\"퓾\",5,\"픅픆픇픉픊픋픍\",6,\"픖픘\",5],[\"c061\",\"픞\",25],[\"c081\",\"픸픹픺픻픾픿핁핂핃핅\",6,\"핎핐핒\",5,\"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응\",7,\"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊\"],[\"c141\",\"핤핦핧핪핬핮\",5,\"핶핷핹핺핻핽\",6,\"햆햊햋\"],[\"c161\",\"햌햍햎햏햑\",19,\"햦햧\"],[\"c181\",\"햨\",31,\"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓\"],[\"c241\",\"헊헋헍헎헏헑헓\",4,\"헚헜헞\",5,\"헦헧헩헪헫헭헮\"],[\"c261\",\"헯\",4,\"헶헸헺\",5,\"혂혃혅혆혇혉\",6,\"혒\"],[\"c281\",\"혖\",5,\"혝혞혟혡혢혣혥\",7,\"혮\",9,\"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻\"],[\"c341\",\"혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝\",4],[\"c361\",\"홢\",4,\"홨홪\",5,\"홲홳홵\",11],[\"c381\",\"횁횂횄횆\",5,\"횎횏횑횒횓횕\",7,\"횞횠횢\",5,\"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층\"],[\"c441\",\"횫횭횮횯횱\",7,\"횺횼\",7,\"훆훇훉훊훋\"],[\"c461\",\"훍훎훏훐훒훓훕훖훘훚\",5,\"훡훢훣훥훦훧훩\",4],[\"c481\",\"훮훯훱훲훳훴훶\",5,\"훾훿휁휂휃휅\",11,\"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼\"],[\"c541\",\"휕휖휗휚휛휝휞휟휡\",6,\"휪휬휮\",5,\"휶휷휹\"],[\"c561\",\"휺휻휽\",6,\"흅흆흈흊\",5,\"흒흓흕흚\",4],[\"c581\",\"흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵\",6,\"흾흿힀힂\",5,\"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜\"],[\"c641\",\"힍힎힏힑\",6,\"힚힜힞\",5],[\"c6a1\",\"퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁\"],[\"c7a1\",\"퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠\"],[\"c8a1\",\"혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝\"],[\"caa1\",\"伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕\"],[\"cba1\",\"匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢\"],[\"cca1\",\"瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械\"],[\"cda1\",\"棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜\"],[\"cea1\",\"科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾\"],[\"cfa1\",\"區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴\"],[\"d0a1\",\"鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣\"],[\"d1a1\",\"朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩\",5,\"那樂\",4,\"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉\"],[\"d2a1\",\"納臘蠟衲囊娘廊\",4,\"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧\",5,\"駑魯\",10,\"濃籠聾膿農惱牢磊腦賂雷尿壘\",7,\"嫩訥杻紐勒\",5,\"能菱陵尼泥匿溺多茶\"],[\"d3a1\",\"丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃\"],[\"d4a1\",\"棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅\"],[\"d5a1\",\"蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣\"],[\"d6a1\",\"煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼\"],[\"d7a1\",\"遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬\"],[\"d8a1\",\"立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅\"],[\"d9a1\",\"蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文\"],[\"daa1\",\"汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑\"],[\"dba1\",\"發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖\"],[\"dca1\",\"碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦\"],[\"dda1\",\"孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥\"],[\"dea1\",\"脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索\"],[\"dfa1\",\"傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署\"],[\"e0a1\",\"胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬\"],[\"e1a1\",\"聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁\"],[\"e2a1\",\"戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧\"],[\"e3a1\",\"嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁\"],[\"e4a1\",\"沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額\"],[\"e5a1\",\"櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬\"],[\"e6a1\",\"旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒\"],[\"e7a1\",\"簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳\"],[\"e8a1\",\"烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療\"],[\"e9a1\",\"窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓\"],[\"eaa1\",\"運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜\"],[\"eba1\",\"濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼\"],[\"eca1\",\"議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄\"],[\"eda1\",\"立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長\"],[\"eea1\",\"障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱\"],[\"efa1\",\"煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖\"],[\"f0a1\",\"靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫\"],[\"f1a1\",\"踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只\"],[\"f2a1\",\"咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯\"],[\"f3a1\",\"鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策\"],[\"f4a1\",\"責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢\"],[\"f5a1\",\"椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃\"],[\"f6a1\",\"贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託\"],[\"f7a1\",\"鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑\"],[\"f8a1\",\"阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃\"],[\"f9a1\",\"品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航\"],[\"faa1\",\"行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型\"],[\"fba1\",\"形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵\"],[\"fca1\",\"禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆\"],[\"fda1\",\"爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰\"]]");

/***/ }),
/* 194 */
/***/ (function(module) {

module.exports = JSON.parse("[[\"8740\",\"䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻\"],[\"8767\",\"綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬\"],[\"87a1\",\"𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋\"],[\"8840\",\"㇀\",4,\"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ\"],[\"88a1\",\"ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛\"],[\"8940\",\"𪎩𡅅\"],[\"8943\",\"攊\"],[\"8946\",\"丽滝鵎釟\"],[\"894c\",\"𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮\"],[\"89a1\",\"琑糼緍楆竉刧\"],[\"89ab\",\"醌碸酞肼\"],[\"89b0\",\"贋胶𠧧\"],[\"89b5\",\"肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁\"],[\"89c1\",\"溚舾甙\"],[\"89c5\",\"䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅\"],[\"8a40\",\"𧶄唥\"],[\"8a43\",\"𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓\"],[\"8a64\",\"𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕\"],[\"8a76\",\"䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯\"],[\"8aa1\",\"𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱\"],[\"8aac\",\"䠋𠆩㿺塳𢶍\"],[\"8ab2\",\"𤗈𠓼𦂗𠽌𠶖啹䂻䎺\"],[\"8abb\",\"䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃\"],[\"8ac9\",\"𪘁𠸉𢫏𢳉\"],[\"8ace\",\"𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻\"],[\"8adf\",\"𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌\"],[\"8af6\",\"𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭\"],[\"8b40\",\"𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹\"],[\"8b55\",\"𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑\"],[\"8ba1\",\"𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁\"],[\"8bde\",\"𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢\"],[\"8c40\",\"倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋\"],[\"8ca1\",\"𣏹椙橃𣱣泿\"],[\"8ca7\",\"爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚\"],[\"8cc9\",\"顨杫䉶圽\"],[\"8cce\",\"藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶\"],[\"8ce6\",\"峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻\"],[\"8d40\",\"𠮟\"],[\"8d42\",\"𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱\"],[\"8da1\",\"㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘\"],[\"8e40\",\"𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎\"],[\"8ea1\",\"繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛\"],[\"8f40\",\"蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖\"],[\"8fa1\",\"𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起\"],[\"9040\",\"趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛\"],[\"90a1\",\"𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜\"],[\"9140\",\"𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈\"],[\"91a1\",\"鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨\"],[\"9240\",\"𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘\"],[\"92a1\",\"働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃\"],[\"9340\",\"媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍\"],[\"93a1\",\"摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋\"],[\"9440\",\"銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻\"],[\"94a1\",\"㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡\"],[\"9540\",\"𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂\"],[\"95a1\",\"衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰\"],[\"9640\",\"桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸\"],[\"96a1\",\"𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉\"],[\"9740\",\"愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫\"],[\"97a1\",\"𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎\"],[\"9840\",\"𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦\"],[\"98a1\",\"咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃\"],[\"9940\",\"䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚\"],[\"99a1\",\"䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿\"],[\"9a40\",\"鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺\"],[\"9aa1\",\"黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪\"],[\"9b40\",\"𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌\"],[\"9b62\",\"𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎\"],[\"9ba1\",\"椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊\"],[\"9c40\",\"嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶\"],[\"9ca1\",\"㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏\"],[\"9d40\",\"𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁\"],[\"9da1\",\"辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢\"],[\"9e40\",\"𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺\"],[\"9ea1\",\"鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭\"],[\"9ead\",\"𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹\"],[\"9ec5\",\"㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲\"],[\"9ef5\",\"噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼\"],[\"9f40\",\"籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱\"],[\"9f4f\",\"凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰\"],[\"9fa1\",\"椬叚鰊鴂䰻陁榀傦畆𡝭駚剳\"],[\"9fae\",\"酙隁酜\"],[\"9fb2\",\"酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽\"],[\"9fc1\",\"𤤙盖鮝个𠳔莾衂\"],[\"9fc9\",\"届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳\"],[\"9fdb\",\"歒酼龥鮗頮颴骺麨麄煺笔\"],[\"9fe7\",\"毺蠘罸\"],[\"9feb\",\"嘠𪙊蹷齓\"],[\"9ff0\",\"跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇\"],[\"a040\",\"𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷\"],[\"a055\",\"𡠻𦸅\"],[\"a058\",\"詾𢔛\"],[\"a05b\",\"惽癧髗鵄鍮鮏蟵\"],[\"a063\",\"蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽\"],[\"a073\",\"坟慯抦戹拎㩜懢厪𣏵捤栂㗒\"],[\"a0a1\",\"嵗𨯂迚𨸹\"],[\"a0a6\",\"僙𡵆礆匲阸𠼻䁥\"],[\"a0ae\",\"矾\"],[\"a0b0\",\"糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦\"],[\"a0d4\",\"覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷\"],[\"a0e2\",\"罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫\"],[\"a3c0\",\"␀\",31,\"␡\"],[\"c6a1\",\"①\",9,\"⑴\",9,\"ⅰ\",9,\"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ\",23],[\"c740\",\"す\",58,\"ァアィイ\"],[\"c7a1\",\"ゥ\",81,\"А\",5,\"ЁЖ\",4],[\"c840\",\"Л\",26,\"ёж\",25,\"⇧↸↹㇏𠃌乚𠂊刂䒑\"],[\"c8a1\",\"龰冈龱𧘇\"],[\"c8cd\",\"￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣\"],[\"c8f5\",\"ʃɐɛɔɵœøŋʊɪ\"],[\"f9fe\",\"￭\"],[\"fa40\",\"𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸\"],[\"faa1\",\"鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍\"],[\"fb40\",\"𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙\"],[\"fba1\",\"𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂\"],[\"fc40\",\"廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷\"],[\"fca1\",\"𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝\"],[\"fd40\",\"𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀\"],[\"fda1\",\"𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎\"],[\"fe40\",\"鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌\"],[\"fea1\",\"𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔\"]]");

/***/ }),
/* 195 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 196 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 197 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'NicePT',
    description: '老师站，又称小馒头',
    url: 'https://www.nicept.net/',
    tags: ['Adult'],
    schema: 'NexusPHP',
    collaborator: 'DXV5',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '无码（限制级）' },
                    { value: 500, name: '有码（限制级）' },
                    { value: 402, name: '三级情色（限制级）' },
                    { value: 501, name: '其他（限制级）' },
                    { value: 403, name: '动漫（限制级）' },
                    { value: 503, name: '真人秀，自拍（限制级）' },
                    { value: 404, name: '套图（限制级）' },
                    { value: 504, name: 'SM调教（限制级）' }
                ],
                cross: { mode: 'append' }
            }
        ]
    }
};


/***/ }),
/* 198 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const timeRegex = /\d{4}-\d{2}-\d{2}[^\d]+?\d{2}:\d{2}:\d{2}/;
const siteMetadata = {
    name: 'NPUBits',
    description: '界面独具一格的教育网站点',
    url: 'https://npupt.com/',
    tags: ['教育网', '综合'],
    schema: 'NexusPHP',
    collaborator: ['Rhilip', 'xfl03'],
    search: {
        categories: [
            {
                name: '类型',
                key: 'cat',
                options: [
                    { name: '资料', value: 411 },
                    { name: '电影', value: 401 },
                    { name: '动漫', value: 405 },
                    { name: '剧集', value: 402 },
                    { name: '综艺', value: 403 },
                    { name: '体育', value: 407 },
                    { name: '纪录', value: 404 },
                    { name: '音乐', value: 414 },
                    { name: 'MV', value: 406 },
                    { name: '软件', value: 408 },
                    { name: '游戏', value: 410 },
                    { name: '校园', value: 412 },
                    { name: '其他', value: 409 }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: '#torrents_table > tbody > tr:gt(0)' },
            title: {
                selector: "a[href*='hit']:eq(0)",
                elementProcess: (element) => {
                    return element.getAttribute('title') || element.innerText;
                }
            },
            subTitle: {
                selector: 'table.torrentname td.embedded > span:last()',
                elementProcess: (element) => {
                    return element.getAttribute('title') || element.innerText;
                }
            },
            id: { selector: 'a[href^="details"]' },
            url: { selector: 'a[href^="details"]' },
            link: {
                selector: 'a[href^="details"]',
                filters: [
                    (query) => query
                        .replace('details', 'download')
                        .replace('&hit=1', '') +
                        '&trackerssl=1' // 强制SSL
                ]
            },
            time: {
                selector: 'div.small',
                elementProcess: (element) => {
                    if (timeRegex.test(element.innerHTML)) {
                        return ((element.innerHTML.match(timeRegex) || ['0000-00-00 00:00:00'])[0]).trim();
                    }
                    return 0;
                }
            },
            size: { selector: '.rowfollow.vcenter.nowrap > center' },
            seeders: { selector: '.rowfollow.vcenter.nowrap span.badge:eq(0)' },
            leechers: { selector: '.rowfollow.vcenter.nowrap span.badge:eq(1)' },
            completed: { selector: "a[href^='viewsnatches.php?id=']" },
            comments: { selector: "a[href$='#startcomments']" },
            category: { selector: 'div.category_text' }
        },
        userInfo: {
            id: {
                selector: "span#curuser a[href*='userdetails.php'][class*='Name']:first",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: ["span#curuser a[href*='userdetails.php'][class*='Name']:first"]
            },
            // "/userdetails.php?id=$user.id$"
            uploaded: { selector: ["td.rowfollow:contains('分享率')", "td.rowhead:contains('传输') + td"] },
            downloaded: { selector: ["td.rowfollow:contains('分享率')", "td.rowhead:contains('传输') + td"] },
            levelName: {
                selector: ["td.rowhead:contains('等級') + td > img, td.rowhead:contains('等级') + td > img"],
                attr: 'title'
            },
            bonus: { selector: ["td.rowhead:contains('沙粒') + td"] }
        }
    }
};


/***/ }),
/* 199 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: '麦田PT',
    description: '西北农林科技大学ipv6资源分享平台',
    url: 'https://pt.nwsuaf6.edu.cn/',
    tags: ['教育网', '影视', '综合'],
    schema: 'NexusPHP',
    collaborator: 'Rhilip',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '电影' },
                    { value: 402, name: '剧集' },
                    { value: 403, name: '综艺' },
                    { value: 405, name: '动漫' },
                    { value: 414, name: '音乐' },
                    { value: 407, name: '体育' },
                    { value: 404, name: '纪录片' },
                    { value: 406, name: 'MV' },
                    { value: 408, name: '软件' },
                    { value: 410, name: 'PC游戏' },
                    { value: 411, name: '学习' },
                    { value: 423, name: '原创' },
                    { value: 409, name: '其他' }
                ],
                cross: { mode: 'append' }
            }
        ]
    }
};


/***/ }),
/* 200 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _hdchina__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);

const siteMetadata = {
    name: 'OpenCD',
    timezoneOffset: '+0800',
    description: '皇后，专一的音乐类PT站，是目前国内最大的无损音乐PT',
    url: 'https://open.cd/',
    tags: ['音乐'],
    schema: 'NexusPHP',
    search: {
        categories: [
            {
                name: '来源',
                key: 'boardid',
                options: [
                    { name: '普通区', value: 1 },
                    { name: '原抓区', value: 2 }
                ]
            },
            {
                name: '類別',
                key: 'source',
                options: [
                    { value: 2, name: '流行(Pop)' },
                    { value: 3, name: '古典(Classical)' },
                    { value: 11, name: '器乐(Instrumental)' },
                    { value: 4, name: '原声(OST)' },
                    { value: 5, name: '摇滚(Rock)' },
                    { value: 8, name: '爵士(Jazz)' },
                    { value: 12, name: '新世纪(NewAge)' },
                    { value: 13, name: '舞曲(Dance)' },
                    { value: 14, name: '电子(Electronic)' },
                    { value: 15, name: '民谣(Folk)' },
                    { value: 16, name: '独立(Indie)' },
                    { value: 17, name: '嘻哈(Hip Hop)' },
                    { value: 9, name: '其他(Others)' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: _hdchina__WEBPACK_IMPORTED_MODULE_0__["selectorSearchProgress"],
            status: _hdchina__WEBPACK_IMPORTED_MODULE_0__["selectorSearchStatus"],
            tags: [
                { selector: "img[src*='pic/share_rule_1.gif']", name: 'Excl.' } // 禁转
            ]
        },
        userInfo: {
            // 如果页面能直接获取到的话
            seeding: _hdchina__WEBPACK_IMPORTED_MODULE_0__["selectorUserInfoSeeding"],
            seedingSize: _hdchina__WEBPACK_IMPORTED_MODULE_0__["selectorUserInfoSeedingSize"]
        }
    }
};


/***/ }),
/* 201 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return oppaitime; });
/* harmony import */ var _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);

const siteMetadata = {
    name: 'Oppaitime',
    timezoneOffset: '+0000',
    description: '成人动漫站',
    schema: 'GazelleJSONAPI',
    tags: ['动画', '漫画', '游戏', '影视'],
    url: 'https://oppaiti.me/',
    collaborator: 'bimzcy',
    search: {
        categories: [
            {
                name: 'Category',
                key: 'filter_cat',
                options: [
                    { value: 1, name: 'Movies' },
                    { value: 2, name: 'Anime' },
                    { value: 3, name: 'Manga' },
                    { value: 4, name: 'Games' },
                    { value: 5, name: 'Audio' },
                    { value: 6, name: 'Other' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        userInfo: {
            seedingSize: {
                selector: ["li:contains('Total Seeding: ') > span"],
                filters: [{ name: 'parseSize' }]
            },
            bonus: {
                selector: ['span.stat > a[href]'],
                filters: [(query) => query.replace(',', '')]
            }
        }
    }
};
class oppaitime extends _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async getUserSeedingTorrents(userId) {
        const { data: bonusPage } = await this.request({ url: '/user.php', params: { id: userId }, responseType: 'document' });
        return this.getFieldsData(bonusPage, 'userInfo', ['seedingSize', 'bonus']);
    }
}


/***/ }),
/* 202 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return orpheus; });
/* harmony import */ var _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);

const siteMetadata = {
    name: 'OPS',
    timezoneOffset: '+0000',
    description: 'music',
    url: 'https://orpheus.network/',
    tags: ['音乐'],
    schema: 'GazelleJSONAPI',
    collaborator: ['ylxb2016', 'enigmaz'],
    selector: {
        userInfo: {
            joinTime: {
                selector: ["div:contains('Statistics') + ul.stats > li:contains('Joined:') > span"],
                elementProcess: (element) => (element.getAttribute('title') || element.innerText).trim()
                // filter: 会由 GazelleJSONAPI基类 的 filter 进行进一步处理
            },
            seeding: {
                selector: ['div#content > table > tbody > tr > td:eq(0)'],
                filters: [parseInt]
            },
            seedingSize: {
                selector: ['div#content > table > tbody > tr > td:eq(1)'],
                filters: [{ name: 'parseSize' }]
            },
            bonus: {
                selector: ['div#content > div.header > h3'],
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/.+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? queryMatch[1] : 0;
                    }
                ]
            }
        }
    }
};
class orpheus extends _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async getUserExtendInfo(userId) {
        const { data: userPage } = await this.request({ url: '/user.php', params: { id: userId } });
        return this.getFieldsData(userPage, 'userInfo', ['joinTime']);
    }
    async getUserSeedingTorrents() {
        const { data: bonusPage } = await this.request({ url: '/bonus.php', params: { action: 'bprates' }, responseType: 'document' });
        return this.getFieldsData(bonusPage, 'userInfo', ['seeding', 'seedingSize', 'bonus']);
    }
}


/***/ }),
/* 203 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'OurBits',
    schema: 'NexusPHP',
    url: 'https://ourbits.club/',
    description: '综合性网站，有分享率要求',
    tags: ['影视', '动漫', '纪录片', '综艺'],
    collaborator: 'Rhilip',
    legacyUrl: [
        'https://www.ourbits.club/'
    ],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { name: 'Movies', value: 401 },
                    { name: 'Movies-3D', value: 402 },
                    { name: 'Concert', value: 419 },
                    { name: 'TV-Episode', value: 412 },
                    { name: 'TV-Pack', value: 405 },
                    { name: 'TV-Show', value: 413 },
                    { name: 'Documentary', value: 410 },
                    { name: 'Animation', value: 411 },
                    { name: 'Sports', value: 415 },
                    { name: 'Music-Video', value: 414 },
                    { name: 'Music', value: 416 }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '媒介',
                key: 'medium',
                options: [
                    { name: 'UHD Blu-ray', value: 12 },
                    { name: 'FHD Blu-ray', value: 1 },
                    { name: 'Remux', value: 3 },
                    { name: 'Encode', value: 7 },
                    { name: 'WEB-DL', value: 9 },
                    { name: 'HDTV', value: 5 },
                    { name: 'DVD', value: 2 },
                    { name: 'CD', value: 8 }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '编码',
                key: 'codec',
                options: [
                    { name: 'H.264', value: 12 },
                    { name: 'HEVC', value: 14 },
                    { name: 'MPEG-2', value: 15 },
                    { name: 'VC-1', value: 16 },
                    { name: 'Xvid', value: 17 },
                    { name: 'Other', value: 18 }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '音频编码',
                key: 'audiocodec',
                options: [
                    { name: 'Atmos', value: 14 },
                    { name: 'DTS X', value: 21 },
                    { name: 'DTS-HDMA', value: 1 },
                    { name: 'TrueHD', value: 2 },
                    { name: 'DTS', value: 4 },
                    { name: 'LPCM', value: 5 },
                    { name: 'FLAC', value: 13 },
                    { name: 'APE', value: 12 },
                    { name: 'AAC', value: 7 },
                    { name: 'AC3', value: 6 },
                    { name: 'WAV', value: 11 },
                    { name: 'MPEG', value: 32 }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '分辨率',
                key: 'standard',
                options: [
                    { name: 'SD', value: 4 },
                    { name: '720p', value: 3 },
                    { name: '1080i', value: 2 },
                    { name: '1080p', value: 1 },
                    { name: '2160p', value: 5 }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '地区',
                key: 'processing',
                options: [
                    { name: 'CN(中国大陆)', value: 1 },
                    { name: 'US/EU(欧美)', value: 2 },
                    { name: 'HK/TW(港台)', value: 3 },
                    { name: 'JP(日)', value: 4 },
                    { name: 'KR(韩)', value: 5 },
                    { name: 'OT(其他)', value: 6 }
                ],
                cross: { mode: 'append' }
            },
            {
                name: '制作组',
                key: 'team',
                options: [
                    { name: 'OurBits', value: 1 },
                    { name: 'PbK', value: 2 },
                    { name: 'OurTV', value: 12 },
                    { name: 'iLoveTV', value: 42 },
                    { name: 'FLTTH', value: 46 },
                    { name: 'Ao', value: 47 },
                    { name: 'MGs', value: 48 },
                    { name: 'OurPad', value: 3 },
                    { name: 'HosT', value: 18 },
                    { name: 'iLoveHD', value: 31 },
                    { name: '原创/原抓', value: 41 }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: 'div.progressBar > div',
                attr: 'style',
                filters: [
                    (query) => {
                        const progressMatch = query.match(/width:.?(\d.+)%/);
                        return progressMatch && progressMatch.length >= 2 ? parseFloat(progressMatch[1]) : 0;
                    }
                ]
            },
            status: {
                selector: 'div.progressBar > div',
                attr: 'title',
                filters: [
                    (query) => {
                        const progressStatusMatch = query.match(/(\d.+)% (进行中|未开始)/);
                        if (progressStatusMatch && progressStatusMatch.length >= 3) {
                            const progress = parseFloat(progressStatusMatch[1]);
                            const status = progressStatusMatch[2];
                            if (status === '进行中') {
                                return progress < 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                            }
                            else { // if (status === '未开始')
                                return progress < 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed;
                            }
                        }
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                ]
            },
            tags: [
                { selector: 'div.tag.tag-gf', name: '官方', color: '#1C86EE' },
                { selector: 'div.tag.tag-diy', name: 'DIY', color: '#FC9014' },
                { selector: 'div.tag.tag-sf', name: '首发', color: '#e01d65' },
                { selector: 'div.tag.tag-gy', name: '国语', color: '#3e93a0' },
                { selector: 'div.tag.tag-zz', name: '中字', color: '#426ab9' },
                { selector: 'div.tag.tag-yq', name: '应求', color: '#9932CC' },
                { selector: 'div.tag.tag-jz', name: 'Excl.' },
                { selector: 'div.tag.tag-bd', name: '蓝光', color: '#000' },
                { selector: 'div.tag.tag-db', name: '杜比视界', color: '#000000' },
                { selector: 'div.tag.tag-hdr10', name: 'HDR10', color: '#38b03f' },
                { selector: 'div.tag.tag-hdr10p', name: 'HDR10+', color: '#336633' },
                { selector: 'div.tag.tag-hlg', name: 'HLG', color: '#009F00' }
            ]
        }
    }
};


/***/ }),
/* 204 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return passthepopcorn; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _schema_Gazelle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31);


const siteMetadata = {
    name: 'PTP',
    timezoneOffset: '+0000',
    description: '电影',
    url: 'https://passthepopcorn.me/',
    tags: ['电影'],
    schema: 'Gazelle',
    host: 'passthepopcorn.me',
    collaborator: ['lengmianxia', 'birdplane'],
    search: {
        requestConfig: {
            responseType: 'json',
            params: {
                groupint: 0,
                json: 'noredirect'
            }
        }
    },
    selector: {
        userInfo: {
            id: { selector: ["a.user-info-bar__link[href*='user.php']:first"], attr: 'href' },
            name: { selector: ["a.user-info-bar__link[href*='user.php']:first"] },
            messageCount: {
                selector: ["div.alert-bar a[href*='inbox.php']"],
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/\s+/g, '').match(/(\d+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                    }
                ]
            },
            uploaded: {
                selector: ["a.user-info-bar__link[href*='type=seeding']:first"],
                attr: 'title',
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["a.user-info-bar__link[href*='type=leeching']:first"],
                attr: 'title',
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "ul.list > li:contains('Ratio:')",
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,|\n|\s+/g, '').match(/Ratio.+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? queryMatch[1] : 0;
                    }
                ]
            },
            seeding: {
                selector: "ul.list > li:contains('Seeding:')",
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/[,\n]/g, '').match(/:.+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            seedingSize: {
                selector: "ul.list > li:contains('Seeding size:')",
                filters: [
                    (query) => {
                        const queryMatch = query.replace(/,/g, '').match(/:.+?([\d.]+ ?[ZEPTGMK]?i?B)/);
                        return queryMatch && queryMatch.length >= 2 ? Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(queryMatch[1]) : 0;
                    }
                ]
            },
            levelName: { selector: "ul.list > li:contains('Class:')" },
            bonus: {
                selector: ["ul.list > li:contains('Points:')", "div:contains('Stats') + ul.stats > li:contains('SeedBonus:')"],
                filters: [
                    (query) => {
                        query = query.replace(/,|\n|\s+/g, '');
                        const queryMatch = query.match(/Points.+?([\d.]+)/) || query.match(/SeedBonus.+?([\d.]+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            joinTime: {
                selector: ["ul.list > li:contains('Joined:') > span"]
            }
        }
    }
};
class passthepopcorn extends _schema_Gazelle__WEBPACK_IMPORTED_MODULE_1__["default"] {
    async transformSearchPage(doc) {
        const authKey = doc.AuthKey;
        const passKey = doc.PassKey;
        const torrents = [];
        for (let i = 0; i < doc.Movies.length; i++) {
            const row = doc.Movies[i];
            const rawTorrent = row.Torrents[0];
            torrents.push({
                id: rawTorrent.Id,
                title: `${row.Title}[${row.Year}]-${rawTorrent.Codec}/${rawTorrent.Container}/${rawTorrent.Source}/${rawTorrent.Resolution}`,
                subTitle: rawTorrent.ReleaseName,
                link: `/torrents.php?action=download&id=${rawTorrent.Id}&authkey=${authKey}&torrent_pass=${passKey}`,
                url: `/torrents.php?id=${row.GroupId}&torrentid=${rawTorrent.Id}`,
                size: parseFloat(rawTorrent.Size),
                time: Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseTimeWithZone */ "h"])(rawTorrent.UploadTime, this.config.timezoneOffset || '+0000'),
                author: '',
                seeders: parseInt(rawTorrent.Seeders),
                leechers: parseInt(rawTorrent.Leechers),
                completed: parseInt(rawTorrent.Snatched),
                comments: 0,
                tags: [],
                category: 'Movie'
            });
        }
        return torrents;
    }
}


/***/ }),
/* 205 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pornbits; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);


const siteMetadata = {
    name: 'Pornbits',
    description: 'Pornbits',
    url: 'https://pornbits.net/',
    legacyUrl: [
        'https://pornbits.org/'
    ],
    tags: ['XXX'],
    host: 'pornbits.net',
    collaborator: 'ian',
    userInfo: {
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['name', 'uploaded', 'downloaded']
            },
            {
                requestConfig: { url: '/user/details' },
                fields: ['levelName', 'joinTime', 'seeding']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: '#content > table > tbody > tr' },
            title: { selector: 'a[href*="/torrent/details/"]' },
            url: { selector: 'a[href*="/torrent/details/"]', attr: 'href' },
            link: { selector: 'a[href*="/torrent/download/"]', attr: 'href' },
            time: {
                selector: 'td:nth-child(4) div:nth-child(2):contains("-")',
                filters: [
                    (query) => query.split('m')[1].trim()
                ]
            },
            size: { selector: 'td:nth-child(5) div:nth-child(1)' },
            category: { text: 'XXX' },
            seeders: { selector: 'td:nth-child(6)' },
            leechers: { selector: 'td:nth-child(7)' },
            completed: { selector: 'td:nth-child(8)' },
            tags: [
                { name: 'Free', selector: 'img[src="/images/glyphicons_069_gift.png"]' }
            ]
        },
        userInfo: {
            name: {
                selector: '#subnav > div > div > ul > li.dropdown.pull-right > a > span.hidden-sm'
            },
            uploaded: {
                selector: '#header > div > div > div > span.navbar-text.stats.hidden-sm',
                filters: [
                    (query) => {
                        query = query.split(':')[1].split('D')[0].trim();
                        return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(query);
                    }
                ]
            },
            downloaded: {
                selector: '#header > div > div > div > span.navbar-text.stats.hidden-sm',
                filters: [
                    (query) => {
                        query = query.split(':')[2].split('R')[0].replace(/Bytes/g, '').trim();
                        return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"])(query);
                    }
                ]
            },
            levelName: {
                selector: '#content > div > div.col-md-3 > div:nth-child(3) > span'
            },
            joinTime: {
                selector: '#content > div > div.col-md-3 > div:nth-child(5)',
                filters: [
                    (query) => query.split(':')[1].trim(),
                    { name: 'parseTime' }
                ]
            },
            seeding: {
                selector: '#content > div > div.col-md-9 > div:nth-child(5) > div.panel-heading > h4',
                filters: [
                    (query) => query.split(':')[1].split('L')[0].trim()
                ]
            }
        }
    }
};
class pornbits extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = {};
        if (filter.keywords) {
            config.url = `/browse/search/date/name_tags/${filter.keywords}`;
        }
        else {
            config.url = '/browse/index/date/name';
        }
        return config;
    }
}


/***/ }),
/* 206 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'PrivateHD',
    timezoneOffset: '+0000',
    description: '欧美影视',
    schema: 'AvistaZ',
    tags: ['剧集'],
    url: 'https://privatehd.to/',
    host: 'privatehd.to',
    collaborator: 'bimzcy'
};


/***/ }),
/* 207 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);


const siteMetadata = {
    name: 'PTer',
    timezoneOffset: '+0800',
    description: 'PT之友俱乐部',
    url: 'https://pterclub.com/',
    tags: ['影视', '综合'],
    schema: 'NexusPHP',
    formerHosts: [
        'pter.club'
    ],
    selector: {
        search: {
            title: {
                selector: ["a[href*='details.php?id='][title]:first"]
            },
            subTitle: {
                selector: ["a[href*='details.php?id='][title]:first"],
                elementProcess: (element) => {
                    let subTitle = '';
                    const lastSibling = element.parentElement.lastChild;
                    if ((lastSibling === null || lastSibling === void 0 ? void 0 : lastSibling.nodeName) === '#text') {
                        subTitle = lastSibling.textContent || subTitle;
                    }
                    return subTitle.trim();
                }
            },
            /**
             * <img class="progbargreen" src="pic/trans.gif" style="width: 98%;" alt="">  正在做种
             * <img class="progbarred" src="pic/trans.gif" style="width: 98%;" alt="">   已下载，未做种
             * <img class="progbarred" src="pic/trans.gif" style="width: 5.9407952394121%;" alt=""><img class="progbarrest" src="pic/trans.gif" style="width: 92.059204760588%;" alt="">   正在下载，需修正下载进度
             * <img class="progbarrest" src="pic/trans.gif" style="width: 98%;" alt="">  正在下载，但是无进度
             */
            progress: {
                selector: ['img[class^="progbar"][style*="width"]:first'],
                elementProcess: (element) => {
                    if (element.classList.contains('progbargreen')) {
                        return 100;
                    }
                    else if (element.classList.contains('progbarred') || element.classList.contains('progbarred')) {
                        const elementStyle = element.getAttribute('style') || '';
                        const widthMatch = elementStyle.match(/width:([ \d.]+)%/);
                        const progress = widthMatch && widthMatch.length >= 2 ? parseFloat(widthMatch[1]) / 98 * 100 /* 修正下载进度 */ : 0;
                        return element.classList.contains('progbarred') ? progress : 100 - progress; // 如果是 .progbarred 则代表已完成进度，而 .progbarred 则为未完成进度，取反
                    }
                    else {
                        return 0;
                    }
                }
            },
            status: {
                selector: ['img[class^="progbar"][style*="width"]:first'],
                elementProcess: (element) => {
                    if (element.classList.contains('progbargreen')) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                    }
                    else if (element.classList.contains('progbarred') || element.classList.contains('progbarred')) {
                        const widthMatch = (element.getAttribute('style') || '').match(/width:([ \d.]+)%/);
                        const progress = widthMatch && widthMatch.length >= 2 ? parseFloat(widthMatch[1]) / 98 * 100 : 0;
                        const realProgress = element.classList.contains('progbarred') ? progress : 100 - progress;
                        // FIXME 不能判断是否在下载状态，所以直接设成 inactive
                        return realProgress >= 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive;
                    }
                    else {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                }
            },
            tags: [
                { name: 'Excl.', selector: "a[href*='torrents.php?tag_exclusive=yes']" }
            ]
        },
        userInfo: {
            bonus: {
                selector: ["td.rowhead:contains('猫粮') + td, td.rowhead:contains('Karma Points') + td, td.rowhead:contains('貓糧') + td"]
            },
            // 从顶端用户栏获取做种数量，这样就可以避免对 /getusertorrentlist.php 页面的请求
            seeding: {
                selector: ["#info_block a[href*='getusertorrentlist.php'][href*='type=seeding']"],
                filters: [parseInt]
            },
            seedingSize: {
                selector: ["td.rowhead:contains('做种大小') + td, td.rowhead:contains('Seeding Size') + td, td.rowhead:contains('做種大小') + td"],
                filters: [_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseSizeString */ "f"]]
            }
        }
    }
};


/***/ }),
/* 208 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'PTHome',
    timezoneOffset: '+0800',
    schema: 'NexusPHP',
    url: 'https://pthome.net/',
    description: '只为成为您的家，快乐下载，分享至美！',
    tags: ['综合', '影视', '游戏'],
    collaborator: 'waldens',
    selector: {
        search: {
            progress: {
                selector: ['td:not(.rowfollow):not(.colhead):not(.embedded)'],
                filters: [
                    (query) => query === '-' ? 0 : parseFloat(query)
                ]
            },
            status: {
                selector: ['.torrents-progress', '.torrents-progress2'],
                elementProcess: (element) => {
                    if (element.classList.contains('torrents-progress')) {
                        return (element.getAttribute('style') || '').indexOf('100%') !== -1 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                    }
                    else if (element.classList.contains('torrents-progress2')) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed;
                    }
                    else {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                }
            }
        }
    }
};


/***/ }),
/* 209 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/**
 * FIXME 无号，未进行测试，仅依赖老版本说明文件
 * Rhilip, 2021.04.09
 */

const siteMetadata = {
    name: 'PTMSG',
    schema: 'NexusPHP',
    url: 'https://pt.msg.vg/',
    description: 'The Ultimate File Sharing Experience',
    collaborator: 'bjgetite',
    selector: {
        search: {
            progress: {
                selector: ['div.progressarea'],
                attr: 'title',
                filters: [
                    (query) => /做种中/.test(query) ? 100 : 0
                ]
            },
            status: {
                selector: ['div.progressarea'],
                attr: 'title',
                filters: [
                    (query) => {
                        switch (true) {
                            case /做种中/.test(query):
                                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                            case /已完成/.test(query):
                                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed;
                            case /下载中/.test(query):
                                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                            case /未完成/.test(query):
                                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive;
                            default:
                                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                        }
                    }
                ]
            }
        }
    }
};


/***/ }),
/* 210 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: '烧包',
    timezoneOffset: '+0800',
    schema: 'NexusPHP',
    url: 'https://ptsbao.club/',
    description: '烧包 - 扬帆远航 风雨同路',
    tags: ['影视', '综合'],
    collaborator: ['laizony', 'ted423'],
    selector: {
        userInfo: {
            messageCount: {
                selector: ["td[style*='background: indigo'] a[href*='messages.php']"]
            },
            levelName: {
                selector: ["td.rowhead:contains('等级') + td b b"],
                attr: null // 覆写掉NPHP基类的 attr: 'title' 属性，这样就可以让后续读 innerText 而不是 attr
            }
        }
    }
};


/***/ }),
/* 211 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'pttime',
    timezoneOffset: '+0800',
    schema: 'NexusPHP',
    url: 'https://www.pttime.org/',
    description: 'PT时间',
    tags: ['电影', '成人']
};


/***/ }),
/* 212 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);


const parseUpDl = (element) => {
    const sizeString = element.nextSibling.textContent.trim();
    return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(sizeString);
};
const siteMetadata = {
    name: 'PussyTorrents',
    timezoneOffset: '+0000',
    description: 'PussyTorrents is a Semi-Private Torrent Tracker for 3X',
    url: 'https://pussytorrents.org/',
    tags: ['xxx'],
    search: {
        keywordsParam: 'query',
        requestConfig: {
            url: '/torrents/browse'
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['name', 'uploaded', 'downloaded', 'messageCount']
            },
            {
                requestConfig: { url: '/profile/$userName$' },
                assertion: { name: 'userName' },
                fields: ['id', 'levelName', 'joinTime']
            },
            {
                requestConfig: {
                    method: 'post',
                    url: '/user/account/snatchlist',
                    responseType: 'json',
                    params: {
                        // userID: '$user.id$', 自动添加的，所以注释掉
                        sEcho: 0,
                        iColumns: 9,
                        sColumns: ',,,,,,,,',
                        iDisplayStart: '0',
                        iDisplayLength: -1,
                        // 下面是一连串不知道做啥的参数，就先留着.....
                        mDataProp_0: '0',
                        sSearch_0: '',
                        bRegex_0: 'false',
                        bSearchable_0: 'true',
                        bSortable_0: 'true',
                        mDataProp_1: '1',
                        sSearch_1: '',
                        bRegex_1: 'false',
                        bSearchable_1: 'true',
                        bSortable_1: 'true',
                        mDataProp_2: '2',
                        sSearch_2: '',
                        bRegex_2: 'false',
                        bSearchable_2: 'true',
                        bSortable_2: 'true',
                        mDataProp_3: '3',
                        sSearch_3: '',
                        bRegex_3: 'false',
                        bSearchable_3: 'true',
                        bSortable_3: 'true',
                        mDataProp_4: '4',
                        sSearch_4: '',
                        bRegex_4: 'false',
                        bSearchable_4: 'true',
                        bSortable_4: 'true',
                        mDataProp_5: '5',
                        sSearch_5: '',
                        bRegex_5: 'false',
                        bSearchable_5: 'true',
                        bSortable_5: 'true',
                        mDataProp_6: '6',
                        sSearch_6: '',
                        bRegex_6: 'false',
                        bSearchable_6: 'true',
                        bSortable_6: 'true',
                        mDataProp_7: '7',
                        sSearch_7: '',
                        bRegex_7: 'false',
                        bSearchable_7: 'true',
                        bSortable_7: 'true',
                        mDataProp_8: '8',
                        sSearch_8: '',
                        bRegex_8: 'false',
                        bSearchable_8: 'true',
                        bSortable_8: 'true',
                        sSearch: '',
                        bRegex: 'false',
                        iSortCol_0: '0',
                        sSortDir_0: 'desc',
                        iSortingCols: '1'
                    },
                    headers: {
                        'x-requested-with': 'XMLHttpRequest'
                    },
                    transferPostData: 'params'
                },
                assertion: { id: 'userID' },
                fields: ['seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table#torrenttable > tbody > tr:has(a[href^="/download/"])' },
            id: { selector: 'a[href^="/torrent/"]', attr: 'href', filters: [{ name: 'parseNumber' }] },
            title: { selector: 'a[href^="/torrent/"]' },
            url: { selector: 'a[href^="/torrent/"]', attr: 'href' },
            link: { selector: 'a[href^="/download/"]', attr: 'href' },
            time: { selector: 'span.subnote', filters: [(query) => query.replace('Added on ', '')] },
            size: { selector: 'td:nth-last-child(5)' },
            author: { selector: 'td:nth-last-child(1)' },
            category: { text: 'ALL' },
            seeders: { selector: 'td:nth-last-child(3)' },
            leechers: { selector: 'td:nth-last-child(2)' },
            completed: { selector: 'td:nth-last-child(4)', filters: [{ name: 'parseNumber' }] },
            comments: { selector: 'a[href*="#comments"]' }
        },
        userInfo: {
            // page: '/',
            name: {
                selector: "#memberBar .span8 a[href*='/profile/']"
            },
            uploaded: {
                selector: "#memberBar .span8 span[title='Uploaded']",
                elementProcess: parseUpDl
            },
            downloaded: {
                selector: "#memberBar .span8 span[title='Downloaded']",
                elementProcess: parseUpDl
            },
            messageCount: {
                text: 0,
                selector: "a[href='/users/messages'] i.news-notify",
                elementProcess: () => 255
            },
            // page: '/profile/$user.name$',
            id: {
                selector: 'a[href="#snatchlist"]',
                data: 'userid'
            },
            levelName: {
                selector: "#profileTable td:contains('Class') + td"
            },
            joinTime: {
                selector: "#profileTable td:contains('Join Date') + td",
                filters: [
                    (query) => {
                        console.log(query);
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(query.split(' ').slice(1).join(' '), 'Do MMMM YYYY').valueOf();
                    }
                ]
            },
            // url: '/user/account/snatchlist',
            seeding: { selector: 'iTotalRecords' },
            seedingSize: {
                selector: 'aaData',
                filters: [
                    (aaData) => {
                        let seedingSize = 0;
                        aaData.forEach(data => {
                            seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(data[1]);
                        });
                        return seedingSize;
                    }
                ]
            }
        }
    }
};


/***/ }),
/* 213 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return redacted; });
/* harmony import */ var _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);

const siteMetadata = {
    name: 'RED',
    timezoneOffset: '+0000',
    description: 'music',
    url: 'https://redacted.ch/',
    tags: ['音乐'],
    schema: 'GazelleJSONAPI',
    collaborator: ['ylxb2016', 'enigamz'],
    search: {
        categories: [
            {
                name: 'Category',
                key: 'filter_cat',
                options: [
                    { value: 1, name: 'Music' },
                    { value: 2, name: 'Applications' },
                    { value: 3, name: 'E-Books' },
                    { value: 4, name: 'Audiobooks' },
                    { value: 5, name: 'E-Learning Videos' },
                    { value: 6, name: 'Comedy' },
                    { value: 7, name: 'Comics' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        userInfo: {
            seedingSize: {
                selector: ['response.seedingsize'],
                filters: [{ name: 'parseSize' }]
            }
        }
    }
};
class redacted extends _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async getUserSeedingTorrents(userId) {
        const { data: apiStats } = await this.requestApi('community_stats', { userid: userId });
        return this.getFieldsData(apiStats, 'userInfo', ['seedingSize']);
    }
}


/***/ }),
/* 214 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_1__);


const siteMetadata = {
    name: 'SDBits',
    aka: ['SDB'],
    timezoneOffset: '+0000',
    description: 'SDB, HDB姊妹站',
    url: 'https://sdbits.org/',
    tags: ['影视', '综合'],
    collaborator: 'luckiestone',
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/browse.php'
        },
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { value: 1, name: 'Movie' },
                    { value: 2, name: 'TV' },
                    { value: 3, name: 'Documentary' },
                    { value: 4, name: 'Music' },
                    { value: 5, name: 'Sports' },
                    { value: 6, name: 'Audio' },
                    { value: 7, name: 'Stand-up Comedy' }
                ]
            }
        ]
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name', 'messageCount']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime']
            },
            {
                requestConfig: { url: '/userdetails.php', params: { seeding: 1 } },
                assertion: { id: 'id' },
                fields: ['seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            tags: [
                { name: 'Free', selector: "a[style^='color:#000099']" }
            ]
        },
        userInfo: {
            id: {
                selector: "a[href*='userdetails.php']:first",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: "a[href*='userdetails.php']:first"
            },
            messageCount: {
                selector: "table[bgcolor*='red'] a[href*='inbox.php']",
                filters: [{ name: 'parseNumber' }]
            },
            uploaded: {
                selector: "td.rowhead:contains('Uploaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "td.rowhead:contains('Downloaded') + td",
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "font:contains('Ratio') +",
                filters: [parseFloat]
            },
            levelName: {
                selector: ["td.rowhead:contains('Class') + td"]
            },
            bonus: {
                selector: ["td.heading:contains('Bonus') + td"],
                filters: [{ name: 'parseNumber' }]
            },
            joinTime: {
                selector: ["td.rowhead:contains('JOIN'):contains('date') + td"],
                filters: [
                    (query) => query.split(' (')[0],
                    { name: 'parseTime' }
                ]
            },
            seeding: {
                selector: "td.heading:contains('Currently'):contains('seeding') + td",
                elementProcess: (element) => {
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('tr:not(:eq(0))', element);
                    return trAnothers.length;
                }
            },
            seedingSize: {
                selector: "td.heading:contains('Currently'):contains('seeding') + td",
                elementProcess: (element) => {
                    let seedingSize = 0;
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('tr:not(:eq(0))', element);
                    trAnothers.forEach(trAnother => {
                        const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('td:eq(3)', trAnother)[0];
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(sizeAnother.innerText.trim());
                    });
                    return seedingSize;
                }
            }
        }
    }
};


/***/ }),
/* 215 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sjtu; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _schema_NexusPHP__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16);


const siteMetadata = {
    name: '葡萄',
    description: 'Free Share, Join us',
    url: 'https://pt.sjtu.edu.cn/',
    tags: ['教育网', '影视', '综合'],
    schema: 'NexusPHP',
    collaborator: 'Rhilip',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '华语电影' },
                    { value: 402, name: '欧美电影' },
                    { value: 403, name: '亚洲电影' },
                    { value: 406, name: '纪录片' },
                    { value: 407, name: '港台电视剧' },
                    { value: 408, name: '亚洲电视剧' },
                    { value: 409, name: '大陆电视剧' },
                    { value: 410, name: '欧美电视剧' },
                    { value: 411, name: '大陆综艺节目' },
                    { value: 412, name: '港台综艺节目' },
                    { value: 413, name: '欧美综艺节目' },
                    { value: 414, name: '日韩综艺节目' },
                    { value: 420, name: '华语音乐' },
                    { value: 421, name: '日韩音乐' },
                    { value: 422, name: '欧美音乐' },
                    { value: 423, name: '原声音乐' },
                    { value: 425, name: '古典音乐' },
                    { value: 426, name: 'mp3合辑' },
                    { value: 427, name: 'Music Videos' },
                    { value: 429, name: '游戏' },
                    { value: 431, name: '动漫' },
                    { value: 432, name: '体育' },
                    { value: 434, name: '软件' },
                    { value: 435, name: '学习' },
                    { value: 440, name: 'mac' },
                    { value: 451, name: '校园原创' },
                    { value: 450, name: '其他' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: ['td.snatched_no_yes, td.snatched_yes_yes', 'td.snatched_no_no, td.snatched_yes_no'],
                attr: 'class',
                filters: [
                    (query) => {
                        switch (true) {
                            case /snatched_(no|yes)_yes/.test(query):
                                return 100;
                            case /snatched_(no|yes)_no/.test(query):
                            default:
                                return 0;
                        }
                    }
                ]
            },
            status: {
                selector: ['td.snatched_no_yes, td.snatched_yes_yes', 'td.snatched_no_no, td.snatched_yes_no'],
                attr: 'class',
                filters: [
                    (query) => {
                        switch (true) {
                            case /snatched_(no|yes)_yes/.test(query):
                                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                            case /snatched_(no|yes)_no/.test(query):
                                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive;
                            default:
                                return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                        }
                    }
                ]
            }
        }
    }
};
class sjtu extends _schema_NexusPHP__WEBPACK_IMPORTED_MODULE_1__["default"] {
    async requestUserSeedingPage(userId, type = 'seeding') {
        const { data } = await this.request({
            url: '/viewusertorrents.php',
            params: { id: userId, show: type }
        });
        return data || null;
    }
}


/***/ }),
/* 216 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_1__);


const siteMetadata = {
    name: 'SkyeySnow',
    aka: ['天雪'],
    timezoneOffset: '+0800',
    url: 'https://www.skyey2.com/',
    legacyUrl: [
        'https://skyeysnow.com/'
    ],
    tags: ['动漫'],
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/forum.php',
            params: {
                mod: 'torrents',
                cat: 1
            }
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id', 'name', 'messageCount']
            },
            {
                requestConfig: { url: '/home.php', params: { mod: 'space' } },
                assertion: { id: 'uid' },
                fields: ['uploaded', 'downloaded', 'levelName', 'bonus', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.torrents > tbody > tr:gt(0)' },
            id: {
                selector: 'a[href^="/forum.php?mod=viewthread"]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['tid'] }]
            },
            title: { selector: 'td.torrent_title > a[title]', attr: 'title' },
            url: { selector: 'a[href^="/forum.php?mod=viewthread"]', attr: 'href' },
            link: { selector: 'a[href^="/download.php?id="]', attr: 'href' },
            time: { selector: ' > td:nth-child(3)' },
            author: { selector: '> td:nth-last-child(1)' },
            category: { selector: '> td:nth-child(1)' },
            seeders: { selector: ' > td:nth-child(5)' },
            leechers: { selector: ' > td:nth-child(6)' },
            completed: { selector: ' > td:nth-child(7)' },
            tags: [
                { name: '70%', selector: 'img.sp_1' },
                { name: '50%', selector: 'img.sp_2' },
                { name: '50%', selector: 'img.sp_2' },
                { name: '35%', selector: 'img.sp_3' },
                { name: 'Free', selector: 'img.sp_4' },
                { name: '2xFree', selector: 'img.sp_5' }
            ],
            progress: {
                selector: ['div.tline1, div.tline2'],
                attr: 'style',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/width:([ \d.]+)%/);
                        return (queryMatch && queryMatch.length >= 2) ? parseFloat(queryMatch[1]) : null;
                    }
                ]
            },
            status: {
                selector: ':self',
                elementProcess: (tr) => {
                    const statusAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('> td:eq(4), > td:eq(5), > td:eq(6)', tr);
                    const statusStyle = statusAnothers.map(e => e.getAttribute('style'));
                    if (statusStyle[0]) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                    }
                    else if (statusStyle[2]) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed;
                    }
                    else if (statusStyle[1]) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                    }
                    else {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                }
            }
        },
        userInfo: {
            id: {
                selector: '.vwmy a',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['uid'] }]
            },
            name: { selector: '.vwmy a' },
            messageCount: {
                selector: ['a.a.showmenu.new'],
                filters: [{ name: 'parseNumber' }]
            },
            uploaded: {
                selector: "#psts li:contains('上传量')",
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "#psts li:contains('下载量')",
                filters: [{ name: 'parseSize' }]
            },
            levelName: {
                selector: "a[href='home.php?mod=spacecp&ac=usergroup']",
                filters: [(query) => query.replace('用户组: ', '').trim()]
            },
            bonus: {
                selector: '#ratio',
                filters: [
                    (query) => query.replace('论坛积分:', '').replace(/,/g, '').trim(),
                    parseFloat
                ]
            },
            joinTime: {
                selector: "#pbbs > li:contains('注册时间')",
                filters: [
                    (query) => query.replace('注册时间', '').trim(),
                    { name: 'parseTime' }
                ]
            },
            seeding: {
                text: 0,
                selector: "#psts li:contains('即时保种数')",
                filters: [
                    (query) => query.replace('即时保种数', '').replace(/,/g, '').trim(),
                    parseFloat
                ]
            },
            seedingSize: { text: 'N/A' }
        }
    }
};


/***/ }),
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return snakepop; });
/* harmony import */ var _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1);




const siteMetadata = {
    name: 'Snakepop',
    timezoneOffset: '+0800',
    description: 'music',
    url: 'https://snakepop.art/',
    tags: ['音乐'],
    schema: 'GazelleJSONAPI',
    host: 'snakepop.art',
    collaborator: ['timyuan'],
    selector: {
        userInfo: {
            levelName: {
                filters: [(query) => query.match(/(.+(?= [(]))/)[0]]
            }
        }
    }
};
class snakepop extends _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async getUserSeedingTorrents(userId) {
        const userSeedingTorrent = { seedingSize: 0, bonus: 0 };
        for (const pageInfo = { count: 0, current: 1 }; pageInfo.current <= pageInfo.count; pageInfo.current++) {
            const { data: seedPage } = await this.request({
                url: '/torrents.php',
                params: { type: 'seeding', userid: userId, page: pageInfo.current },
                responseType: 'document'
            });
            if (pageInfo.count === 0) {
                pageInfo.count = this.getFieldData(seedPage, {
                    selector: "a[href*='type=seeding']:contains('Last'):last",
                    attr: 'href',
                    filters: [(query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_1___default()(query, true).query.page) || -1]
                });
            }
            userSeedingTorrent.bonus = this.getFieldData(seedPage, {
                selector: 'li#stats_seedpoints span.stat',
                filters: [parseFloat]
            }) || 0;
            const sizeAnothers = sizzle__WEBPACK_IMPORTED_MODULE_2___default()('td.number_column.nobr', seedPage);
            sizeAnothers.forEach(sizeAnother => {
                userSeedingTorrent.seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_3__[/* parseSizeString */ "f"])(sizeAnother.innerText.trim());
            });
        }
        return userSeedingTorrent;
    }
}


/***/ }),
/* 218 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/**
 * FIXME 无号，未进行测试
 * Rhilip, 2021.04.09
 */

const siteMetadata = {
    name: '聆音Club',
    schema: 'NexusPHP',
    url: 'https://pt.soulvoice.club/',
    description: '致力于建设一个有声资源，电子书为主，学习资料，影视资源为辅的PT分享站。',
    tags: ['综合', '电子书', '有声书'],
    collaborator: 'Gold John King',
    selector: {
        search: {
            progress: {
                selector: ['> td:eq(8)'],
                filters: [
                    (query) => query === '--' ? 0 : parseFloat(query)
                ]
            },
            status: {
                selector: ['> td:eq(8)'],
                filters: [
                    (query) => query === '--' ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown : (parseFloat(query) >= 100 ? _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed : _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive)
                ]
            }
        }
    }
};


/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'SSD',
    description: 'Classic Movie Compression Team',
    url: 'https://springsunday.net/',
    tags: [
        '影视',
        '音乐',
        '综合'
    ],
    schema: 'NexusPHP',
    formerHosts: [
        'hdcmct.org'
    ],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 501, name: 'Movies(电影)' },
                    { value: 502, name: 'TV Series(剧集)' },
                    { value: 503, name: 'Docs(纪录)' },
                    { value: 504, name: 'Animations(动画)' },
                    { value: 505, name: 'TV Shows(综艺)' },
                    { value: 506, name: 'Sports(体育)' },
                    { value: 507, name: 'MV(音乐视频)' },
                    { value: 508, name: 'Music(音乐)' },
                    { value: 509, name: 'Others(其他)' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            // FIXME 我觉得旧版的 progress, status 获取方法实现并不好
            progress: {
                selector: ["a[id*='subscription'] > img"],
                elementProcess: (element) => {
                    if (element.classList.contains('uploading')) {
                        return 100;
                    }
                    else if (element.classList.contains('downloading')) {
                        const title = element.getAttribute('title') || '';
                        const titleMatch = title.match(/(\d.+)%/);
                        return (titleMatch && titleMatch.length >= 2) ? parseFloat(titleMatch[1]) : 0;
                    }
                    else {
                        return 0;
                    }
                }
            },
            status: {
                selector: ["a[id*='subscription'] > img"],
                elementProcess: (element) => {
                    if (element.classList.contains('uploading')) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding;
                    }
                    else if (element.classList.contains('downloading')) {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading;
                    }
                    else {
                        return _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown;
                    }
                }
            }
        },
        userInfo: {
            messageCount: {
                selector: ["a[href*='messages.php'][style*='background: red']"]
            }
        }
    }
};


/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);


const categoryMap = {
    29: 'Movies/HD',
    25: 'TV/Anime',
    26: 'Audio/Lossless',
    27: 'Other',
    28: 'TV/Documentary',
    30: 'Audio/Video',
    31: 'TV/Sport',
    32: 'TV/HD',
    33: 'TV/HD',
    34: 'TV/HD',
    35: 'Movies' // Content w/o subs Контент без перевода
};
const nextTextSibling = (element) => {
    var _a;
    return ((_a = element.nextSibling.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';
};
const siteMetadata = {
    name: 'TeamHD',
    timezoneOffset: '+0000',
    description: '俄国站',
    url: 'https://teamhd.org/',
    tags: ['影视'],
    search: {
        keywordsParam: 'search',
        requestConfig: {
            url: '/browse'
        }
    },
    userInfo: {
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['name', 'id', 'messageCount', 'uploaded', 'downloaded', 'ratio', 'bonus']
            },
            {
                requestConfig: { url: '/user/$userId$' },
                assertion: { id: 'userId' },
                fields: ['joinTime', 'levelName', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.browse > tbody > tr' },
            id: {
                selector: 'a[href^="download.php?id="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: { selector: 'a[href^="/details/id"]' },
            url: { selector: 'a[href^="/details/id"]', attr: 'href' },
            link: { selector: 'a[href^="download.php?id="]', attr: 'href' },
            time: { selector: 'td > div > small' },
            size: {
                selector: 'td:nth-child(5)',
                elementProcess: (element) => {
                    var _a;
                    (_a = element.querySelector('strong')) === null || _a === void 0 ? void 0 : _a.remove();
                    return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* findThenParseSizeString */ "e"])(element.innerText.trim());
                }
            },
            author: { selector: '>td:eq(4)' },
            category: {
                selector: ' a[href*="/browse/cat"]',
                attr: 'href',
                filters: [
                    { name: 'parseNumber' },
                    (catId) => categoryMap[catId] || 'Other'
                ]
            },
            seeders: {
                selector: 'td:nth-child(4)',
                filters: [
                    (query) => query.split('|')[0]
                ]
            },
            leechers: {
                selector: 'td:nth-child(4)',
                filters: [
                    (query) => query.split('|')[1]
                ]
            },
            completed: {
                selector: 'td:nth-child(5) strong'
            },
            comments: {
                selector: 'td:eq(2)'
            },
            progress: {
                selector: 'td.ttable_seeding font[color]',
                case: {
                    "font[color='green']": 100,
                    "font[color='black']": 0,
                    "font[color='#ff0000']": null
                }
            },
            status: {
                text: _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown,
                selector: 'td.ttable_seeding font[color]',
                case: {
                    "font[color='green']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    "font[color='black']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed,
                    "font[color='#ff0000']": _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading
                }
            },
            tags: [
                { name: 'Free', selector: "a[href*='/details/id'][style='color:#f2b101']" },
                { name: '50%', selector: 'a[href^="/details/id"][style="color:#828b8b"]' }
            ]
        },
        userInfo: {
            // page: '/index.php'
            name: {
                selector: "a[href*='/user/']:first"
            },
            id: {
                selector: "a[href*='/user/']",
                attr: 'href',
                filters: [(query) => query.split('/')[4]]
            },
            messageCount: {
                selector: '#message_box > a > font',
                filters: [{ name: 'parseNumber' }]
            },
            uploaded: {
                selector: "div.col-8.mb-4 > font[color='green']",
                elementProcess: nextTextSibling,
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: "div.col-8.mb-4 > font[color='darkred']",
                elementProcess: nextTextSibling,
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "div.col-8.mb-4 > font[color='#1900D1']",
                elementProcess: nextTextSibling
            },
            bonus: {
                selector: "a.online[href='/mybonus.php']"
            },
            // page: '/user/$user.id$',
            joinTime: {
                selector: '#profile_right > table.inlay > tbody > tr:nth-child(1) > td:nth-child(2)',
                filters: [{ name: 'parseTime' }]
            },
            levelName: {
                selector: '#profile_left > table > tbody > tr > td:nth-child(2) > p:nth-child(1) > u > span'
            },
            seeding: {
                selector: ["img[title='Distributes'] + font > font"],
                filters: [{ name: 'parseNumber' }]
            },
            seedingSize: {
                text: 'N/A'
            }
        }
    }
};


/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'TLFBits',
    schema: 'NexusPHP',
    url: 'https://pt.eastgame.org/',
    description: '水管虽小，坚持则大！宛如TLF，虽弱却奢华',
    tags: ['影视'],
    collaborator: 'waldens'
};


/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _hdhome__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);

const siteMetadata = {
    name: 'TorrentCCF',
    description: '兼有学习资源和软件资源的影视PT站点',
    url: 'https://et8.org/',
    tags: ['影视', '学习', '综合'],
    schema: 'NexusPHP',
    collaborator: 'Rhilip',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 601, name: 'Movies' },
                    { value: 602, name: 'Animations' },
                    { value: 603, name: 'Sports' },
                    { value: 604, name: 'Documentaries' },
                    { value: 605, name: 'EDU' },
                    { value: 606, name: 'TV/Cn' },
                    { value: 607, name: 'TV/Western' },
                    { value: 608, name: 'TV/hk_tw' },
                    { value: 609, name: 'TV/Japan_korea' },
                    { value: 610, name: 'TV Shows' },
                    { value: 611, name: 'Music/Cn' },
                    { value: 612, name: 'Music/Western' },
                    { value: 613, name: 'Music/Asia' },
                    { value: 614, name: 'Music/Classic' },
                    { value: 615, name: 'MusicVideo' },
                    { value: 616, name: 'Appz' },
                    { value: 617, name: 'PC Games' },
                    { value: 618, name: 'Playstation' },
                    { value: 619, name: 'Xbox' },
                    { value: 620, name: 'Wii' },
                    { value: 621, name: 'Others' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: _hdhome__WEBPACK_IMPORTED_MODULE_0__["selectorSearchProgress"],
            status: _hdhome__WEBPACK_IMPORTED_MODULE_0__["selectorSearchStatus"]
        }
    }
};


/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_0__);

const categoryMap = {
    29: 'Anime',
    28: 'Appz/Packs',
    42: 'Audio Books',
    20: 'Books',
    30: 'Documentary',
    47: 'Fonts',
    43: 'Mac',
    96: 'Movie/4K',
    25: 'Movies/480p',
    11: 'Movies/Bluray',
    5: 'Movies/Bluray-Full',
    3: 'Movies/DVD-R',
    21: 'Movies/MP4',
    22: 'Movies/Non-English',
    13: 'Movies/Packs',
    44: 'Movies/SD/x264',
    48: 'Movies/x265',
    1: 'Movies/XviD',
    17: 'Music/Audio',
    23: 'Music/Non-English',
    41: 'Music/Packs',
    16: 'Music/Video',
    27: 'Music/Flac',
    45: 'Podcast',
    4: 'PC/Games',
    18: 'PS3',
    8: 'PSP',
    10: 'Wii',
    9: 'Xbox-360',
    24: 'TV/480p',
    32: 'TV/Bluray',
    31: 'TV/DVD-R',
    33: 'TV/DVD-Rip',
    46: 'TV/Mobile',
    14: 'TV/Packs',
    26: 'TV/SD/x264',
    7: 'TV/x264',
    34: 'TV/x265',
    2: 'TV/XviD',
    6: 'XXX/Movies',
    15: 'XXX/Packs'
};
const siteMetadata = {
    name: 'TorrentsTD',
    timezoneOffset: '+0000',
    description: 'Torrents - TD',
    url: 'https://www.torrentday.com/',
    tags: ['综合'],
    search: {
        keywordsParam: 'q',
        requestConfig: {
            url: 't.json',
            responseType: 'json'
        }
    },
    userInfo: {
        pickLast: ['id'],
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['id']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime', 'seeding', 'seedingSize', 'messageCount']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: ':self' },
            id: { selector: 't' },
            title: { selector: 'name' },
            url: { selector: 't', filters: [(torrentId) => `/details.php?id=${torrentId}`] },
            link: { selector: 't', filters: [(torrentId) => `/download.php/${torrentId}/${torrentId}.torrent`] },
            time: { selector: 'ctime' },
            size: { selector: 'size' },
            // author: { selector: '' }  // FIXME
            category: { selector: 'c', filters: [(q) => categoryMap[q] || 'Other'] },
            seeders: { selector: 'seeders' },
            leechers: { selector: 'leechers' },
            completed: { selector: 'completed' }
        },
        userInfo: {
            id: {
                selector: ["a[href*='/u/']:first", "a[href*='userdetails.php']:first"],
                attr: 'href',
                switchFilters: [
                    (query) => {
                        const queryMatch = query.match(/u\/(.+)/);
                        return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : '';
                    },
                    (query) => url_parse__WEBPACK_IMPORTED_MODULE_0___default()(query, true).query.id
                ]
            },
            uploaded: {
                selector: ["span.detailsInfoSpan:contains('Up: ') > span"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["span.detailsInfoSpan:contains('Down: ') > span"],
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "span.detailsInfoSpan:contains('Ratio: ') > span",
                filters: [{ name: 'parseNumber' }]
            },
            levelName: {
                selector: "span.detailsInfoSpan:contains('Class: ') > span"
            },
            bonus: {
                selector: ["a[href='/mybonus.php']"],
                filters: [{ name: 'parseNumber' }]
            },
            joinTime: {
                selector: "span.detailsInfoSpan:contains('Joined: ') > span",
                filters: [{ name: 'parseTime' }]
            },
            seeding: {
                selector: ["a[href*='/peers?u='] > img[alt='downloads'] + span"],
                filters: [{ name: 'parseNumber' }]
            },
            seedingSize: {
                text: 'N/A'
            },
            messageCount: {
                selector: ["a[href='/m']:contains('You have')"],
                filters: [{ name: 'parseNumber' }]
            }
        }
    }
};


/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return torrentleech; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var url_join__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var url_join__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url_join__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_4__);





const siteMetadata = {
    name: 'TorrentLeech',
    timezoneOffset: '+0000',
    description: 'TorrentLeech',
    url: 'https://www.torrentleech.org/',
    tags: ['综合'],
    search: {
        categories: [
            {
                name: 'Category',
                key: 'category',
                options: [
                    { value: 8, name: 'Cam' },
                    { value: 9, name: 'TS/TC' },
                    { value: 11, name: 'DVDRip/DVDScreener' },
                    { value: 37, name: 'WEBRip' },
                    { value: 43, name: 'HDRip' },
                    { value: 14, name: 'BlurayRip' },
                    { value: 12, name: 'DVD-R' },
                    { value: 13, name: 'Bluray' },
                    { value: 47, name: '4K' },
                    { value: 15, name: 'Boxsets' },
                    { value: 29, name: 'Documentaries' },
                    { value: 26, name: 'Episodes' },
                    { value: 32, name: 'Episodes HD' },
                    { value: 27, name: 'Boxsets' },
                    { value: 17, name: 'PC' },
                    { value: 42, name: 'Mac' },
                    { value: 18, name: 'XBOX' },
                    { value: 19, name: 'XBOX360' },
                    { value: 40, name: 'XBOXONE' },
                    { value: 20, name: 'PS2' },
                    { value: 21, name: 'PS3' },
                    { value: 39, name: 'PS4' },
                    { value: 22, name: 'PSP' },
                    { value: 28, name: 'Wii' },
                    { value: 30, name: 'Nintendo DS' },
                    { value: 48, name: 'Nintendo Switch' },
                    { value: 23, name: 'PC-ISO' },
                    { value: 24, name: 'Mac' },
                    { value: 25, name: 'Mobile' },
                    { value: 33, name: '0-day' },
                    { value: 38, name: 'Education' },
                    { value: 34, name: 'Anime' },
                    { value: 35, name: 'Cartoons' },
                    { value: 45, name: 'EBooks' },
                    { value: 46, name: 'Comics' },
                    { value: 31, name: 'Audio' },
                    { value: 16, name: 'Music videos' },
                    { value: 36, name: 'Movies' },
                    { value: 44, name: 'TV Series' }
                ]
            }
        ]
    },
    userInfo: {
        pickLast: ['name', 'id', 'joinTime'],
        process: [
            {
                requestConfig: { url: '/' },
                fields: ['name']
            },
            {
                requestConfig: { url: '/profile/$userName$' },
                assertion: { name: 'userName' },
                fields: ['id', 'uploaded', 'downloaded', 'bonus', 'messageCount', 'levelName', 'joinTime']
            },
            {
                requestConfig: { url: '/profile/$userName$/seeding' },
                assertion: { name: 'userName' },
                fields: ['seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'torrentList' },
            id: { selector: 'fid' },
            title: { selector: 'name' },
            url: { selector: ':self', filters: [(torrent) => `/torrent/${torrent.fid}`] },
            link: { selector: ':self', filters: [(torrent) => `/download/${torrent.fid}/${torrent.filename}`] },
            time: { selector: 'addedTimestamp' },
            size: { selector: 'size' },
            author: { text: '' },
            category: { selector: 'categoryID' },
            seeders: { selector: 'seeders' },
            leechers: { selector: 'leechers' },
            completed: { selector: 'completed' },
            comments: { selector: 'numComments' }
        },
        userInfo: {
            // url: '/'
            name: {
                selector: ["span.centerTopBar span[onclick*='/profile/'][onclick*='view']"]
            },
            // page: '/profile/$user.name$',
            uploaded: {
                selector: ["span.centerTopBar div[title^='Uploaded'] span"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["span.centerTopBar div[title^='Downloaded'] span"],
                filters: [{ name: 'parseSize' }]
            },
            bonus: {
                selector: ['span.centerTopBar span.total-TL-points'],
                filters: [(query) => query.replace(/,/g, ''), parseFloat]
            },
            messageCount: {
                text: 0,
                selector: ["a[href='/content/articles'] i.news-notify"],
                filters: [() => 255]
            },
            id: {
                selector: ['div.has-support-msg script'],
                filters: [(query) => query.match(/var userLogUserID = '(\d+)';/)[1], parseInt]
            },
            levelName: {
                selector: ['div.profile-details div.label-user-class']
            },
            joinTime: {
                selector: ["table.profileViewTable td:contains('Register date') + td"],
                filters: [
                    (query) => {
                        const date = query.split(' ').slice(1).join(' ');
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(date, 'Do MMMM YYYY').valueOf();
                    }
                ]
            },
            // url: '/profile/$userName$/seeding',
            seeding: {
                selector: 'table#profile-seedingTable > tbody',
                elementProcess: (tbody) => {
                    const trAnother = sizzle__WEBPACK_IMPORTED_MODULE_4___default()('> tr', tbody);
                    return trAnother.length;
                }
            },
            seedingSize: {
                selector: 'table#profile-seedingTable > tbody',
                elementProcess: (tbody) => {
                    let seedingSize = 0;
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_4___default()('> tr', tbody);
                    trAnothers.forEach(tr => {
                        const sizeTd = sizzle__WEBPACK_IMPORTED_MODULE_4___default()('> td:nth-child(2)', tr);
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_2__[/* parseSizeString */ "f"])(sizeTd[0].innerText.trim());
                    });
                    return seedingSize;
                }
            }
        }
    }
};
class torrentleech extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        var _a, _b;
        const urlSearch = ['/torrents/browse/list'];
        if ((_a = filter.extraParams) === null || _a === void 0 ? void 0 : _a.find(param => param.key === 'category')) {
            const categoryParams = (_b = filter.extraParams) === null || _b === void 0 ? void 0 : _b.find(param => param.key === 'category');
            // @ts-ignore
            urlSearch.push(['categories', categoryParams.value]);
        }
        if (filter.keywords) {
            // @ts-ignore
            urlSearch.push(['query', filter.keywords]);
        }
        return {
            url: url_join__WEBPACK_IMPORTED_MODULE_1___default()(urlSearch),
            responseType: 'json'
        };
    }
}


/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return torrentseeds; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);

const siteMetadata = {
    name: 'TorrentSeeds',
    description: 'TorrentSeeds',
    url: 'https://www.torrentseeds.org/',
    tags: ['综合'],
    collaborator: 'ian',
    search: {
        keywordsParam: 'query',
        requestConfig: {
            url: '/browse_elastic.php',
            params: {
                search_in: 'name',
                search_mode: 'all',
                order_by: 'added',
                order_way: 'desc'
            }
        }
    },
    selector: {
        search: {
            rows: { selector: 'table.table-bordered > tbody > tr[class*="torrent_row_"]' },
            id: { selector: 'a[href^="/details.php?id="]', attr: 'href', filters: [{ name: 'querystring', args: ['id'] }] },
            title: { selector: 'td:has(a[href^="/details.php?id="]) b' },
            subTitle: { text: '' },
            url: { selector: 'a[href^="/details.php?id="]', attr: 'href' },
            link: { selector: 'a[href^="/download.php?torrent="]' },
            time: { selector: '> td:eq(5)' },
            size: { selector: '> td:eq(6)' },
            author: { text: '' },
            category: { selector: '> td:eq(0)' },
            seeders: { selector: '> td:eq(8)' },
            leechers: { selector: '> td:eq(9)' },
            completed: { selector: '> td:eq(7)' },
            comments: { text: 0 }
        },
        detail: {
            id: { selector: 'h2.text-center > a', attr: 'href' },
            title: { selector: 'div > div:nth-child(3) > div.pull-left > h1' },
            subTitle: { text: '' },
            url: { selector: 'h2.text-center > a', attr: 'href' },
            link: { selector: 'a[href*="download.php?torrent="]', attr: 'href' },
            time: { selector: "td.heading:contains('Added') + td" },
            size: {
                selector: 'td.heading:contains("Size") + td',
                filters: [
                    (query) => query.split('(')[0].trim()
                ]
            },
            author: { text: '' },
            category: { selector: "td.heading:contains('Type') + td" },
            seeders: {
                selector: "td.heading:contains('Peers') + td",
                filters: [
                    (query) => {
                        const peerStatus = query.split(',');
                        return peerStatus[0].replace(' seeder(s)', '').trim();
                    }
                ]
            },
            leechers: {
                selector: "td.heading:contains('Peers') + td",
                filters: [
                    (query) => {
                        const peerStatus = query.split(',');
                        return peerStatus[1].split('=')[0].replace(' leecher(s) ', '').trim();
                    }
                ]
            },
            completed: {
                selector: "td.heading:contains('Snatched') + td",
                filters: [
                    (query) => query.replace(' time(s)', '')
                ]
            },
            comments: { text: 0 }
        }
    }
};
class torrentseeds extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchPage(doc) {
        // 当搜索结果只有1条时会自动重定向到种子详情页，这时直接解析页面
        if (/Info\shash/.test(doc.documentElement.outerHTML)) {
            return [
                this.getFieldsData(doc, 'detail', ['id', 'title', 'subTitle', 'url', 'link', 'time', 'size', 'author', 'category', 'seeders', 'leechers', 'completed', 'comments'])
            ];
        }
        return super.transformSearchPage(doc);
    }
}


/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return totheglory; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);



const categoryMap = ['电影DVDRip', '电影720p', '电影1080i/p', 'BluRay原盘', '影视2160p', 'UHD原盘', '纪录片720p', '纪录片1080i/p', '纪录片BluRay原盘', '欧美剧720p', '欧美剧1080i/p', '高清日剧', '大陆港台剧1080i/p', '大陆港台剧720p', '高清韩剧', '欧美剧包', '日剧包', '华语剧包', '韩剧包', '(电影原声&Game)OST', '无损音乐FLAC&APE', 'MV&演唱会', '高清体育节目', '高清动漫', '韩国综艺', '高清综艺', '日本综艺', 'MiniVideo', '补充音轨', 'iPhone/iPad视频'];
const siteMetadata = {
    name: 'ToTheGlory',
    aka: ['TTG'],
    timezoneOffset: '+0800',
    url: 'https://totheglory.im/',
    tags: ['影视', '音乐', '游戏', '综合'],
    search: {
        keywordsParam: 'search_field',
        requestConfig: {
            url: '/browse.php',
            params: {
                c: 'M' // 默认搜索 影视&音乐 板块，除非category覆写
            }
        },
        categories: [
            {
                name: 'Entry',
                key: 'c',
                options: [
                    { name: '影视&音乐', value: 'M' },
                    { name: '游戏&软件', value: 'G' }
                ]
            },
            {
                name: 'Category',
                key: '分类',
                notes: '`影视&音乐` 入口时的分类，错误选择可能导致无法搜索',
                options: categoryMap.map(cat => { return { name: cat, value: cat }; }),
                cross: { mode: 'raw' } // 具体处理方式见下
            }
        ]
    },
    userInfo: {
        pickLast: ['id', 'name'],
        process: [
            {
                requestConfig: { url: '/index.php' },
                fields: ['id', 'name']
            },
            {
                requestConfig: { url: '/userdetails.php' },
                assertion: { id: 'id' },
                fields: ['messageCount', 'uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime', 'seeding', 'seedingSize']
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table#torrent_table > tbody > tr[id]' },
            id: { selector: ':self', attr: 'id' },
            title: {
                selector: 'div.name_left > a > b',
                elementProcess: (e) => e.innerHTML.split('<br>')[0]
            },
            subTitle: {
                selector: 'div.name_left > a > b',
                elementProcess: (e) => Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* extractContent */ "c"])(e.innerHTML.split('<br>')[1] || '')
            },
            url: { selector: 'div.name_left > a', attr: 'href' },
            link: { selector: 'a.dl_a', attr: 'href' },
            time: { selector: 'td:nth-child(5)' },
            size: { selector: 'td:nth-child(7)' },
            author: { selector: 'td:nth-last-child(1)' },
            category: { selector: 'td:nth-child(1) > a > img', attr: 'alt' },
            seeders: { selector: 'td:nth-child(9)', filters: [(q) => q.split('/')[0]] },
            leechers: { selector: 'td:nth-child(9)', filters: [(q) => q.split('/')[1]] },
            completed: { selector: 'td:nth-child(8)', filters: [parseInt] },
            comments: { text: 0, selector: 'a[href*="tocomm=1"]' },
            tags: [
                { name: 'Free', selector: "img[alt='free']" },
                { name: '30%', selector: "img[alt='30%']" },
                { name: '50%', selector: "img[alt='50%']" },
                { name: 'Excl.', selector: 'span.browse.excl' }
            ]
        },
        userInfo: {
            id: {
                selector: "a[href*='userdetails.php']:first",
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            name: {
                selector: "a[href*='userdetails.php']:first"
            },
            messageCount: {
                selector: "td[style*='background'] > b > a[href*='messages.php'], a[href='#notice']",
                filters: [{ name: 'parseNumber' }]
            },
            uploaded: {
                selector: ["td.rowhead:contains('上传量') + td", "td.rowhead:contains('上傳量') + td"],
                filters: [{ name: 'parseSize' }]
            },
            downloaded: {
                selector: ["td.rowhead:contains('下载量') + td", "td.rowhead:contains('下載量') + td"],
                filters: [{ name: 'parseSize' }]
            },
            ratio: {
                selector: "td.rowhead:contains('分享率') + td",
                filters: [parseFloat]
            },
            levelName: {
                selector: ["td.rowhead:contains('等级') + td", "td.rowhead:contains('等級') + td"]
            },
            bonus: {
                selector: ["td.rowhead:contains('积分') + td", "td.rowhead:contains('積分') + td"],
                filters: [parseFloat]
            },
            joinTime: {
                selector: ["td.rowhead:contains('注册日期') + td", "td.rowhead:contains('註冊日期') + td"],
                filters: [{ name: 'parseTime' }]
            },
            seeding: {
                text: 0,
                selector: 'div#ka2',
                elementProcess: (element) => {
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('tr:not(:eq(0))', element);
                    return trAnothers.length;
                }
            },
            seedingSize: {
                text: 0,
                selector: 'div#ka2',
                elementProcess: (element) => {
                    let seedingSize = 0;
                    const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('tr:not(:eq(0))', element);
                    trAnothers.forEach(trAnother => {
                        const sizeAnother = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('td:eq(3)', trAnother)[0];
                        seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseSizeString */ "f"])(sizeAnother.innerText.trim());
                    });
                    return seedingSize;
                }
            }
        }
    }
};
class totheglory extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_2__["default"] {
    async transformSearchFilter(filter) {
        var _a, _b, _c;
        const category = (_a = filter.extraParams) === null || _a === void 0 ? void 0 : _a.find(x => x.key === '分类');
        if (category) {
            const categoryValue = typeof category.value === 'string' ? [category.value] : category.value;
            filter.keywords += ' ' + categoryValue.map(v => `分类:\`${v}\``).join(' ');
            (_b = filter.extraParams) === null || _b === void 0 ? void 0 : _b.splice((_c = filter.extraParams) === null || _c === void 0 ? void 0 : _c.findIndex(x => x.key === '分类'), 1);
        }
        return super.transformSearchFilter(filter);
    }
}


/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'U2',
    timezoneOffset: '+0800',
    description: '动漫花园分享园',
    url: 'https://u2.dmhy.org/',
    tags: ['影视', '动漫'],
    schema: 'NexusPHP',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 9, name: 'U2-Rip' },
                    { value: 411, name: 'U2-RBD' },
                    { value: 10, name: 'R3TRAW' },
                    { value: 11, name: 'R2JRAW' },
                    { value: 12, name: 'BDRip' },
                    { value: 13, name: 'DVDRip' },
                    { value: 14, name: 'HDTVRip' },
                    { value: 15, name: 'DVDISO' },
                    { value: 16, name: 'BDMV' },
                    { value: 17, name: 'LQRip' },
                    { value: 410, name: '外挂结构' },
                    { value: 412, name: '加流重灌' },
                    { value: 21, name: 'Raw Books' },
                    { value: 22, name: '港译漫画' },
                    { value: 23, name: '台译漫画' },
                    { value: 30, name: 'Lossless Music' },
                    { value: 40, name: 'Others' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            title: {
                selector: ["a.tooltip[href*='hit']"]
            },
            subTitle: {
                selector: ['span.tooltip']
            },
            progress: {
                selector: ["td[class*='seedhlc_'], td[class*='leechhlc_']"],
                elementProcess: (element) => {
                    switch (true) {
                        case /seedhlc_/.test(element.className):
                            return 100;
                        case /leechhlc_/.test(element.className):
                            return parseFloat((element.innerText.match(/[\d.]+%/) || [0])[0]);
                        default:
                            return 0;
                    }
                }
            },
            status: {
                selector: ["td[class*='seedhlc_ever']", '.seedhlc_current', '.leechhlc_inactive', '.leechhlc_current'],
                switchFilters: [
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed,
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].inactive,
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading,
                    () => _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].unknown // 缺省情况
                ]
            },
            leechers: {
                elementProcess: (element) => {
                    return parseInt(element.firstChild.textContent);
                }
            }
        },
        userInfo: {
            bonus: {
                selector: ["td.rowhead:contains('UCoin') + td > span"],
                attr: 'title',
                filters: [
                    (query) => parseFloat(query.replaceAll(',', ''))
                ]
            }
        }
    }
};


/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return uhdbits; });
/* harmony import */ var _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1);




const siteMetadata = {
    name: 'UHDBits',
    timezoneOffset: '+0000',
    description: 'HD',
    schema: 'GazelleJSONAPI',
    tags: ['影视'],
    url: 'https://uhdbits.org/',
    collaborator: ['bimzcy', 'enigamz'],
    host: 'uhdbits.org',
    search: {
        keywordsParam: 'searchstr',
        requestConfig: {
            url: '/torrents.php',
            params: {
                group_results: 0,
                searchsubmit: 1
            },
            responseType: 'document' // 需要覆盖掉 GazelleJSONAPI 默认的 json 设置
        },
        categories: [
            {
                name: 'Category',
                key: 'filter_cat',
                options: [
                    { value: 1, name: 'Movie' },
                    { value: 2, name: 'Music' },
                    { value: 3, name: 'TV' }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.torrent_table:last > tbody > tr.torrent' },
            id: {
                selector: "a[href*='torrents.php?id=']",
                attr: 'href',
                filters: [
                    (query) => {
                        const urlParse = url_parse__WEBPACK_IMPORTED_MODULE_2___default()(query, true).query;
                        return urlParse.torrentid || urlParse.id;
                    }
                ]
            },
            title: {
                selector: "div.group_info:has(> a[href*='torrents.php?id='])",
                elementProcess: (element) => {
                    const cloneElement = element.cloneNode(true);
                    sizzle__WEBPACK_IMPORTED_MODULE_1___default()('>span, div.torrent_info', cloneElement).forEach(e => e.remove());
                    return cloneElement.innerText.trim();
                }
            },
            subTitle: { selector: 'div.group_info > div.torrent_info:first' },
            url: { selector: "a[href*='torrents.php?id=']", attr: 'href' },
            link: { selector: "a[href*='torrents.php?action=download'][title='Download']:first", attr: 'href' },
            time: {
                selector: '>td:eq(4)',
                elementProcess: (element) => {
                    const AccurateTimeAnother = element.querySelector('span[title], time[title]');
                    if (AccurateTimeAnother) {
                        return AccurateTimeAnother.getAttribute('title') + ':00';
                    }
                    else if (element.getAttribute('title')) {
                        return element.getAttribute('title') + ':00';
                    }
                    else {
                        return element.innerText.trim() + ':00';
                    }
                }
            },
            size: { selector: '>td:eq(5)' },
            completed: { selector: '>td:eq(6)' },
            seeders: { selector: '>td:eq(7)' },
            leechers: { selector: '>td:eq(8)' },
            comments: { selector: '>td:eq(3)' },
            author: { text: '' },
            category: {
                selector: 'td.cats_col > a > div',
                attr: 'class',
                filters: [
                    (query) => {
                        if (query.includes('cats_movie')) {
                            return 'Movie';
                        }
                        else if (query.includes('cats_tv')) {
                            return 'TV';
                        }
                        else if (query.includes('cats_music')) {
                            return 'Music';
                        }
                        else {
                            return 'Other';
                        }
                    }
                ]
            }
        },
        userInfo: {
            bonus: {
                selector: ["[href='bonus.php'] + span"]
            }
        }
    }
};
class uhdbits extends _schema_GazelleJSONAPI__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * 使用 AbstractBittorrentSite 的解析方法，但是 TS 不允许调用 super.super
     * 同时， transformSearchPage 在基类中属于 protected 属性，
     * （意味着我们不能使用 BittorrentSite.prototype.transformSearchPage 方法调用
     * 所以我们得直接从基类方法中简化抄.....
     *
     * @param doc
     * @protected
     */
    async transformSearchPage(doc) {
        const torrents = [];
        const trs = sizzle__WEBPACK_IMPORTED_MODULE_1___default()(this.config.selector.search.rows.selector, doc);
        trs === null || trs === void 0 ? void 0 : trs.forEach((tr) => {
            torrents.push(this.parseRowToTorrent(tr));
        });
        return torrents;
    }
    async getUserTorrentList(userId, page = 0, type = 'seeding') {
        const { data: TListDocument } = await this.request({
            url: '/torrents.php',
            params: {
                userid: userId, page, type
            },
            responseType: 'document'
        });
        return TListDocument;
    }
    async getUserSeedingTorrents(userId) {
        var _a, _b;
        const userSeedingTorrent = { seedingSize: 0 };
        const pageInfo = { count: 0, current: 0 }; // 生成页面信息
        for (; pageInfo.current <= pageInfo.count; pageInfo.current++) {
            const TListDocument = await this.getUserTorrentList(userId, pageInfo.current);
            // 更新最大页数
            if (pageInfo.count === 0) {
                pageInfo.count = this.getFieldData(TListDocument, {
                    selector: ["a[href*='torrents.php?page=']:contains('Last'):last"],
                    attr: 'href',
                    filters: [(query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_2___default()(query, true).query.page) || -1]
                });
            }
            // 更新做种情况
            if (!userSeedingTorrent.bonus && ((_b = (_a = this.config.selector) === null || _a === void 0 ? void 0 : _a.userInfo) === null || _b === void 0 ? void 0 : _b.bonus)) {
                userSeedingTorrent.bonus = this.getFieldData(TListDocument, this.config.selector.userInfo.bonus);
            }
            // 解析当前页信息， 并合并至顶层字典中
            const sizeAnothers = sizzle__WEBPACK_IMPORTED_MODULE_1___default()('td.number_column.nobr', TListDocument);
            sizeAnothers.forEach(element => {
                userSeedingTorrent.seedingSize += Object(_shared_filter__WEBPACK_IMPORTED_MODULE_3__[/* parseSizeString */ "f"])(element.innerText.trim());
            });
        }
        return userSeedingTorrent;
    }
}


/***/ }),
/* 229 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

const siteMetadata = {
    name: 'UltraHD',
    timezoneOffset: '+0800',
    schema: 'NexusPHP',
    url: 'https://ultrahd.net/',
    description: '韩剧',
    tags: ['电影', '电视剧', '综艺', '纪录片', '动漫'],
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { name: '电影', value: 401 },
                    { name: '电视剧', value: 402 },
                    { name: '综艺', value: 403 },
                    { name: '纪录片', value: 404 },
                    { name: '动漫', value: 405 }
                ],
                cross: { mode: 'append' }
            }
        ]
    },
    selector: {
        search: {
            progress: {
                selector: '.torrentname td:first-child > div[title]:last-child',
                attr: 'title',
                filters: [
                    (query) => {
                        const queryMatch = query.match(/([.\d]+)%/);
                        return queryMatch && queryMatch.length >= 2 ? parseFloat(queryMatch[1]) : 0;
                    }
                ]
            },
            status: {
                selector: '.torrentname td:first-child > div[title]:last-child',
                case: {
                    '[title^="leeching"]': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].downloading,
                    '[title^="seeding"]': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].seeding,
                    '[title^="inactivity"]': _shared_types__WEBPACK_IMPORTED_MODULE_0__[/* ETorrentStatus */ "b"].completed
                }
            }
        }
    }
};


/***/ }),
/* 230 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: '溪涧草堂PT',
    description: '以热播电影，热播剧集，热播综艺为主，纪录，动漫，GTV，资料等资源为辅，多方面地为用户提供丰富的资源下载',
    url: 'http://pt.xauat6.edu.cn/',
    tags: ['教育网', '影视', '综合'],
    schema: 'NexusPHP',
    collaborator: 'Rhilip',
    search: {
        categories: [
            {
                name: '类别',
                key: 'cat',
                options: [
                    { value: 401, name: '电影' },
                    { value: 402, name: '剧集' },
                    { value: 403, name: '纪录' },
                    { value: 404, name: '资料' },
                    { value: 405, name: '综艺' },
                    { value: 406, name: 'MV' },
                    { value: 407, name: '音乐' },
                    { value: 408, name: '动漫' },
                    { value: 409, name: '软件' },
                    { value: 410, name: '体育' },
                    { value: 421, name: '游戏' },
                    { value: 424, name: '游戏视频' },
                    { value: 422, name: '其他' }
                ],
                cross: { mode: 'append' }
            }
        ]
    }
};


/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return x1337x; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var url_join__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var url_join__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url_join__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);



const categoryMap = new Map([
    [28, 'Anime/Anime'], [78, 'Anime/Dual Audio'], [79, 'Anime/Dubbed'], [80, 'Anime/Subbed'], [81, 'Anime/Raw'],
    [22, 'Music/MP3'], [23, 'Music/Lossless'], [24, 'Music/DVD'], [25, 'Music/Video'], [26, 'Music/Radio'], [27, 'Music/Other'], [53, 'Music/Album'], [58, 'Music/Box set'], [59, 'Music/Discography'], [60, 'Music/Single'], [68, 'Music/Concerts'], [69, 'Music/AAC'],
    [1, 'Movies/DVD'], [2, 'Movies/Divx/Xvid'], [3, 'Movies/SVCD/VCD'], [4, 'Movies/Dubs/Dual Audio'], [42, 'Movies/HD'], [54, 'Movies/h.264/x264'], [55, 'Movies/Mp4'], [66, 'Movies/3D'], [70, 'Movies/HEVC/x265'], [73, 'Movies/Bollywood'], [76, 'Movies/UHD'],
    [5, 'TV/DVD'], [6, 'TV/Divx/Xvid'], [7, 'TV/SVCD/VCD'], [41, 'TV/HD'], [71, 'TV/HEVC/x265'], [74, 'TV/Cartoons'], [75, 'TV/SD'], [9, 'TV/Documentary'],
    [18, 'Apps/PC Software'], [19, 'Apps/Mac'], [20, 'Apps/Linux'], [21, 'Apps/Other'], [56, 'Apps/Android'], [57, 'Apps/iOS'],
    [10, 'Games/PC Game'], [11, 'Games/PS2'], [12, 'Games/PSP'], [13, 'Games/Xbox'], [14, 'Games/Xbox360'], [15, 'Games/PS1'], [16, 'Games/Dreamcast'], [17, 'Games/Other'], [43, 'Games/PS3'], [44, 'Games/Wii'], [45, 'Games/DS'], [46, 'Games/GameCube'], [72, 'Games/3DS'], [77, 'Games/PS4'], [82, 'Games/Switch'],
    [48, 'XXX/Video'], [49, 'XXX/Picture'], [50, 'XXX/Magazine'], [51, 'XXX/Hentai'], [67, 'XXX/Games'],
    [33, 'Other/Emulation'], [34, 'Other/Tutorial'], [35, 'Other/Sounds'], [36, 'Other/E-books'], [37, 'Other/Images'], [38, 'Other/Mobile Phone'], [39, 'Other/Comics'], [40, 'Other/Other'], [47, 'Other/Nulled Script'], [52, 'Other/Audiobook']
]);
const siteMetadata = {
    name: '1337x',
    description: '1337X is a Public torrent site that offers verified torrent downloads',
    url: 'https://1337x.to/',
    legacyUrl: [
        'https://1337x.gd/',
        'https://1337x.is/',
        'https://1337x.st/',
        'https://x1337x.ws/',
        'https://x1337x.eu/',
        'https://x1337x.se/'
    ],
    search: {
        requestConfig: {
            url: '/search',
            params: {
                order: 'desc'
            }
        },
        categories: [
            {
                name: 'Category',
                key: 'category',
                options: [
                    { name: 'TV', value: 'TV' },
                    { name: 'Movies', value: 'Movies' },
                    { name: 'Games', value: 'Games' },
                    { name: 'Apps', value: 'Documentaries' },
                    { name: 'Anime', value: 'Anime' },
                    { name: 'Other', value: 'Other' },
                    { name: 'XXX', value: 'XXX' }
                ]
            },
            {
                name: 'Sort',
                key: 'value',
                options: [
                    { name: 'Time', value: 'time' },
                    { name: 'Size', value: 'size' },
                    { name: 'Seeders', value: 'seeders' },
                    { name: 'leechers', value: 'leechers' }
                ]
            },
            {
                name: 'Order',
                key: 'order',
                options: [
                    { name: 'Ascending', value: 'asc' },
                    { name: 'Descending', value: 'desc' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.table-list > tbody > tr' },
            id: {
                selector: 'td[class^="coll-1"] a[href^="/torrent/"]',
                attr: 'href',
                filters: [
                    (q) => q.match(/\/torrent\/(\d+)/)[1]
                ]
            },
            title: { selector: 'td[class^="coll-1"] a[href^="/torrent/"]' },
            url: { selector: 'td[class^="coll-1"] a[href^="/torrent/"]', attr: 'href' },
            // .torrent link is on the details page, So we override func getTorrentDownloadLink
            time: {
                selector: 'td[class^="coll-date"]',
                filters: [
                    (q) => {
                        /**
                         * - (within this year) 7am Sep. 14th
                         * - (more than a year ago) Apr. 18th '11
                         * - (today) 12:25am
                         */
                        q = q.replace("'", '').replace('.', '');
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(q, ['MMM Do YY', 'HH:mma', 'mma MMM Do']).valueOf();
                    }
                ]
            },
            size: { selector: 'td[class^="coll-4"]' },
            seeders: { selector: 'td[class^="coll-2"]' },
            leechers: { selector: 'td[class^="coll-3"]' },
            comments: { selector: 'td[class^="coll-1"] span.comments', filters: [(q) => parseInt(q) || 0] },
            category: {
                selector: 'td[class^="coll-1"] a[href^="/sub/"]',
                attr: 'href',
                filters: [
                    (q) => categoryMap.get(parseInt(q.match(/\/sub\/(\d+)/)[1]))
                ]
            }
        },
        detail: {
            link: { selector: 'ul[aria-labelledby="dropdownMenu1"] a', attr: 'href' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class x1337x extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const { keywords, extraParams } = filter;
        let searchPath = 'search';
        const category = extraParams === null || extraParams === void 0 ? void 0 : extraParams.filter((v) => v.key === 'category')[0];
        if (category) {
            searchPath = 'category-' + searchPath;
        }
        const sort = extraParams === null || extraParams === void 0 ? void 0 : extraParams.filter((v) => v.key === 'sort')[0];
        if (sort) {
            searchPath = 'sort-' + searchPath;
        }
        const order = extraParams === null || extraParams === void 0 ? void 0 : extraParams.filter((v) => v.key === 'order')[0];
        return {
            /**
             * 链接示例：
             *  - /search/Ntb/1/
             *  - /category-search/Ntb/Movies/1/
             *  - /sort-category-search/Ntb/Movies/time/desc/1/
             */
            url: url_join__WEBPACK_IMPORTED_MODULE_1___default()(searchPath, keywords || '', String((category === null || category === void 0 ? void 0 : category.value) || ''), String((sort === null || sort === void 0 ? void 0 : sort.value) || ''), String(sort ? ((order === null || order === void 0 ? void 0 : order.value) || 'desc') : ''), '1/')
        };
    }
}


/***/ }),
/* 232 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
// FIXME Cloudflare DDoS Protect
const siteMetadata = {
    name: '7torrents',
    description: '7torrents is a Public BitTorrent DHT search engine.',
    url: 'https://www.7torrents.cc/',
    search: {
        requestConfig: { url: '/search' },
        keywordsParam: 'query',
        categories: [
            {
                name: 'Order By',
                key: 'sort',
                options: [
                    { name: 'Seeders', value: 'seeders' },
                    { name: 'Leechers', value: 'leechers' },
                    { name: 'Added Time', value: 'created' },
                    { name: 'Size', value: 'length' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'div#results > div.media' },
            id: {
                selector: ':self',
                attr: 'onclick',
                filters: [
                    (q) => q.match(/\/torrent\/([a-z0-9]{40})/)[1]
                ]
            },
            title: { selector: ':self', data: 'name' },
            url: {
                selector: ':self',
                attr: 'onclick',
                filters: [
                    (q) => q.match(/location\.href='(.+)'/)[1]
                ]
            },
            link: { selector: 'div.media-right > a', attr: 'href' },
            time: { selector: ':self', data: 'added', filters: [{ name: 'parseTTL' }] },
            size: { selector: ':self', data: 'size' },
            seeders: { selector: ':self', data: 'seeders' },
            leechers: { selector: ':self', data: 'leechers' },
            comments: { text: 0 },
            category: { text: 'All' } // 该站点不支持 Category
        }
    }
};


/***/ }),
/* 233 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'ACG.RIP',
    description: '与动漫花园类似的日漫资源站点',
    url: 'https://acg.rip/',
    search: {
        keywordsParam: 'term'
    },
    selector: {
        search: {
            rows: { selector: 'table.post-index > tbody > tr' },
            id: {
                selector: 'td:nth-child(2) span.title a',
                attr: 'href',
                filters: [(q) => q.match(/(\d+)/)[0]]
            },
            title: { selector: 'td:nth-child(2) span.title a' },
            url: { selector: 'td:nth-child(2) span.title a', attr: 'href' },
            link: { selector: 'td:nth-child(3) a', attr: 'href' },
            time: { selector: 'td:nth-child(1) time', attr: 'datetime' },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(5) div.seed' },
            leechers: { selector: 'td:nth-child(5) div.leech' },
            completed: { selector: 'td:nth-child(5) div.done' }
        }
    }
};


/***/ }),
/* 234 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Acgsou; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);


const siteMetadata = {
    name: 'ACGsou',
    description: '简单动漫BT下载站全面为网友提供日本动画，漫画，电子书，动漫音乐，动漫游戏等优质资源的BT下载服务。',
    url: 'https://www.36dm.com/',
    legacyUrl: [
        'https://www.36dm.club/',
        'https://www.acgsou.com/'
    ],
    timezoneOffset: '+0800',
    search: {
        requestConfig: { url: '/search.php' },
        keywordsParam: 'keyword',
        categories: [
            {
                name: 'Category',
                key: 'sort_id',
                options: [
                    { name: '所有', value: 0 },
                    { name: '动画分类', value: 2 },
                    { name: '动画分类 - 新番连载', value: 7 },
                    { name: '动画分类 - 完整动画', value: 8 },
                    { name: '动画分类 - 剧场版', value: 9 },
                    { name: '动画分类 - DVDRIP', value: 10 },
                    { name: '动画分类 - BDRIP', value: 11 },
                    { name: '漫画分类', value: 3 },
                    { name: '漫画分类 - 连载漫画', value: 12 },
                    { name: '漫画分类 - 完整漫画', value: 13 },
                    { name: '漫画分类 - 原版漫画', value: 14 },
                    { name: '动漫音乐', value: 4 },
                    { name: '动漫音乐 - 动画MV', value: 15 },
                    { name: 'RAW/ISO', value: 5 },
                    { name: '日剧', value: 20 },
                    { name: '日剧 - 特摄片', value: 21 },
                    { name: '其他资源', value: 6 },
                    { name: '其他资源 - 其他动画', value: 16 },
                    { name: '其他资源 - 声优视频', value: 17 },
                    { name: '其他资源 - 动漫资讯', value: 19 },
                    { name: '其他资源 - 游戏', value: 18 }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'tbody#data_list > tr' },
            id: {
                selector: 'td:nth-child(3) a',
                attr: 'href',
                filters: [
                    (q) => q.match(/show-(.+)\.html/)[1]
                ]
            },
            title: { selector: 'td:nth-child(3) a' },
            url: { selector: 'td:nth-child(3) a', attr: 'href' },
            time: {
                selector: 'td:nth-child(1)',
                filters: [
                    (q) => {
                        // 2016/07/10
                        // 01/21 18:00
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(q, ['MM/DD HH:mm', 'YYYY/MM/DD']).valueOf();
                    }
                ]
            },
            size: { selector: 'td:nth-child(4)' },
            seeders: { text: 1 },
            leechers: { text: 1 },
            category: { selector: 'td:nth-child(2)' }
        },
        detail: {
            link: { selector: 'div#torrent_files a', attr: 'href' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Acgsou extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? '/search.php' : '1.html';
        return config;
    }
}


/***/ }),
/* 235 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'AniDex',
    description: 'A torrent tracker specialising in content from East Asia, including anime, manga, music, adult videos and more.',
    tags: ['anime', 'manga', 'jav', 'download', 'anidex', 'magnet'],
    url: 'https://anidex.info/',
    search: {
        keywordsParam: 'q',
        requestConfig: {
            params: { page: 'search' }
        },
        categories: [
            {
                name: 'Category',
                key: 'id',
                options: [
                    { name: 'All', value: '0' },
                    { name: 'Anime', value: '1,2,3' },
                    { name: 'Live Action', value: '4,5' },
                    { name: 'Light Novel', value: '6' },
                    { name: 'Manga', value: '7,8' },
                    { name: 'Music', value: '9,10,11' },
                    { name: 'Games', value: '12' },
                    { name: 'Applications', value: '13' },
                    { name: 'Pictures', value: '14' },
                    { name: 'Adult Video', value: '15' },
                    { name: 'Other', value: '16' }
                ]
            },
            {
                name: 'Sort',
                key: 's',
                options: [
                    { name: 'Filename', value: 'filename' },
                    { name: 'File Size', value: 'size' },
                    { name: 'Created', value: 'upload_timestamp' },
                    { name: 'Seeders', value: 'seeders' },
                    { name: 'Leechers', value: 'leechers' },
                    { name: 'Completed', value: 'completed' }
                ]
            },
            {
                name: 'Order',
                key: 'o',
                options: [
                    { name: 'Descending', value: 'desc' },
                    { name: 'Ascending', value: 'asc' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'div#content > div.table-responsive > table > tbody > tr' },
            id: { selector: 'td:nth-child(3) a', attr: 'id' },
            title: { selector: 'td:nth-child(3) a span[title]', attr: 'title' },
            url: { selector: 'td:nth-child(3) a', attr: 'href' },
            link: { selector: ['td:nth-child(5) a', 'td:nth-child(6) a'], attr: 'href' },
            time: { selector: 'td:nth-child(8)', attr: 'title' },
            size: { selector: 'td:nth-child(7)' },
            seeders: { selector: 'td:nth-child(9)' },
            leechers: { selector: 'td:nth-child(10)' },
            completed: { selector: 'td:nth-child(11)' },
            comments: { selector: 'td:nth-child(4) a[href$="#comments"]' },
            category: { selector: 'td:nth-child(1) a' }
        }
    }
};


/***/ }),
/* 236 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Animeclipse; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

const siteMetadata = {
    name: 'AnimeClipse',
    description: 'AnimeClipse is a Public site for Hellenic Fansubs Anime.',
    timezoneOffset: '+0200',
    url: 'http://www.animeclipse.com/',
    search: {
        requestConfig: {
            url: '/index.php',
            params: {
                ind: 'btitracker',
                active: 0,
                category: 0,
                tor_page: 50
            }
        },
        keywordsParam: 'search',
        categories: [
            {
                name: 'Category',
                key: 'category',
                options: [
                    { name: '----', value: '0' },
                    { name: 'Area 88', value: '16' },
                    { name: 'Black Lagoon', value: '13' },
                    { name: 'Bleach', value: '11' },
                    { name: 'Broken Blade', value: '137' },
                    { name: 'Candy Candy', value: '14' },
                    { name: 'Claymore', value: '20' },
                    { name: 'Danshi Koukousei no Nichijou', value: '156' },
                    { name: 'Darker than Black', value: '22' },
                    { name: 'Death Note', value: '19' },
                    { name: 'Devil May Cry', value: '129' },
                    { name: 'Dragonball Kai', value: '29' },
                    { name: 'Elfen Lied', value: '1' },
                    { name: 'Ergo Proxy', value: '15' },
                    { name: 'Fairy Tail', value: '30' },
                    { name: 'Ghost in the Shell: Arise', value: '135' },
                    { name: 'Golden Boy', value: '5' },
                    { name: 'Great Teacher Onizuka', value: '26' },
                    { name: 'Gungrave', value: '18' },
                    { name: 'Hajime no ippo', value: '24' },
                    { name: 'Highschool Of The Dead', value: '126' },
                    { name: 'Hunter X Hunter', value: '130' },
                    { name: 'Karas', value: '12' },
                    { name: 'Kenja no Mago', value: '155' },
                    { name: 'Movies', value: '8' },
                    { name: 'Plawres Sanshiro', value: '2' },
                    { name: 'Robin Hood no Daibouken', value: '32' },
                    { name: 'Rurouni Kenshin', value: '10' },
                    { name: 'SDF Macross', value: '131' },
                    { name: 'Seirei No Moribito', value: '21' },
                    { name: 'Shinrei Tantei Yakumo', value: '128' },
                    { name: 'Soul Eater', value: '28' },
                    { name: 'Suisei no Gargantia', value: '133' },
                    { name: 'Sword Art Online', value: '154' },
                    { name: 'Uchuu Kaizoku Captain Harlock', value: '127' },
                    { name: 'UFO Robo Grendizer', value: '31' }
                ]
            },
            {
                name: 'Status',
                key: 'active',
                options: [
                    { name: 'ALL', value: '0' },
                    { name: 'Active Only', value: '1' },
                    { name: 'Dead Only', value: '2' }
                ]
            },
            {
                name: 'Sort',
                key: 'order',
                options: [
                    { name: 'Date Added', value: 'added' },
                    { name: 'Category', value: 'cname' },
                    { name: 'Size', value: 'size' },
                    // 以下三个在请求时需要被转化为 &active= 所以如果传入这几个的话，Status的值会被覆盖
                    { name: 'Completed', value: '5' },
                    { name: 'Seeders', value: '3' },
                    { name: 'Leechers', value: '4' }
                ]
            },
            {
                name: 'Order',
                key: 'by',
                options: [
                    { name: 'Descending', value: 'DESC' },
                    { name: 'Ascending', value: 'ASC' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'tr.torrentRow' },
            id: { selector: 'a[href*="/download/"][title]', attr: 'title', filters: [(q) => q.replace('Download:', '')] },
            title: { selector: 'a[href*="/download/"][title]', attr: 'title', filters: [(q) => q.replace('Download:', '')] },
            url: { text: 'http://www.animeclipse.com/' },
            link: { selector: 'a[href*="/download/"]', attr: 'href' },
            time: { selector: 'td:nth-child(2) > table:nth-child(2) td:nth-child(2) span.torrentInfoData' },
            size: { selector: 'td:nth-child(2) > table:nth-child(2) td:nth-child(1) span.torrentInfoData' },
            seeders: { selector: 'td:nth-child(2) > table:nth-child(2) td:nth-child(5) span.torrentInfoData' },
            leechers: { selector: 'td:nth-child(2) > table:nth-child(2) td:nth-child(6) span.torrentInfoData' },
            completed: { selector: 'td:nth-child(2) > table:nth-child(2) td:nth-child(4) span.torrentInfoData' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Animeclipse extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        var _a, _b, _c;
        const extraSortParamsIndex = (_a = filter.extraParams) === null || _a === void 0 ? void 0 : _a.findIndex(v => v.key === 'order' && ['3', '4', '5'].includes(v.value));
        if (extraSortParamsIndex && extraSortParamsIndex > -1) {
            const extraSortParams = filter.extraParams[extraSortParamsIndex];
            extraSortParams.key = 'active';
            (_b = filter.extraParams) === null || _b === void 0 ? void 0 : _b.splice(extraSortParamsIndex, 1);
            (_c = filter.extraParams) === null || _c === void 0 ? void 0 : _c.push(extraSortParams);
        }
        return await super.transformSearchFilter(filter);
    }
}


/***/ }),
/* 237 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);

const siteMetadata = {
    name: 'Anime Tosho',
    description: 'AnimeTosho (AT) is an automated service that provides torrent files, magnet links and DDL for all anime releases',
    url: 'https://animetosho.org/',
    search: {
        requestConfig: { url: '/search' },
        keywordsParam: 'q',
        categories: [
            {
                name: 'Sort',
                key: 'order',
                options: [
                    { name: 'Newest first', value: '' },
                    { name: 'Oldest first', value: 'date-a' },
                    { name: 'Smallest first', value: 'size-a' },
                    { name: 'Sort: Largest first', value: 'size-d' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'div.home_list_entry' },
            id: { selector: 'div.link a', attr: 'href', filters: [(q) => q.match(/\.([nd\d]+)$/)[1]] },
            title: { selector: 'div.link a' },
            url: { selector: 'div.link a' },
            link: { selector: ['div.links > a[href$=".torrent"]', 'div.links > a[href^="magnet:?xt="]'], attr: 'href' },
            time: {
                selector: 'div.date',
                attr: 'title',
                filters: [
                    (q) => {
                        // 03/06/2011 08:17
                        // Today 01:59
                        // Yesterday 23:39
                        q = q.replace('Date/time submitted: ', '');
                        q = q.replace('Today', Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])().format('DD/MM/YYYY'));
                        q = q.replace('Yesterday', Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])().add(-1, 'day').format('DD/MM/YYYY'));
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(q, 'DD/MM/YYYY HH:mm').valueOf();
                    }
                ]
            },
            size: { selector: 'div.size' },
            seeders: { text: 0, selector: 'span[title*="Seeders"]', attr: 'title', filters: [(q) => q.match(/Seeders: (\d+)/)[1]] },
            leechers: { text: 0, selector: 'span[title*="Leechers"]', attr: 'title', filters: [(q) => q.match(/Leechers: (\d+)/)[1]] }
        }
    }
};


/***/ }),
/* 238 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'AniRena',
    description: 'AniRena is a Public torrent tracker for the latest anime and Japanese related torrents',
    url: 'https://www.anirena.com/',
    search: {
        keywordsParam: 's'
    },
    selector: {
        search: {
            rows: { selector: 'div.full2:not([id]) table tr' },
            id: { selector: 'div.torrents_small_info_data1 a[nohref]', attr: 'onClick', filters: [(q) => q.match(/details(\d+)/)[1]] },
            title: { selector: 'div.torrents_small_info_data1 a[nohref]', attr: 'title' },
            url: { text: 'https://www.anirena.com/' },
            link: { selector: 'div.torrents_small_info_data2b a[title!="Report a torrent"]', attr: 'href' },
            // 发布时间 动态加载，不做获取
            size: { selector: 'td.torrents_small_size_data1' },
            seeders: { selector: 'td.torrents_small_seeders_data1' },
            leechers: { selector: 'td.torrents_small_leechers_data1' },
            completed: { selector: 'td.torrents_small_downloads_data1' },
            category: { selector: 'td.torrents_small_type_data1 img', attr: 'title' }
        }
    }
};


/***/ }),
/* 239 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'AniSource',
    description: 'AniSource is a Public site for HD Anime raws.',
    timezoneOffset: '-0900',
    url: 'https://asnet.pw/',
    search: {
        keywordsParam: 'search',
        categories: [
            {
                name: 'Category',
                key: 'mode',
                options: [
                    { name: 'All', value: '' },
                    { name: 'Batches', value: 1 },
                    { name: 'スカーRaws', value: 2 },
                    { name: 'Raws-4U', value: 3 },
                    { name: 'Audio-4U', value: 5 },
                    { name: 'Leopard-Raws', value: 4 },
                    { name: 'Other', value: 6 }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'div.torrents > div[class^="item"]' },
            id: { selector: ':self', attr: 'id', filters: [(q) => q.replace('item_', '')] },
            title: { selector: 'span.info > a', attr: 'title', filters: [(q) => q.replace(/^Download /, '')] },
            url: { selector: 'span.info > a', attr: 'href' },
            link: { selector: 'span.category > a', attr: 'href' },
            time: {
                selector: 'span.info > font:last-of-type',
                filters: [
                    (q) => {
                        // 2010-06-07 at 13:29 Central US (UTC -9:00)
                        const rawDate = q.split(' | ')[0].replace('Date: ', '').split(' ');
                        return `${rawDate[0]} ${rawDate[2]}`;
                    }
                ]
            },
            size: {
                selector: 'span.info > font:last-of-type',
                filters: [
                    (q) => q.split(' | ')[1].replace('Size: ', '')
                ]
            },
            comments: { text: 0, selector: 'span.stats font:contains("Comments: ") b' },
            category: { selector: 'span.category' }
        }
    }
};


/***/ }),
/* 240 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return BtDB; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

// FIXME Cloudflare DDoS Protect
const siteMetadata = {
    name: 'BTDB',
    description: 'BTDB is a Public BitTorrent DHT search engine.',
    url: 'https://btdb.eu/',
    legacyUrl: [
        'https://btdb.to/'
    ],
    selector: {
        search: {
            rows: { selector: 'div.media' },
            id: { selector: 'h2.item-title a', attr: 'href', filters: [(q) => q.match(/([^/]+)$/)[1]] },
            title: { selector: 'h2.item-title a', attr: 'title' },
            url: { selector: 'h2.item-title a', attr: 'href' },
            link: { selector: ['a[href^="magnet:?xt="]', 'a[href$=".torrent"]'], attr: 'href' },
            time: { selector: 'small:nth-of-type(5) strong', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'small:nth-of-type(1) strong' },
            seeders: { selector: 'small:nth-of-type(3) strong' },
            leechers: { selector: 'small:nth-of-type(4) strong' },
            category: { text: 'Other' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class BtDB extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? `/search/${filter.keywords}/` : '/recent';
        return config;
    }
}


/***/ }),
/* 241 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'BT.etree',
    description: 'BT.etree is a Public Tracker dedicated to Bootleg FLAC MUSIC',
    url: 'https://bt.etree.org/',
    search: {
        keywordsParam: 'searchzzzz',
        requestConfig: {
            params: { cat: 0 }
        }
    },
    selector: {
        search: {
            rows: { selector: 'table[bgcolor="#CCCCCC"] tbody tr:gt(1)' },
            id: { selector: 'td:nth-child(2) a.details_link', attr: 'href', filters: [{ name: 'querystring', args: ['id'] }] },
            title: { selector: 'td:nth-child(2) a.details_link b' },
            url: { selector: 'td:nth-child(2) a.details_link', attr: 'href' },
            link: { selector: 'td:nth-child(3) a', attr: 'href' },
            time: { selector: 'td:nth-child(6)' },
            size: { selector: 'td:nth-child(7)' },
            author: { selector: 'td:nth-child(11)' },
            seeders: { selector: 'td:nth-child(9)' },
            leechers: { selector: 'td:nth-child(10)' },
            completed: { selector: 'td:nth-child(8)', filters: [(q) => q.replace('times', '')] },
            comments: { selector: 'td:nth-child(5)' },
            category: { selector: 'td:nth-child(1) a' }
        }
    }
};


/***/ }),
/* 242 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'ConCen',
    description: 'ConCen (Conspiracy Central) is a Public conspiracy related torrent index',
    url: 'https://concen.org/',
    search: {
        keywordsParam: 'title',
        requestConfig: {
            params: {
                title_op: 'allwords',
                title_1_op: 'not',
                title_1: '',
                seeds: 1
            }
        },
        categories: [
            {
                name: 'Order',
                key: 'order',
                options: [
                    { name: 'Title', value: 'title' },
                    { name: 'Uploaded', value: 'created' },
                    { name: 'Size', value: 'size' },
                    { name: 'Seeds', value: 'seeds' },
                    { name: 'Peers', value: 'peers' },
                    { name: 'Completed', value: 'completed' }
                ]
            },
            {
                name: 'Sort',
                key: 'sort',
                options: [
                    { name: 'Descending', value: 'desc' },
                    { name: 'Ascending', value: 'asc' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table  > tbody > tr:has(td.views-field-title)' },
            id: { selector: 'td.views-field-field-torrent a', attr: 'href', filters: [(q) => q.match(/(\d+)\.torrent$/)[1]] },
            title: { selector: 'td.views-field-title a' },
            url: { selector: 'td.views-field-title a', attr: 'href' },
            link: { selector: ['td.views-field-field-torrent a', 'td.views-field-name a'], attr: 'href' },
            time: { selector: 'td.views-field-created', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td.views-field-size' },
            seeders: { selector: 'td.views-field-seeds' },
            leechers: { selector: 'td.views-field-peers' },
            completed: { selector: 'td.views-field-completed' }
        }
    }
};


/***/ }),
/* 243 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Demonoid',
    description: 'Demonoid is a Public torrent site for MOVIES / TV / GENERAL',
    url: 'https://www.demonoid.is/',
    legacyUrl: [
        'https://www.dnoid.to/',
        'https://www.dnoid.pw/'
    ],
    search: {
        requestConfig: {
            url: '/files/',
            params: {
                category: 0,
                subcategory: 0,
                language: 0,
                seeded: 2,
                quality: 0,
                external: 2 // 0 Demonoid, 1 External, 2 Both
            }
        },
        keywordsParam: 'query',
        categories: [
            // 只做一级分类，不做二级分类
            {
                name: 'Category',
                key: 'category',
                options: [
                    { name: 'All', value: 0 },
                    { name: 'Applications', value: 1 },
                    { name: 'Audio Books', value: 2 },
                    { name: 'Books', value: 3 },
                    { name: 'Comics', value: 4 },
                    { name: 'Games', value: 5 },
                    { name: 'Japanese Anime', value: 6 },
                    { name: 'Miscellaneous', value: 7 },
                    { name: 'Movies', value: 8 },
                    { name: 'Music', value: 9 },
                    { name: 'Music Videos', value: 10 },
                    { name: 'Pictures', value: 11 },
                    { name: 'TV', value: 12 },
                    { name: 'All', value: 0 },
                    { name: 'Applications', value: 1 },
                    { name: 'Audio Books', value: 2 },
                    { name: 'Books', value: 3 },
                    { name: 'Comics', value: 4 },
                    { name: 'Games', value: 5 },
                    { name: 'Japanese Anime', value: 6 },
                    { name: 'Miscellaneous', value: 7 },
                    { name: 'Movies', value: 8 },
                    { name: 'Music', value: 9 },
                    { name: 'Music Videos', value: 10 },
                    { name: 'Pictures', value: 11 },
                    { name: 'TV', value: 12 }
                ]
            }
        ]
    },
    selector: {
        search: {
            // FIXME 以下部分未适配 merge 属性
            rows: { selector: 'table.font_12px tr:not([align])', merge: 2 },
            id: { selector: 'a[href^="/files/details/"]', attr: 'href' },
            title: { selector: 'a[href^="/files/details/"]' },
            url: { selector: 'a[href^="/files/details/"]', attr: 'href' },
            link: { selector: 'a[href^="/files/download"]', attr: 'href' },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(7)' },
            leechers: { selector: 'td:nth-child(8)' },
            completed: { selector: 'td:nth-child(6)' },
            comments: { text: 0, selector: 'td:nth-child(5)' },
            category: {
                selector: 'a[href*="category"]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['category'] }]
            },
            author: { selector: 'a[href^="/users/"]' }
        }
    }
};


/***/ }),
/* 244 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: '動漫花園資源網',
    description: '動漫花園資訊網是一個動漫愛好者交流的平台,提供最及時,最全面的動畫,漫畫,動漫音樂,動漫下載,BT,ED,動漫遊戲,資訊,分享,交流,讨论.',
    url: 'https://share.dmhy.org/',
    timezoneOffset: '+0800',
    search: {
        requestConfig: {
            url: '/topics/list',
            params: {
                sort_id: 0,
                team_id: 0,
                order: 'date-desc'
            }
        },
        keywordsParam: 'keyword',
        categories: [
            {
                name: '分類',
                key: 'sort_id',
                options: [
                    { name: '全部', value: '0' },
                    { name: '動畫', value: '2' },
                    { name: '季度全集', value: '31' },
                    { name: '漫畫', value: '3' },
                    { name: '港台原版', value: '41' },
                    { name: '日文原版', value: '42' },
                    { name: '音樂', value: '4' },
                    { name: '動漫音樂', value: '43' },
                    { name: '同人音樂', value: '44' },
                    { name: '流行音樂', value: '15' },
                    { name: '日劇', value: '6' },
                    { name: 'ＲＡＷ', value: '7' },
                    { name: '遊戲', value: '9' },
                    { name: '電腦遊戲', value: '17' },
                    { name: '電視遊戲', value: '18' },
                    { name: '掌機遊戲', value: '19' },
                    { name: '網絡遊戲', value: '20' },
                    { name: '遊戲周邊', value: '21' },
                    { name: '特攝', value: '12' },
                    { name: '其他', value: '1' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table tbody tr:has(a[href^="magnet:?"])' },
            id: { selector: 'a[href^="/topics/view/"]', attr: 'href', filters: [(q) => q.match(/\/view\/(\d+)/)[1]] },
            title: { selector: 'a[href^="/topics/view/"]' },
            url: { selector: 'a[href^="/topics/view/"]', attr: 'href' },
            // 种子链接只有到页面中才能获取、虽然也可以通过发布时间+magnet链接中的hash构造，但似乎并没有太多必要
            link: { selector: 'a[href^="magnet:?"]', attr: 'href' },
            time: { selector: 'td:nth-child(1) span' },
            size: { selector: 'td:nth-child(5)' },
            // 从某个时间段开始，这三个 （種子，下載，完成） 就一直不显示
            seeders: { selector: 'td:nth-child(6)' },
            leechers: { selector: 'td:nth-child(7)' },
            completed: { selector: 'td:nth-child(8)' },
            category: { selector: 'td:nth-child(2) a' },
            author: { selector: 'td:nth-child(9) a' }
        }
    }
};


/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return EHentai; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

const siteMetadata = {
    name: 'E-Hentai',
    description: 'E-Hentai is a Public site for Hentai doujinshi, manga.',
    timezoneOffset: '+0000',
    url: 'https://e-hentai.org/',
    search: {
        requestConfig: { url: '/torrents.php' },
        keywordsParam: 'search',
        categories: [
            {
                name: 'Domain',
                key: '#changeDomain',
                options: [
                    { name: 'E-Hentai', value: 'https://e-hentai.org/' },
                    { name: 'ExHentai', value: 'https://exhentai.org/' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.itg > tbody > tr:has(td)' },
            id: { selector: 'td:nth-child(3)' },
            title: { selector: 'a[href*="/gallerytorrents.php?gid="]' },
            url: { selector: 'td:nth-child(3) a', attr: 'href' },
            link: { selector: 'a[href*="/gallerytorrents.php?gid="]', attr: 'href' },
            time: { selector: 'td:first-child' },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(5)' },
            leechers: { selector: 'td:nth-child(6)' },
            completed: { selector: 'td:nth-child(7)' },
            author: { selector: 'td:nth-child(8)' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class EHentai extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async getTorrentDownloadLink(torrent) {
        const { link } = torrent;
        if (/gallerytorrents\.php/.test(link)) {
            const gtPage = await this.request({ url: link, responseType: 'document' });
            // 优先考虑使用 私有种子，如果没有 再使用 可再分发种子
            return this.getFieldData(gtPage.data, { selector: 'a[href*=".torrent"]:first-of-type', attr: 'href' });
        }
        return super.getTorrentDownloadLink(torrent);
    }
}


/***/ }),
/* 246 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Ettv; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_1__);


const siteMetadata = {
    name: 'ETTV',
    description: 'ETTV is a Public torrent site for TV / MOVIES, home of the  ETTV, ETHD and DTOne groups.',
    url: 'https://www.ettvcentral.com/',
    legacyUrl: [
        'https://www.ettv.tv/',
        'https://www.ettv.to/',
        'https://www.ettvdl.com/',
        'https://www.ettv.be/'
    ],
    search: {
        requestConfig: {
            url: '/torrents-search.php',
            params: { lang: 0 }
        },
        keywordsParam: 'search',
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { value: 88, name: 'Adult - Books' },
                    { value: 84, name: 'Adult - Games' },
                    { value: 82, name: 'Adult - HD-Movies' },
                    { value: 83, name: 'Adult - Hentai' },
                    { value: 86, name: 'Adult - Magazines' },
                    { value: 81, name: 'Adult - Movies' },
                    { value: 87, name: 'Adult - Other' },
                    { value: 85, name: 'Adult - Pictures' },
                    { value: 74, name: 'Anime - Dubbed/Subbed' },
                    { value: 73, name: 'Anime - Movies' },
                    { value: 75, name: 'Anime - Others' },
                    { value: 56, name: 'Books - Audio' },
                    { value: 55, name: 'Books - Comics' },
                    { value: 53, name: 'Books - Ebooks' },
                    { value: 54, name: 'Books - Magazines' },
                    { value: 68, name: 'Books - Others' },
                    { value: 90, name: 'Books - Others' },
                    { value: 58, name: 'Games - Android' },
                    { value: 71, name: 'Games - Others' },
                    { value: 57, name: 'Games - Windows' },
                    { value: 49, name: 'Movies - 3D' },
                    { value: 66, name: 'Movies - BluRay Disc/Remux' },
                    { value: 91, name: 'Movies - Bollywood' },
                    { value: 65, name: 'Movies - CAM/TS' },
                    { value: 80, name: 'Documentary' },
                    { value: 51, name: 'Movies - Dubs/Dual Audio' },
                    { value: 67, name: 'Movies - DVDR' },
                    { value: 1, name: 'Movies - HD 1080p' },
                    { value: 2, name: 'Movies - HD 720p' },
                    { value: 76, name: 'Movies - HEVC/x265' },
                    { value: 47, name: 'Movies - X264/H264' },
                    { value: 3, name: 'Movies - UltraHD/4K' },
                    { value: 42, name: 'Movies - XviD' },
                    { value: 60, name: 'Music - FLAC' },
                    { value: 59, name: 'Music - MP3' },
                    { value: 61, name: 'Music - Music Videos' },
                    { value: 69, name: 'Music - Others' },
                    { value: 95, name: 'Others - Misc' },
                    { value: 78, name: 'Others - Unsorted' },
                    { value: 63, name: 'Software - Android' },
                    { value: 64, name: 'Software - Mac' },
                    { value: 70, name: 'Software - Others' },
                    { value: 62, name: 'Software - Windows' },
                    { value: 94, name: 'Tutorials - Tutorials' },
                    { value: 79, name: 'Documentary' },
                    { value: 41, name: 'TV - HD/X264/H264' },
                    { value: 77, name: 'TV - HEVC/x265' },
                    { value: 5, name: 'TV - SD/X264/H264' },
                    { value: 50, name: 'TV - SD/XVID' },
                    { value: 72, name: 'TV - Sport' },
                    { value: 7, name: 'TV - TV Packs' },
                    { value: 89, name: 'TV - UltraHD/4K' }
                ],
                cross: { mode: 'append', key: 'c' }
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'div.myFrame-content > div > table > tbody > tr[class]' },
            id: { selector: 'a[href^="/torrent/"]', attr: 'href', filters: [(q) => q.match(/\/torrent\/(\d+)/)[1]] },
            title: { selector: 'a[href^="/torrent/"][title]', attr: 'title', filters: [(q) => q.replace(/ torrent$/, '')] },
            url: { selector: 'a[href^="/torrent/"]', attr: 'href' },
            time: { selector: 'td:nth-child(3)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(5)' },
            leechers: { selector: 'td:nth-child(6)' },
            completed: { selector: 'td:nth-child(7)' },
            category: {
                selector: 'td:nth-child(1) a',
                attr: 'href',
                filters: [
                    (q) => {
                        const cat = url_parse__WEBPACK_IMPORTED_MODULE_1___default()(q, true).query.cat;
                        return cat || 'Other';
                    }
                ]
            },
            author: { selector: 'td:nth-child(8)' }
        },
        detail: {
            link: { selector: 'a.download_link:last-of-type', attr: 'href' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Ettv extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? '/torrents-search.php' : '/torrents.php';
        return config;
    }
}


/***/ }),
/* 247 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);


const siteMetadata = {
    name: 'ExtraTorrent.cd',
    description: 'ExtraTorrent.cd is a Public tracker, a  popular alternative to the original ET site, providing Movie / TV / General magnets',
    url: 'https://extratorrent.si/',
    search: {
        requestConfig: { url: '/search/' },
        keywordsParam: 'search',
        categories: [
            {
                name: 'Category',
                key: 's_cat',
                options: [
                    { name: 'All', value: 0 },
                    { name: 'Movies', value: 4 },
                    { name: 'TV', value: 8 },
                    { name: 'Music', value: 5 },
                    { name: 'Adult Porn', value: 533 },
                    { name: 'Software', value: 7 },
                    { name: 'Games', value: 3 },
                    { name: 'Anime', value: 1 },
                    { name: 'Books', value: 2 },
                    { name: 'Pictures', value: 6 },
                    { name: 'Mobile', value: 416 },
                    { name: 'Other', value: 9 }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'tr[class^="tl"]' },
            id: { selector: 'td:nth-child(3) a[href*="/torrent/"]', attr: 'href', filters: [(q) => q.match(/\/torrent\/(\d+)/)[1]] },
            title: { selector: 'td:nth-child(3) a[href*="/torrent/"][title^="view"]' },
            url: { selector: 'td:nth-child(3) a[href*="/torrent/"]' },
            link: { selector: 'a[href^="magnet:?xt="]', attr: 'href' },
            time: {
                selector: 'td:nth-child(4)',
                filters: [
                    (q) => {
                        if (/ago$/.test(q)) { // 4-mins-ago
                            return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseTimeToLive */ "g"])(q.replace('-', ''));
                        }
                        else if (/^Today-/.test(q)) { // Today-22:03
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(q.replace('Today-', '')).valueOf();
                        }
                        else if (/Y-day-\d+/.test(q)) { // Y-day-2020
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])().add(-1, 'day').valueOf();
                        }
                        else { // 12-27-2019
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(q, 'MM-DD-YYYY').valueOf();
                        }
                    }
                ]
            },
            size: { selector: 'td:nth-child(5)' },
            seeders: { selector: 'td:nth-child(6)' },
            leechers: { selector: 'td:nth-child(7)' },
            category: { text: 'Other', selector: 'td:nth-child(3) a[title^="Browse"]', attr: 'title' },
            author: { selector: 'td:nth-child(3) a[href^="/profile"]' }
        }
    }
};


/***/ }),
/* 248 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Exttorrents; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

const CategoryMap = new Map([
    ['/anime/', 'Anime'],
    ['/anime/english-translated/', 'Anime English Translated'],
    ['/applications/', 'Apps'],
    ['/applications/android/', 'Apps Android'],
    ['/applications/ios/', 'Apps iOS'],
    ['/applications/linux/', 'Apps Linux'],
    ['/applications/mac/', 'Apps Mac'],
    ['/applications/other-applications/', 'Apps Other'],
    ['/applications/windows/', 'Apps Windows'],
    ['/books/', 'Books'],
    ['/books/audio-books/', 'Books Audiobooks'],
    ['/books/comics/', 'Books Comics'],
    ['/books/ebooks/', 'Books Ebooks'],
    ['/games/', 'Games'],
    ['/games/nds/', 'Games NDS'],
    ['/games/other-games/', 'Games Other'],
    ['/games/pc-games/', 'Games PC'],
    ['/games/ps3/', 'Games PS3'],
    ['/games/ps4/', 'Games PS4'],
    ['/games/psp/', 'Games PSP'],
    ['/games/switch/', 'Games Switch'],
    ['/games/wii/', 'Games Wii'],
    ['/games/xbox360/', 'Games Xbox360'],
    ['/movies/', 'Movies'],
    ['/movies/3d-movies/', 'Movies 3D'],
    ['/movies/bollywood/', 'Movies Bollywood'],
    ['/movies/documentary/', 'Movies Documentary'],
    ['/movies/dubbed-movies/', 'Movies Dubbed'],
    ['/movies/dvd/', 'Movies DVD'],
    ['/movies/highres-movies/', 'Movies Highres'],
    ['/movies/mp4/', 'Movies MP4'],
    ['/movies/ultrahd/', 'Movies UltraHD'],
    ['/music/', 'Music'],
    ['/music/aac/', 'Music AAC'],
    ['/music/lossless/', 'Music Lossless'],
    ['/music/mp3/', 'Music MP3'],
    ['/music/other-music/', 'Music Other'],
    ['/music/radio-shows/', 'Music Radio Shows'],
    ['/other/', 'Other'],
    ['/tv/', 'TV'],
    ['/xxx/', 'XXX'],
    ['/xxx/games/', 'XXX Games'],
    ['/xxx/hentai/', 'XXX Hentai'],
    ['/xxx/magazines/', 'XXX Magazines'],
    ['/xxx/pictures/', 'XXX Pictures'],
    ['/xxx/video/', 'XXX Video']
]);
const siteMetadata = {
    name: 'EXT Torrents',
    description: 'EXT Torrents is a Public torrent site for MOVIES / TV / GENERAL',
    url: 'https://ext.to/',
    legacyUrl: [
        'https://torrent.extto.com/',
        'https://ext.torrentbay.to/'
    ],
    search: {
        requestConfig: { url: '/search/' },
        keywordsParam: 'q',
        categories: [
            {
                name: 'Category',
                key: 'c',
                options: [
                    { name: 'ALL', value: '' },
                    { name: 'MOVIES', value: 'movies' },
                    { name: 'TV', value: 'tv' },
                    { name: 'MUSIC', value: 'music' },
                    { name: 'GAMES', value: 'games' },
                    { name: 'APPS', value: 'applications' },
                    { name: 'BOOKS', value: 'books' },
                    { name: 'ANIME', value: 'anime' },
                    { name: 'OTHER', value: 'other' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.table-striped > tbody > tr' },
            id: { selector: 'td:nth-child(1) div.float-left a', attr: 'href', filters: [(q) => q && q.match(/-(\d+)\/?$/)[1]] },
            title: { selector: 'td:nth-child(1) div.float-left a' },
            url: { selector: 'td:nth-child(1) div.float-left a', attr: 'href' },
            // 当且仅有torrents时，列表页才有种子文件链接存在，不然我们走details页面获取magnet链接
            link: { selector: 'td:nth-child(1) div.float-right a.torrent-dwn', attr: 'href' },
            time: { selector: 'td:nth-child(4)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(2)' },
            seeders: { selector: 'td:nth-child(5)' },
            leechers: { selector: 'td:nth-child(6)' },
            category: { selector: 'td:nth-child(1) div.related-posted a:last-of-type', attr: 'href', filters: [(q) => CategoryMap.get(q)] }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Exttorrents extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter = {}) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? '/search/' : '/latest/';
        return config;
    }
    async getTorrentDownloadLink(torrent) {
        let link = torrent.link;
        if (!link) {
            const { data } = await this.request({ url: torrent.url, responseType: 'document' });
            link = this.getFieldData(data, { selector: 'a.download-btn:last-of-type', attr: 'href' });
        }
        return link;
    }
}


/***/ }),
/* 249 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Eztv; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

const siteMetadata = {
    name: 'EZTV',
    description: 'EZTV is a Public torrent site for TV shows',
    url: 'https://eztv.re/',
    legacyUrl: [
        'https://eztv.wf/',
        'https://eztv.tf/',
        'https://eztv.yt/'
    ],
    search: {
        requestConfig: { url: '/search/' },
        keywordsParam: 'keywords'
    },
    selector: {
        search: {
            rows: { selector: 'table.forum_header_border tr[name="hover"].forum_header_border:has(a.magnet)' },
            id: { selector: 'td:nth-child(2) a', attr: 'href', filters: [(q) => q.match(/\/ep\/(\d+)/)[1]] },
            title: {
                selector: 'td:nth-child(2) a',
                attr: 'title',
                filters: [
                    (q) => q.replace('[eztv]', '').replace(/\(.*\)$/, '')
                ]
            },
            url: { selector: 'td:nth-child(2) a', attr: 'href' },
            link: { selector: 'td:nth-child(3) a.magnet, td:nth-child(3) a', attr: 'href' },
            time: { selector: 'td:nth-child(5)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(6)' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Eztv extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? `/search/${filter.keywords}` : '/';
        return config;
    }
}


/***/ }),
/* 250 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'GloDLS',
    description: 'GloDLS is a Public Torrent Tracker for MOVIES / TV / GENERAL',
    url: 'https://www.gtdb.to/',
    legacyUrl: [
        'https://glodls.to/'
    ],
    search: {
        requestConfig: {
            url: '/search_results.php',
            params: {
                incldead: 1,
                inclexternal: 0,
                lang: 0 // 0 all 1 english etc
            }
        },
        keywordsParam: 'search',
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { value: 50, name: 'XXX' },
                    { value: 5, name: 'Androvalue' },
                    { value: 28, name: 'Anime' },
                    { value: 18, name: 'Apps' },
                    { value: 51, name: 'Books' },
                    { value: 73, name: 'Desi Porn' },
                    { value: 75, name: 'FLAC' },
                    { value: 10, name: 'Games' },
                    { value: 55, name: 'Macintosh' },
                    { value: 52, name: 'Mobile' },
                    { value: 1, name: 'Movies' },
                    { value: 22, name: 'Music' },
                    { value: 33, name: 'Other' },
                    { value: 72, name: 'Packs' },
                    { value: 70, name: 'Pictures' },
                    { value: 76, name: 'Sports' },
                    { value: 74, name: 'Tutorials' },
                    { value: 41, name: 'TV' },
                    { value: 71, name: 'Vvalueeos' },
                    { value: 54, name: 'Windows' }
                ],
                cross: { mode: 'append', key: 'c' }
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.ttable_headinner tr.t-row:even' },
            id: { selector: 'td:nth-child(2) a[href*="klappe_torrent"]', attr: 'href', filters: [(q) => q && q.match(/klappe_torrent\('(.+)'\)/)[1]] },
            title: { selector: 'td:nth-child(2) a[title]', attr: 'title' },
            url: { selector: 'td:nth-child(2) a[title]', attr: 'href' },
            link: { selector: ['a[href^="/down.php?id="]', 'a[href*="itorrents.org/torrent/"]'], attr: 'href' },
            size: { selector: 'td:nth-child(5)' },
            seeders: { selector: 'td:nth-child(6)' },
            leechers: { selector: 'td:nth-child(7)' },
            category: {
                selector: 'td:nth-child(1) a',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['cat'] }]
            },
            author: { selector: 'td:nth-child(8)' }
        }
    }
};


/***/ }),
/* 251 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Ibit; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

const siteMetadata = {
    name: 'IBit',
    description: 'IBit is a Public Verified Torrent Search Engine',
    url: 'https://ibit.to/',
    legacyUrl: [
        'https://ibit.uno/',
        'https://ibit.am/'
    ],
    selector: {
        search: {
            rows: { selector: 'table.striped > tbody > tr' },
            id: { selector: 'a[href^="/torrent/"]', attr: 'href', filters: [(q) => q.match(/--([a-zA-Z0-9])\//)[1]] },
            title: { selector: 'a[href^="/torrent/"]' },
            url: { selector: 'a[href^="/torrent/"]', attr: 'href' },
            time: { selector: 'td:nth-child(4)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(5)' },
            seeders: { selector: 'td:nth-child(6)' },
            leechers: { selector: 'td:nth-child(7)' },
            comments: { text: 0, selector: 'small[title*="comments"]' },
            category: { selector: 'td:nth-child(3)' }
        },
        detail: {
            link: {
                selector: 'script:contains("magnet:?xt=")',
                filters: [
                    (q) => {
                        const rawHash = q.match(/play\('(.+?)'/)[1];
                        return `magnet:?xt=urn:btih:${rawHash.replace(/X-X/ig, '')}`;
                    }
                ]
            }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Ibit extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? `torrent-search/${filter.keywords}` : '/torrents/all';
        return config;
    }
}


/***/ }),
/* 252 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Isohunt2',
    description: 'Isohunt2 is a Public torrent search engine for MOVIES / TV / GENERAL',
    url: 'https://isohunt.nz/',
    legacyUrl: [
        'https://isohunt.fun/',
        'https://isohunt.tv/',
        'https://isohunt.ch/'
    ],
    search: {
        requestConfig: { url: '/torrent/' },
        keywordsParam: 'ihq',
        categories: [
            {
                name: 'Category',
                key: 'iht',
                options: [
                    { value: 0, name: 'All' },
                    { value: 1, name: 'Anime' },
                    { value: 2, name: 'Software' },
                    { value: 3, name: 'Games' },
                    { value: 4, name: 'Adult' },
                    { value: 5, name: 'Movies' },
                    { value: 6, name: 'Music' },
                    { value: 7, name: 'Other' },
                    { value: 8, name: 'Series & TV' },
                    { value: 9, name: 'Books' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table > tbody > tr[data-key="0"]' },
            id: {
                selector: 'td.title-row > a[href^="/torrent_details"]',
                attr: 'href',
                filters: [(q) => q.match(/torrent_details\/([^/])\//)[1]]
            },
            title: { selector: 'td.title-row > a[href^="/"] > span' },
            url: { selector: 'td.title-row > a[href^="/torrent_details"]', attr: 'href' },
            time: { selector: 'td.date-row', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td.size-row' },
            seeders: { selector: 'td.sn' },
            category: { selector: 'td.category-row > span', attr: 'title' }
        },
        detail: {
            link: { selector: 'a.btn-magnet', attr: 'href', filters: [{ name: 'querystring', args: ['url'] }] }
        }
    }
};


/***/ }),
/* 253 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Kisssub; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);


const siteMetadata = {
    name: '爱恋动漫',
    description: '爱恋BT分享站，动画～漫画～游戏～动漫音乐～片源（RAW）～各类ACG资源聚集地～欢迎各大佬发布入住！',
    url: 'http://www.kisssub.org/',
    search: {
        requestConfig: { url: '/search.php' },
        keywordsParam: 'keyword'
    },
    selector: {
        search: {
            rows: { selector: 'table#listTable > tbody > tr' },
            id: {
                selector: 'td:nth-child(3) a',
                attr: 'href',
                filters: [
                    (q) => q.match(/show-(.+?)\.html/)[1]
                ]
            },
            url: { selector: 'td:nth-child(3) a', attr: 'href' },
            title: { selector: 'td:nth-child(3) a' },
            time: {
                selector: 'td:nth-child(1)',
                filters: [
                    (q) => {
                        /**
                         * 该站没有在列表页返回具体时间，返回格式如下：
                         *   - 今天 xx:xx
                         *   - 昨天 xx:xx
                         *   - 前天 xx:xx
                         *   - YYYY/MM/DD
                         */
                        const timeRawPattern = q.match(/([今昨前])天 ([\d:]+)/);
                        if (timeRawPattern) {
                            const standard = Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])();
                            if (timeRawPattern[1] === '昨') {
                                standard.add(-1, 'days');
                            }
                            else if (timeRawPattern[1] === '前') {
                                standard.add(-2, 'days');
                            }
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(`${standard.format('YYYY/MM/DD')} ${timeRawPattern[2]}`, 'YYYY/MM/DD HH:mm').valueOf();
                        }
                        else {
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(q, 'YYYY/MM/DD').valueOf();
                        }
                    }
                ]
            },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(5)' },
            leechers: { selector: 'td:nth-child(6)' },
            completed: { selector: 'td:nth-child(7)' },
            category: { selector: 'td:nth-child(2)' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Kisssub extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    parseRowToTorrent(row) {
        const transformTorrent = super.parseRowToTorrent(row);
        // 我们只要知道hash就可以种子了，但是如果不传入name的话，种子命名是 `{hash}.torrent`
        transformTorrent.link = `http://v2.uploadbt.com/?r=down&hash=${transformTorrent.id}&name=${encodeURIComponent(transformTorrent.title)}`;
        return transformTorrent;
    }
}


/***/ }),
/* 254 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Legit Torrents',
    timezoneOffset: '-0700',
    description: 'Legit Torrents is a Public site for free and legal torrents',
    url: 'http://www.legittorrents.info/',
    search: {
        requestConfig: {
            url: '/index.php',
            params: {
                page: 'torrents',
                active: 0,
                category: 0
            }
        },
        keywordsParam: 'search'
    },
    selector: {
        search: {
            rows: { selector: 'table table table.lista > tbody > tr:has(a[href^="download.php?id="])' },
            id: {
                selector: 'a[title][href^="index.php?page=torrent-details&id="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['id'] }]
            },
            title: { selector: 'a[title][href^="index.php?page=torrent-details&id="]' },
            url: { selector: 'a[title][href^="index.php?page=torrent-details&id="]', attr: 'href' },
            link: { selector: 'a[href^="download.php?id="]', attr: 'href' },
            time: { selector: 'td time', filters: [{ name: 'parseTime', args: ['DD/MM/YYYY'] }] },
            seeders: { selector: 'td:nth-child(5)' },
            leechers: { selector: 'td:nth-child(6)' },
            completed: { selector: 'td:nth-child(7)' }
        }
    }
};


/***/ }),
/* 255 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Limetorrents; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

const siteMetadata = {
    name: 'LimeTorrents',
    description: 'LimeTorrents is a Public general torrent index with mostly verified torrents',
    url: 'https://www.limetorrents.info/',
    legacyUrl: [
        'https://www.limetorrents.asia/',
        'https://www.limetorrents.co/',
        'https://limetor.com/',
        'https://www.limetor.pro/',
        'https://www.limetorrents.io/',
        'https://www.limetorrents.cc/',
        'https://www.limetorrents.me/'
    ],
    search: {
    /**  这个站的category在搜索时一点用都没有
    categories: [
      {
        name: 'Category',
        key: 'category',
        options: [
          { name: 'All', value: 'all' },
          { name: 'Anime', value: 'anime' },
          { name: 'Applications', value: 'applications' },
          { name: 'Games', value: 'games' },
          { name: 'Movies', value: 'movies' },
          { name: 'Music', value: 'music' },
          { name: 'TV shows', value: 'tv' },
          { name: 'Other', value: 'other' }
        ]
      }
    ]
     */
    },
    selector: {
        search: {
            rows: { selector: '.table2 > tbody > tr[bgcolor]' },
            id: { selector: 'div.tt-name > a[href^="/"]', attr: 'href', filters: [(q) => q.match(/(\d+)\.html/)[1]] },
            title: {
                selector: 'div.tt-name > a[href^="/"]',
                attr: 'href',
                filters: [
                    (q) => q.match(/\/?(.+?)-torrent-\d+\.html/)[1].replace(/-/ig, ' ')
                ]
            },
            url: { selector: 'div.tt-name > a[href^="/"]', attr: 'href' },
            time: {
                selector: 'td:nth-child(2)',
                filters: [
                    (q) => q.split('-')[0],
                    (q) => q.replace('Last Month', '1 month ago').replace('+', 'ago'),
                    { name: 'parseTTL' }
                ]
            },
            size: { selector: 'td:nth-child(3)' },
            seeders: { selector: '.tdseed' },
            leechers: { selector: '.tdleech' },
            category: { selector: 'td:nth-child(2)', filters: [(q) => q.split('-')[1].replace(' in ', '')] }
        },
        detail: {
            link: { selector: ['a.csprite_dltorrent[href^="magnet:"]', 'a.csprite_dltorrent[href^="http://itorrents.org/"]'], attr: 'href' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Limetorrents extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? `search/all/${filter.keywords}/` : '/latest100';
        return config;
    }
}


/***/ }),
/* 256 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Magnet4You',
    description: 'Magnet4You is a Public magnet search engine',
    url: 'https://magnet4you.me/',
    search: {
        requestConfig: { url: '/search.php' },
        keywordsParam: 's'
    },
    selector: {
        search: {
            rows: { selector: 'table.tb4 > tbody > tr:has(a[href^="magnet:?xt="])' },
            id: { selector: 'a[href^="magnet/"]', attr: 'href', filters: [(q) => q.match(/\d+/)[0]] },
            title: { selector: 'a[href^="magnet/"]' },
            url: { selector: 'a[href^="magnet/"]', attr: 'href' },
            link: { selector: 'a[href^="magnet:?xt="]', attr: 'href' },
            time: { selector: 'td:nth-child(2)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(3)' },
            seeders: { selector: 'td:nth-child(5)', filters: [(q) => q.replace('K', '000')] },
            leechers: { selector: 'td:nth-child(6)', filters: [(q) => q.replace('K', '000')] },
            completed: { selector: 'td:nth-child(7)', filters: [(q) => q.replace('K', '000')] }
        }
    }
};


/***/ }),
/* 257 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const CategoryMap = new Map([
    ['vo', 'Films VO'],
    ['vostfr', 'Films VOSTFR'],
    ['dvdrip', 'Films DVDRIP'],
    ['bdrip', 'Films BDRIP'],
    ['webrip', 'Films WEBRIP'],
    ['hdrip', 'Films HDRIP'],
    ['dvdscreener', 'Films DVD Screener'],
    ['screener', 'Films Screener'],
    ['hd2160p', 'Films 2160p'],
    ['hd1080p', 'Films 1080p'],
    ['hd720p', 'Films 720p'],
    ['hd2160p-hdlight', 'Films 2160p HD Light'],
    ['hd1080p-hdlight', 'Films 1080p HD Light'],
    ['hd720p-hdlight', 'Films 720p HD Light'],
    ['hd3d', 'Films 3D'],
    ['serie-vostfr', 'Emission TV VOSTFR'],
    ['serie-vf', 'Emission TV VF'],
    ['pack-vf', 'Emission TV Pack VF'],
    ['pack-vostfr', 'Emission TV Pack VOSTFR'],
    ['pack-vo', 'Emission TV VO'],
    ['albums', 'Audio'],
    ['jeux', 'Jeu vidéo'],
    ['jeux-pc', 'Jeu vidéo PC'],
    ['jeux-console', 'Jeu vidéo Consoles'],
    ['logiciels', 'Application'],
    ['ebooks', 'eBook']
]);
const siteMetadata = {
    name: 'MonTorrent',
    description: 'MonTorrent is a FRENCH Public Indexer',
    url: 'https://www.montorrent.com/',
    search: {
        requestConfig: { url: '/recherche/' },
        keywordsParam: 'query'
        // TODO categories: []
    },
    selector: {
        search: {
            rows: { selector: 'div.t-details' },
            id: { selector: ':self', attr: 'id' },
            title: { selector: 'a[href^="/torrent/"]' },
            url: { selector: 'a[href^="/torrent/"]', attr: 'href' },
            link: { selector: 'a[href^="/telechargement/"]', attr: 'href' },
            // 该站无发布时间
            size: { selector: 'div.t-taille' },
            seeders: { selector: 'div.t-sources' },
            leechers: { selector: 'div.t-clients' },
            category: {
                selector: 'a[href*="id_cat"]',
                attr: 'class',
                filters: [
                    (q) => q.replace('liste-categorie-couleur ', ''),
                    (q) => CategoryMap.get(q)
                ]
            }
        }
    }
};


/***/ }),
/* 258 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'MyPornClub',
    description: 'MyPornClub is a Public Torrent Tracker for 3X',
    url: 'https://myporn.club/',
    selector: {
        search: {
            rows: { selector: 'div.torrents_list > div.torrent_element' },
            id: { selector: 'a[href^="/torrent/"]', attr: 'href', filters: [(q) => q.match(/\/torrent\/([a-zA-Z0-9]+)/)[1]] },
            title: { selector: 'a[href^="/torrent/"]' },
            url: { selector: 'a[href^="/torrent/"]', attr: 'href' },
            time: {
                selector: 'div.torrent_element_info span:nth-child(2)',
                filters: [
                    (q) => q.replace('Last year', '1 year ago').replace('Last month', '1 month ago'),
                    { name: 'parseTTL' }
                ]
            },
            size: { selector: 'div.torrent_element_info span:nth-child(4)' },
            seeders: { selector: 'div.torrent_element_info span:nth-child(10)' },
            leechers: { selector: 'div.torrent_element_info span:nth-child(12)' },
            completed: { selector: 'div.torrent_element_info span:nth-child(8)' },
            category: { text: 'XXX' },
            author: { selector: 'span.uploader_nick', filters: [(q) => q.replace(' >', '')] }
        },
        detail: {
            link: { selector: 'div.torrent_download_div > a', attr: 'href' }
        }
    }
};


/***/ }),
/* 259 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);

const siteMetadata = {
    name: 'Nyaa Pantsu',
    description: '另一个 Nyaa 的继承者，侧重于东亚（中国、日本及韩国）多媒体资源的BitTorrent站点',
    url: 'https://nyaa.net/',
    search: {
        requestConfig: { url: '/search' },
        categories: [
            {
                name: 'Domain',
                key: 'domain',
                options: [
                    { name: 'Fun', value: 'https://nyaa.net/' },
                    { name: 'Fap', value: 'https://sukebei.nyaa.net/' }
                ]
            },
            {
                name: 'Sort',
                key: 'sort',
                options: [
                    { name: 'Name', value: 1 },
                    { name: 'Created', value: 2 },
                    { name: 'File Size', value: 4 },
                    { name: 'Seeders', value: 5 },
                    { name: 'Leechers', value: 6 },
                    { name: 'Downloaders', value: 7 }
                ]
            },
            {
                name: 'Order',
                key: 'order',
                options: [
                    { name: 'Ascending', value: 'false' },
                    { name: 'Descending', value: 'true' }
                ]
            },
            {
                name: 'Category',
                key: 'c',
                options: [
                    { name: 'All categories', value: '_' },
                    { name: 'Anime', value: '3_' },
                    { name: 'Anime - Anime Music Video', value: '3_12' },
                    { name: 'Anime - English-translated', value: '3_5' },
                    { name: 'Anime - Non-English-translated', value: '3_13' },
                    { name: 'Anime - Raw', value: '3_6' },
                    { name: 'Audio', value: '2_' },
                    { name: 'Audio - Lossless', value: '2_3' },
                    { name: 'Audio - Lossy', value: '2_4' },
                    { name: 'Literature', value: '4_' },
                    { name: 'Literature - English-translated', value: '4_7' },
                    { name: 'Literature - Non-English-translated', value: '4_14' },
                    { name: 'Literature - Raw', value: '4_8' },
                    { name: 'Live Action', value: '5_' },
                    { name: 'Live Action - English-translated', value: '5_9' },
                    { name: 'Live Action - Idol/Promotional Video', value: '5_10' },
                    { name: 'Live Action - Non-English-translated', value: '5_18' },
                    { name: 'Live Action - Raw', value: '5_11' },
                    { name: 'Pictures', value: '6_' },
                    { name: 'Pictures - Graphics', value: '6_15' },
                    { name: 'Pictures - Photos', value: '6_16' },
                    { name: 'Software', value: '1_' },
                    { name: 'Software - Applications', value: '1_1' },
                    { name: 'Software - Games', value: '1_2' },
                    { name: 'All categories', value: '_' },
                    { name: 'Anime', value: '3_' },
                    { name: 'Anime - Anime Music Video', value: '3_12' },
                    { name: 'Anime - English-translated', value: '3_5' },
                    { name: 'Anime - Non-English-translated', value: '3_13' },
                    { name: 'Anime - Raw', value: '3_6' },
                    { name: 'Audio', value: '2_' },
                    { name: 'Audio - Lossless', value: '2_3' },
                    { name: 'Audio - Lossy', value: '2_4' },
                    { name: 'Literature', value: '4_' },
                    { name: 'Literature - English-translated', value: '4_7' },
                    { name: 'Literature - Non-English-translated', value: '4_14' },
                    { name: 'Literature - Raw', value: '4_8' },
                    { name: 'Live Action', value: '5_' },
                    { name: 'Live Action - English-translated', value: '5_9' },
                    { name: 'Live Action - Idol/Promotional Video', value: '5_10' },
                    { name: 'Live Action - Non-English-translated', value: '5_18' },
                    { name: 'Live Action - Raw', value: '5_11' },
                    { name: 'Pictures', value: '6_' },
                    { name: 'Pictures - Graphics', value: '6_15' },
                    { name: 'Pictures - Photos', value: '6_16' },
                    { name: 'Software', value: '1_' },
                    { name: 'Software - Applications', value: '1_1' },
                    { name: 'Software - Games', value: '1_2' }
                ]
            },
            {
                name: 'Category - Sukebei',
                key: 'c',
                options: [
                    { name: 'All categories', value: '_' },
                    { name: 'Art', value: '1_' },
                    { name: 'Art - Anime', value: '1_1' },
                    { name: 'Art - Doujinshi', value: '1_2' },
                    { name: 'Art - Games', value: '1_3' },
                    { name: 'Art - Manga', value: '1_4' },
                    { name: 'Art - Pictures', value: '1_5' },
                    { name: 'Real Life', value: '2_' },
                    { name: 'Real Life - Photobooks and Pictures', value: '2_1' },
                    { name: 'Real Life - Videos', value: '2_2' },
                    { name: 'All categories', value: '_' },
                    { name: 'Art', value: '1_' },
                    { name: 'Art - Anime', value: '1_1' },
                    { name: 'Art - Doujinshi', value: '1_2' },
                    { name: 'Art - Games', value: '1_3' },
                    { name: 'Art - Manga', value: '1_4' },
                    { name: 'Art - Pictures', value: '1_5' },
                    { name: 'Real Life', value: '2_' },
                    { name: 'Real Life - Photobooks and Pictures', value: '2_1' },
                    { name: 'Real Life - Videos', value: '2_2' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'tbody#torrentListResults > tr.torrent-info' },
            id: {
                selector: 'td:nth-child(2) > a',
                attr: 'href',
                filters: [
                    (q) => parseInt(q.match(/(\d+)/)[0])
                ]
            },
            title: { selector: 'td:nth-child(2) > a' },
            url: { selector: 'td:nth-child(2) > a', attr: 'href' },
            link: { selector: 'td:nth-child(3) > a', attr: 'href' },
            time: {
                selector: 'td:nth-child(8)',
                attr: 'title',
                filters: [
                    (q) => {
                        const normalTime = Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(q);
                        if (/下午/.test(q)) {
                            normalTime.add(12, 'hours');
                        }
                        return normalTime.valueOf();
                    }
                ]
            },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(5)' },
            leechers: { selector: 'td:nth-child(6)' },
            completed: { selector: 'td:nth-child(7)' },
            category: { selector: 'td:nth-child(1) > div > a', attr: 'title' }
        }
    }
};


/***/ }),
/* 260 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Nyaa Torrents',
    description: '一个侧重于东亚（中国、日本及韩国）多媒体资源的BitTorrent站点，是世界上最大的动漫专用种子索引站。',
    url: 'https://nyaa.si/',
    search: {
        keywordsParam: 'q',
        requestConfig: { params: { c: '0_0' } },
        categories: [
            {
                name: 'Domain',
                key: '#changeDomain',
                options: [
                    { name: 'Fun', value: 'https://nyaa.si/' },
                    { name: 'Fap', value: 'https://sukebei.nyaa.si/' }
                ]
            },
            {
                name: 'Filter',
                key: 'f',
                options: [
                    { name: 'No filter', value: 0 },
                    { name: 'No remakes', value: 1 },
                    { name: 'Trusted only', value: 2 }
                ]
            },
            {
                name: 'Sort',
                key: 's',
                options: [
                    { name: 'Created', value: 'id' },
                    { name: 'Size', value: 'size' },
                    { name: 'Seeders', value: 'seeders' },
                    { name: 'Leechers', value: 'leechers' },
                    { name: 'Downloaders', value: 'downloads' },
                    { name: 'Comments', value: 'comments' }
                ]
            },
            {
                name: 'Order',
                key: 'o',
                options: [
                    { name: 'Descending', value: 'desc' },
                    { name: 'Ascending', value: 'asc' }
                ]
            },
            {
                name: 'Category',
                key: 'c',
                options: [
                    { name: 'All categories', value: '0_0' },
                    { name: 'Anime', value: '1_0' },
                    { name: 'Anime - AMV', value: '1_1' },
                    { name: 'Anime - English', value: '1_2' },
                    { name: 'Anime - Non-English', value: '1_3' },
                    { name: 'Anime - Raw', value: '1_4' },
                    { name: 'Audio', value: '2_0' },
                    { name: 'Audio - Lossless', value: '2_1' },
                    { name: 'Audio - Lossy', value: '2_2' },
                    { name: 'Literature', value: '3_0' },
                    { name: 'Literature - English', value: '3_1' },
                    { name: 'Literature - Non-English', value: '3_2' },
                    { name: 'Literature - Raw', value: '3_3' },
                    { name: 'Live Action', value: '4_0' },
                    { name: 'Live Action - English', value: '4_1' },
                    { name: 'Live Action - Idol/PV', value: '4_2' },
                    { name: 'Live Action - Non-English', value: '4_3' },
                    { name: 'Live Action - Raw', value: '4_4' },
                    { name: 'Pictures', value: '5_0' },
                    { name: 'Pictures - Graphics', value: '5_1' },
                    { name: 'Pictures - Photos', value: '5_2' },
                    { name: 'Software', value: '6_0' },
                    { name: 'Software - Apps', value: '6_1' },
                    { name: 'Software - Games', value: '6_2' }
                ]
            },
            {
                name: 'Category - Sukebei',
                key: 'c',
                options: [
                    { name: 'All categories', value: '0_0' },
                    { name: 'Art', value: '1_0' },
                    { name: 'Art - Anime', value: '1_1' },
                    { name: 'Art - Doujinshi', value: '1_2' },
                    { name: 'Art - Games', value: '1_3' },
                    { name: 'Art - Manga', value: '1_4' },
                    { name: 'Art - Pictures', value: '1_5' },
                    { name: 'Real Life', value: '2_0' },
                    { name: 'Real Life - Pictures', value: '2_1' },
                    { name: 'Real Life - Videos', value: '2_2' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.torrent-list > tbody > tr' },
            id: { selector: 'td:nth-child(2) a:last-of-type', attr: 'href', filters: [(q) => q.match(/(\d+)/)[0]] },
            title: { selector: 'td:nth-child(2) a:last-of-type', attr: 'title' },
            url: { selector: 'td:nth-child(2) a:last-of-type', attr: 'href' },
            link: { selector: 'td:nth-child(3) a', attr: 'href' },
            time: { selector: 'td:nth-child(5)', data: 'timestamp' },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(6)' },
            leechers: { selector: 'td:nth-child(7)' },
            completed: { selector: 'td:nth-child(8)' },
            comments: { text: 0, selector: 'td:nth-child(2) a.comments' },
            category: { selector: 'td:nth-child(1) a', attr: 'title' }
        }
    }
};


/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Oxtorrent; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

const CategoryMap = new Map([
    ['Films', 'Movies'],
    ['Séries', 'TV Shows'],
    ['Logiciels', 'Softwares'],
    ['Musique', 'Music'],
    ['Jeux-Consoles', 'Console Games'],
    ['Jeux-PC', 'PC Games'],
    ['Ebook', 'Books'],
    ['Porno', 'XXX']
]);
const siteMetadata = {
    name: 'OxTorrent',
    description: 'OxTorrent is a French Public site for TV / MOVIES / GENERAL',
    url: 'https://www.oxtorrent.cc/',
    legacyUrl: [
        'https://www.oxtorrent.co/',
        'https://wwv.oxtorrent.com/',
        'https://www.smartorrent.tv/'
    ],
    selector: {
        search: {
            rows: { selector: 'table.table-hover > tbody > tr:has(a[href*="torrent/"])' },
            id: {
                selector: 'td:nth-child(1) a',
                attr: 'href',
                filters: [
                    (q) => q.match(/torrent\/(\d+)/)[1]
                ]
            },
            title: { selector: 'td:nth-child(1) a' },
            url: { selector: 'td:nth-child(1) a', attr: 'href' },
            size: { selector: 'td:nth-child(2)' },
            seeders: { selector: 'td:nth-child(3)' },
            leechers: { selector: 'td:nth-child(4)' },
            category: {
                selector: 'td:nth-child(1) i, td:nth-child(1) div i',
                attr: 'class',
                filters: [
                    (q) => CategoryMap.get(q)
                ]
            }
        },
        detail: {
            link: { selector: 'a[href^="magnet:?"]', attr: 'href' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Oxtorrent extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? `/recherche/${filter.keywords}` : '/';
        return config;
    }
}


/***/ }),
/* 262 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);

const siteMetadata = {
    name: 'PornLeech',
    description: 'PornLeech is a Public Tracker for 3X',
    url: 'http://pornleech.io/',
    search: {
        requestConfig: {
            url: '/index.php',
            params: {
                page: 'torrents',
                options: 0,
                active: 0 // 0 - All , 1 - Active only , 2 - Dead only
            }
        },
        keywordsParam: 'search'
    },
    selector: {
        search: {
            rows: { selector: 'table.lista > tbody > tr:has(a[href^="download.php?id="])' },
            id: { selector: 'td[valign="middle"] a', attr: 'href', filters: [(q) => q.match(/(\d+)\.html/)[1]] },
            title: { selector: 'td[valign="middle"] a' },
            url: { selector: 'td[valign="middle"] a', attr: 'href' },
            link: { selector: 'a[href^="download.php?id="]', attr: 'href' },
            time: {
                selector: 'td[valign="middle"] > p:nth-child(4)',
                filters: [
                    (q) => {
                        const dateRaw = q.match(/AddDate:\s*\u00a0\s*(.+?)$/)[1];
                        return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(`${dateRaw} -07:00`, 'HH:mm:ss DD/MM/YYYY Z').valueOf();
                    }
                ]
            },
            size: { selector: 'td[valign="middle"] > p:nth-child(3)', filters: [(q) => q.match(/Size:\s*\u00a0\s*(.+?)$/)[1]] },
            seeders: { selector: 'td[valign="middle"] > p:nth-child(5)', filters: [(q) => q.match(/Seeds:\s*\u00a0\s*(\d+)\u00a0/)[1]] },
            leechers: { selector: 'td[valign="middle"] > p:nth-child(5)', filters: [(q) => q.match(/Leechers:\s*\u00a0\s*(\d+)\u00a0/)[1]] },
            completed: { selector: 'td[valign="middle"] > p:nth-child(5)', filters: [(q) => q.match(/Complete:\s*\u00a0\s*(.+?)$/)[1].replace('---', '0')] }
        }
    }
};


/***/ }),
/* 263 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Rarbg; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _lib_axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36);



const appName = 'PTPP';
const siteMetadata = {
    name: 'RARBG',
    description: 'RARBG is a Public torrent site for MOVIES / TV / GENERAL',
    url: 'https://rarbg.to/',
    search: {
        requestConfig: {
            responseType: 'json',
            params: {
                mode: 'search',
                format: 'json_extended',
                /**
                 * By default the api will return only ranked torrents ( internal ) , scene releases + -rarbg releases + -rartv releases.
                 * If you want other groups included in the results use the ranked parameter with a value of 0 to get them included.
                 */
                ranked: 0
            }
        },
        keywordsParam: 'search_string'
    },
    selector: {
        search: {
            rows: { selector: 'torrent_results' },
            id: { selector: 'info_page', filters: [(q) => q.match(/_([a-zA-Z0-9]+)$/)[1]] },
            title: { selector: 'title' },
            url: { selector: 'info_page', filters: [(q) => `${q}&app_id=${appName}`] },
            link: { selector: 'download' },
            time: { selector: 'pubdate' },
            size: { selector: 'size' },
            seeders: { selector: 'seeders' },
            leechers: { selector: 'leechers' },
            category: { selector: 'category' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Rarbg extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super(...arguments);
        // docs: https://torrentapi.org/apidocs_v2.txt?app_id=PTPP
        this.apiPoint = 'https://torrentapi.org/pubapi_v2.php';
    }
    async getApiToken() {
        if (!this._token || // 未生成过 token
            !this._tokenExpired || // 未生成过 token
            this._tokenExpired <= Date.now() // Token Expired
        ) {
            const { data } = await _lib_axios__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"].get(this.apiPoint, {
                params: { get_token: 'get_token', app_id: appName }
            });
            this._token = data.token;
            this._tokenExpired = Date.now() + 10 * 60 * 1e3; // 10 minutes, though the real is `expire in 15 minutes`.
        }
        return this._token;
    }
    async request(axiosConfig = {}, retry = true) {
        axiosConfig.url = this.apiPoint;
        axiosConfig.params.token = await this.getApiToken();
        axiosConfig.params.app_id = appName;
        axiosConfig.responseType = 'json';
        await Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* sleep */ "k"])(3e3); // The api has a 1req/2s limit, so we force sleep 3s before request
        let resp = await super.request(axiosConfig);
        const errorCode = resp.data.error_code || 0;
        switch (errorCode) {
            case 2:
            case 4: // invalid token
                this._tokenExpired = Date.now();
                resp = await this.request(axiosConfig);
                break;
            case 20: // no results found
                // the api returns "no results" in some valid queries. (Mostly happened on same keywords re-search)
                // we do one retry on this case but we can't do more
                // because we can't distinguish between search without results and api malfunction
                if (retry) {
                    resp = await this.request(axiosConfig, false);
                }
        }
        return resp;
    }
}


/***/ }),
/* 264 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Sexypics; });
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);

const siteMetadata = {
    name: 'Sexy-Pics',
    description: 'Sexy-Pics is a Public Magnet Links site for 3X MP4',
    url: 'https://www.sexy-pics.us/',
    selector: {
        search: {
            rows: { selector: 'tr:has(td.m)' },
            id: { selector: 'td.n a', attr: 'href', filters: [(q) => q.match(/\/file\/(\d+)/)[1]] },
            title: { selector: 'td.n a', attr: 'title' },
            url: { selector: 'td.n a', attr: 'href' },
            link: { selector: 'td.m a', attr: 'href' },
            time: { selector: 'td:nth-child(3)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(6)' },
            seeders: { selector: 'td.s' },
            leechers: { selector: 'td.l' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Sexypics extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? `/${filter.keywords.charAt(0)}/${filter.keywords}` : '/browse/all/';
        return config;
    }
}


/***/ }),
/* 265 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Solid Torrents',
    description: 'Solid Torrents is a Public torrent meta-search engine',
    url: 'https://solidtorrents.net/',
    search: {
        requestConfig: {
            url: '/api/v1/search',
            responseType: 'json',
            params: {
                category: 'all',
                sort: 'seeders'
            }
        },
        keywordsParam: 'q'
    },
    selector: {
        search: {
            rows: { selector: 'results' },
            id: { selector: '_id' },
            title: { selector: 'title' },
            url: { selector: '_id', filters: [(q) => `/view/${q}`] },
            link: { selector: 'magnet' },
            time: { selector: 'imported' },
            size: { selector: 'size' },
            seeders: { selector: 'swarm.seeders' },
            leechers: { selector: 'swarm.leechers' },
            completed: { selector: 'swarm.downloads' },
            category: { selector: 'category' }
        }
    }
};


/***/ }),
/* 266 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const CategoryMap = new Map([
    // Audio
    [100, 'Audio'], [101, 'Music'], [102, 'Audio Books'], [103, 'Sound Clips'], [104, 'FLAC'],
    [199, 'Audio Other'],
    // Video
    [200, 'Video'], [201, 'Movies'], [202, 'Movies'], [203, 'Music Videos'], [204, 'Movie Clips'],
    [205, 'TV'], [206, 'Handheld'], [207, 'HD - Movies'], [208, 'HD - TV shows'], [209, '3D'],
    [299, 'Video Other'],
    // Applications
    [300, 'Applications'], [301, 'Windows'], [302, 'Mac'], [303, 'UNIX'], [304, 'Handheld'],
    [305, 'IOS (iPad/iPhone)'], [306, 'Android'], [399, 'Other OS'],
    // Games
    [400, 'Games'], [401, 'PC'], [402, 'Mac'], [403, 'PSx'], [404, 'XBOX360'], [405, 'Wii'],
    [406, 'Handheld'], [407, 'IOS (iPad/iPhone)'], [408, 'Android'], [499, 'Games Other'],
    // Porn
    [500, 'Porn'], [501, 'Movies'], [502, 'Movies DVDR'], [503, 'Pictures'], [504, 'Games'],
    [505, 'HD - Movies'], [506, 'Movie Clips'], [599, 'Porn other'],
    // Other
    [600, 'Other'], [601, 'E-books'], [602, 'Comics'], [603, 'Pictures'], [604, 'Covers'],
    [605, 'Physibles'], [699, 'Other Other']
]);
const siteMetadata = {
    name: 'The Pirate Bay',
    description: 'Pirate Bay (TPB) is the galaxy’s most resilient Public BitTorrent site',
    url: 'https://thepiratebay.org/',
    search: {
        requestConfig: {
            url: 'https://apibay.org/q.php',
            responseType: 'json',
            params: { cat: '' }
        },
        keywordsParam: 'q'
    },
    selector: {
        search: {
            rows: { selector: ':self' },
            id: { selector: 'id' },
            title: { selector: 'name' },
            url: { selector: 'id', filters: [(q) => `/description.php?id=${q}`] },
            link: { selector: 'info_hash', filters: [(q) => `magnet:?xt=urn:btih:${q}`] },
            time: { selector: 'added' },
            size: { selector: 'size' },
            seeders: { selector: 'seeders' },
            leechers: { selector: 'leechers' },
            category: { selector: 'category', filters: [(q) => CategoryMap.get(parseInt(q))] }
        }
    }
};


/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);

const siteMetadata = {
    name: 'Tokyo Toshokan',
    description: 'A BitTorrent Library for Japanese Media',
    url: 'https://www.tokyotosho.info/',
    search: {
        requestConfig: { url: '/search.php' },
        keywordsParam: 'terms',
        categories: [
            {
                name: 'Category',
                key: 'type',
                options: [
                    { name: 'All', value: 0 },
                    { name: 'Anime', value: 1 },
                    { name: 'Non-English', value: 10 },
                    { name: 'Manga', value: 3 },
                    { name: 'Drama', value: 8 },
                    { name: 'Music', value: 2 },
                    { name: 'Music Video', value: 9 },
                    { name: 'Raws', value: 7 },
                    { name: 'Hentai', value: 4 },
                    { name: 'Hentai (Anime)', value: 12 },
                    { name: 'Hentai (Manga)', value: 13 },
                    { name: 'Hentai (Games)', value: 14 },
                    { name: 'Batch', value: 11 },
                    { name: 'JAV', value: 15 },
                    { name: 'Other', value: 5 }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.listing tr.category_0', merge: 2 },
            id: { selector: 'tr:nth-child(1) a[href^="details.php?id="]', attr: 'href', filters: [{ name: 'querystring', args: ['id'] }] },
            title: { selector: 'tr:nth-child(1) td.desc-top a[type="application/x-bittorrent"]' },
            url: { selector: 'tr:nth-child(1)  a[href^="details.php?id="]', attr: 'href' },
            link: { selector: ['tr:nth-child(1) td.desc-top a[type="application/x-bittorrent"]', 'tr:nth-child(1) td.desc-top a[href^="magnet:?xt="]'], attr: 'href' },
            time: {
                selector: 'tr:nth-child(2) td.desc-bot',
                filters: [
                    (q) => Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(q
                        .match(/Date: (.+?) \|?/)[1]
                        .replace('UTC', '+00:00')).valueOf()
                ]
            },
            size: { selector: 'tr:nth-child(2) td.desc-bot', filters: [(q) => q && q.match(/Size: (.+?) \|?/)[1]] },
            seeders: { selector: 'tr:nth-child(2) td.stats > span:nth-child(1)' },
            leechers: { selector: 'tr:nth-child(2) td.stats > span:nth-child(2)' },
            completed: { selector: 'tr:nth-child(2) td.stats > span:nth-child(3)' },
            category: { selector: 'tr:nth-child(1) a[href*="cat"]', attr: 'href', filters: [{ name: 'querystring', args: ['cat'] }] },
            author: { selector: 'tr:nth-child(2) td.desc-bot', filters: [(q) => q && q.match(/Submitter: (.+?) \|?/)[1]] }
        }
    }
};


/***/ }),
/* 268 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Torlock; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);



const CategoryMap = new Map([
    ['tv0', 'Other'], ['tv1', 'Movies'], ['tv2', 'Music'], ['tv3', 'TV Shows'], ['tv4', 'Games'], ['tv5', 'Software'],
    ['tv6', 'Anime'], ['tv7', 'Adult'], ['tv8', 'Books'], ['tv9', 'Images'], ['tv10', 'Books'], ['tv12', 'Audiobook']
]);
const siteMetadata = {
    name: 'Torlock',
    description: 'Torlock is a torrent search site that lists verified torrents only for TV series and movies',
    url: 'https://www.torlock.com/',
    legacyUrl: [
        'https://www.torlock2.com/',
        'https://www.torlock.icu/'
    ],
    selector: {
        search: {
            rows: { selector: 'table > tbody > tr:has(td:has(div:has(a[href^="/torrent/"])))' },
            id: {
                selector: 'td:nth-child(1) > div > a[href^="/torrent/"]',
                attr: 'href',
                filters: [
                    (q) => q.match(/\/torrent\/(\d+)/)[1]
                ]
            },
            title: { selector: 'td:nth-child(1) > div > a' },
            url: { selector: 'td:nth-child(1) > div > a[href^="/torrent/"]', attr: 'href' },
            link: {
                selector: 'td:nth-child(1) > div > a[href^="/torrent/"]',
                attr: 'href',
                filters: [
                    (q) => `/tor/${q.match(/\/torrent\/(\d+)/)[1]}.torrent`
                ]
            },
            time: {
                selector: 'td:nth-child(2)',
                filters: [
                    (q) => {
                        if (/\//.test(q)) { // 1/2/2006
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(`${q} -07:00`, 'MM/DD/YYYY Z').valueOf();
                        }
                        else {
                            return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_1__[/* parseTimeToLive */ "g"])(q);
                        }
                    }
                ]
            },
            size: { selector: 'td:nth-child(3)' },
            seeders: { selector: 'td:nth-child(4)' },
            leechers: { selector: 'td:nth-child(5)' },
            category: { selector: 'span[class^="tv"]', attr: 'class', filters: [(q) => CategoryMap.get(q) || 'Other'] }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Torlock extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_2__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? `/all/torrents/${filter.keywords}.html` : '/fresh.html';
        return config;
    }
}


/***/ }),
/* 269 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Toros; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);



const CategoryMap = new Map([
    [1, 'Movies'], [2, 'Music'], [3, 'Television'], [4, 'Games'], [5, 'Software'],
    [6, 'Anime'], [7, 'Adult'], [8, 'Ebooks'], [9, 'Animation'], [10, 'Other'],
    [0, 'TBC']
]);
const siteMetadata = {
    name: 'TOROS',
    description: 'TOROS is a Public torrent index',
    url: 'https://www.toros.co/',
    selector: {
        search: {
            rows: { selector: 'table.table-responsive tr:has(a[href^="/torrent/"])' },
            id: { selector: 'a[href^="/torrent/"]', attr: 'href', filters: [(q) => q.match(/torrent\/(\d+)/)[1]] },
            title: { selector: 'a[href^="/torrent/"]' },
            url: { selector: 'a[href^="/torrent/"]', attr: 'href' },
            time: {
                selector: 'td:nth-child(2)',
                filters: [
                    (q) => {
                        if (/ago/.test(q)) {
                            return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseTimeToLive */ "g"])(q);
                        }
                        else if (/Yesterday/.test(q)) {
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])().add(-1, 'day').valueOf();
                        }
                        else {
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(q, 'DD MMM').valueOf();
                        }
                    }
                ]
            },
            size: { selector: 'td:nth-child(3)' },
            seeders: { selector: 'td:nth-child(4)' },
            leechers: { selector: 'td:nth-child(5)' },
            category: { selector: 'td:nth-child(1)', attr: 'class', filters: [(q) => CategoryMap.get(parseInt(q.replace(/^tv/, '')))] },
            author: { selector: 'td:nth-child(6)' }
        },
        detail: {
            link: { selector: 'a[href^="magnet:?xt="]', attr: 'href' }
        }
    }
};
// noinspection JSUnusedGlobalSymbols
class Toros extends _schema_AbstractBittorrentSite__WEBPACK_IMPORTED_MODULE_2__["default"] {
    async transformSearchFilter(filter) {
        const config = await super.transformSearchFilter(filter);
        config.url = filter.keywords ? `all/torrents/${filter.keywords}.html` : 'top100.html';
        return config;
    }
}


/***/ }),
/* 270 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Torrent4You',
    description: 'Torrent4You is a Public torrent storage cache',
    url: 'https://torrent4you.me/',
    search: {
        requestConfig: { url: '/search.php' },
        keywordsParam: 's',
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { name: 'Movies', value: 'movies' },
                    { name: 'Series', value: 'series' },
                    { name: 'Anime', value: 'anime' },
                    { name: 'Games', value: 'games' },
                    { name: 'Books', value: 'books' },
                    { name: 'Mp3', value: 'mp3' },
                    { name: 'XxX', value: 'xxx' }
                ]
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'table.tb4 > tbody > tr:has(form)' },
            id: { selector: 'td:nth-child(1) a', attr: 'href', filters: [(q) => q.match(/torrent\/(\d+)/)[1]] },
            title: { selector: 'td:nth-child(1) a' },
            url: { selector: 'td:nth-child(1) a', attr: 'href' },
            link: { selector: 'td:nth-child(1) form', attr: 'action' },
            time: { selector: 'td:nth-child(3)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(6)', filters: [(q) => q.replace('K', '000')] },
            leechers: { selector: 'td:nth-child(7)', filters: [(q) => q.replace('K', '000')] },
            completed: { selector: 'td:nth-child(8)', filters: [(q) => q.replace('K', '000')] },
            comments: { selector: 'td:nth-child(5)' }
        }
    }
};


/***/ }),
/* 271 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);


const siteMetadata = {
    name: 'TorrentGalaxy.org',
    description: 'TorrentGalaxy.org (TGx) is a Public site for TV / MOVIES / GENERAL',
    url: 'https://torrentgalaxy.to/',
    legacyUrl: [
        'https://torrentgalaxy.mx/',
        'https://torrentgalaxy.su/'
    ],
    search: {
        requestConfig: {
            url: '/torrents.php',
            params: { lang: 0 }
        },
        keywordsParam: 'search',
        categories: [
            {
                name: 'Category',
                key: 'cat',
                options: [
                    { value: 28, name: 'Anime - All' },
                    { value: 20, name: 'Apps - Mobile' },
                    { value: 19, name: 'Apps - OS' },
                    { value: 21, name: 'Apps - Other' },
                    { value: 18, name: 'Apps - Windows' },
                    { value: 13, name: 'Books - Audiobooks' },
                    { value: 12, name: 'Books - Ebooks' },
                    { value: 14, name: 'Books - Education' },
                    { value: 15, name: 'Books - Magazine' },
                    { value: 9, name: 'Documentaries - All' },
                    { value: 11, name: 'Games - Console' },
                    { value: 43, name: 'Games - Mobile' },
                    { value: 17, name: 'Games - Other' },
                    { value: 10, name: 'Games - Windows' },
                    { value: 3, name: 'Movies - 2K/4K UHD' },
                    { value: 46, name: 'Movies - Bollywood' },
                    { value: 45, name: 'Movies - CAM/TS' },
                    { value: 42, name: 'Movies - HD' },
                    { value: 4, name: 'Movies - Packs' },
                    { value: 1, name: 'Movies - SD' },
                    { value: 22, name: 'Music - Albums' },
                    { value: 26, name: 'Music - Discography' },
                    { value: 23, name: 'Music - Lossless' },
                    { value: 25, name: 'Music - Musicvideo' },
                    { value: 24, name: 'Music - Singles' },
                    { value: 40, name: 'Other - Other' },
                    { value: 37, name: 'Other - Pictures' },
                    { value: 33, name: 'Other - Training' },
                    { value: 41, name: 'TV - Episodes HD' },
                    { value: 5, name: 'TV - Episodes SD' },
                    { value: 6, name: 'TV - Packs' },
                    { value: 7, name: 'TV - Sports' },
                    { value: 35, name: 'XXX - HD' },
                    { value: 47, name: 'XXX - Misc' },
                    { value: 34, name: 'XXX - SD' }
                ],
                cross: { mode: 'append', key: 'c' }
            }
        ]
    },
    selector: {
        search: {
            rows: { selector: 'div.tgxtable > div:has(div[class="tgxtablecell shrink"])' },
            id: { selector: 'div a[href^="/torrent/"]', attr: 'href', filters: [(q) => q.match(/torrent\/(\d+)/)[1]] },
            title: { selector: 'div a[href^="/torrent/"]', attr: 'title' },
            url: { selector: 'div a[href^="/torrent/"]', attr: 'href' },
            link: { selector: ['div a[href^="magnet:?"]', 'a[href^="https://watercache.nanobytes.org/get"]'], attr: 'href' },
            time: {
                selector: 'div td:last-of-type',
                filters: [(q) => {
                        if (/ago/.test(q)) {
                            return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseTimeToLive */ "g"])(q);
                        }
                        else {
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(q, 'DD/MM/YY Z').valueOf();
                        }
                    }]
            },
            size: { selector: 'div span[style^="border-radius"]' },
            seeders: { selector: 'div span[title="Seeders/Leechers"] font b' },
            leechers: { selector: 'div span[title="Seeders/Leechers"] font:nth-child(2) b' },
            category: {
                selector: 'div a[href^="/torrents.php?cat="]',
                attr: 'href',
                filters: [{ name: 'querystring', args: ['cat'] }]
            },
            comments: { text: 0, selector: 'a[href^="/comments.php]' },
            author: { selector: 'span.username' }
        }
    }
};


/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'TorrentParadise',
    description: 'Torrent Paradise is a Public magnet indexer',
    url: 'https://torrentparadise.cl/',
    legacyUrl: [
        'https://torrentparadise.org/',
        'https://torrentparadise.to/',
        'https://torrentparadise.cc/',
        'https://torrentparadise.la/'
    ],
    search: {
        requestConfig: { url: 'search.php' },
        keywordsParam: 'f'
    },
    selector: {
        search: {
            rows: { selector: 'table.table-bordered > tbody > tr.table-default' },
            id: { selector: 'td:nth-child(2) a', attr: 'href', filters: [(q) => q.match(/torrent\/(\d+)/)[1]] },
            title: { selector: 'td:nth-child(2) a' },
            url: { selector: 'td:nth-child(2) a', attr: 'href' },
            time: { selector: 'td:nth-child(4)', filters: [{ name: 'parseTTL' }] },
            size: { selector: 'td:nth-child(3)' },
            seeders: { selector: 'td:nth-child(5)' },
            leechers: { selector: 'td:nth-child(6)' },
            category: { selector: 'td:nth-child(1) a' }
        },
        detail: {
            link: { selector: 'a[href^="magnet:?xt="]', attr: 'href' }
        }
    }
};


/***/ }),
/* 273 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
const siteMetadata = {
    name: 'Torrents.csv',
    description: 'Torrents.csv is a self-hostable, open source torrent search engine and database',
    url: 'https://torrents-csv.ml/',
    search: {
        requestConfig: {
            url: '/service/search',
            responseType: 'json',
            params: {
                page: 1,
                type_: 'torrent'
            }
        },
        keywordsParam: 'q'
    },
    selector: {
        search: {
            rows: { selector: ':self' },
            id: { selector: 'infohash' },
            title: { selector: 'name' },
            url: { text: 'https://torrents-csv.ml/' },
            link: { selector: 'infohash', filters: [(q) => `magnet:?xt=urn:btih:${q}`] },
            time: { selector: 'created_unix' },
            size: { selector: 'size_bytes' },
            seeders: { selector: 'seeders' },
            leechers: { selector: 'leechers' },
            completed: { selector: 'completed' }
        }
    }
};


/***/ }),
/* 274 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);

const CategoryMap = new Map([
    ['c1', 'Movies'], ['c2', 'Music'], ['c3', 'Series'], ['c4', 'Games'], ['c5', 'Apps'],
    ['c6', 'Anime'], ['c7', 'Adult'], ['c8', 'eBooks'], ['c9', 'Photos'], ['c10', 'Other']
]);
const siteMetadata = {
    name: 'YourBittorrent',
    description: 'YourBittorrent is a Public torrent index',
    url: 'https://yourbittorrent.com/',
    legacyUrl: [
        'https://yourbittorrent2.com/',
        'https://yourbittorrent.host/'
    ],
    search: {
        keywordsParam: 'q',
        requestConfig: { params: { v: '', c: '' } }
    },
    selector: {
        search: {
            rows: { selector: 'tr.table-default:has(a[href^="/torrent/"])' },
            id: { selector: 'td:nth-child(2) a', attr: 'href', filters: [(q) => q.match(/torrent\/(\d+)/)[1]] },
            title: { selector: 'td:nth-child(2) a' },
            url: { selector: 'td:nth-child(2) a', attr: 'href' },
            link: {
                selector: 'td:nth-child(2) a',
                attr: 'href',
                filters: [
                    // turn /torrent/25778710/have-i-got-news-for-you-s59e02-720p-britishb00bseztv.html
                    // into /down/25778710.torrent
                    (q) => `/down/${q.match(/torrent\/(\d+)/)[1]}.torrent`
                ]
            },
            time: {
                selector: 'td:nth-child(4)',
                filters: [
                    (q) => {
                        if (q.includes('Today')) {
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])().valueOf();
                        }
                        else if (q.includes('Yesterday')) {
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])().add(-1, 'day').valueOf();
                        }
                        else {
                            return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(`${q} -07:00`, 'DD/MM/YY Z').valueOf(); // 02/01/06 -07:00
                        }
                    }
                ]
            },
            seeders: { selector: 'td:nth-child(5)' },
            leechers: { selector: 'td:nth-child(6)' },
            category: { selector: 'td:nth-child(1)', attr: 'class', filters: [(q) => CategoryMap.get(q)] }
        }
    }
};


/***/ }),
/* 275 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return siteMetadata; });
/* harmony import */ var _shared_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);

const siteMetadata = {
    name: 'Zooqle',
    description: 'Zooqle is a Public torrent index providing a huge database of verified torrents',
    url: 'https://zooqle.com/',
    search: {
        requestConfig: { url: '/search' },
        keywordsParam: 'q'
    },
    selector: {
        search: {
            rows: { selector: 'tr:has(td[class^="text-muted3"])' },
            id: { selector: 'td:nth-child(1)' },
            title: { selector: 'td:nth-child(2) a' },
            url: { selector: 'td:nth-child(2) a', attr: 'href' },
            link: { selector: ['a[title^="Generate .torrent"]', 'a[title^="Magnet link"]'], attr: 'href' },
            time: {
                selector: 'td:nth-child(5)',
                filters: [
                    (q) => {
                        q = q.replace('long ago', '99 years').replace('yesterday', '1 day');
                        return Object(_shared_filter__WEBPACK_IMPORTED_MODULE_0__[/* parseTimeToLive */ "g"])(q);
                    }
                ]
            },
            size: { selector: 'td:nth-child(4)' },
            seeders: { selector: 'td:nth-child(6) div', filters: [(q) => (q.match(/Seeders: ([\d,])/) || [0, 0])[1]] },
            leechers: { selector: 'td:nth-child(6) div', filters: [(q) => (q.match(/Leechers: ([\d,])/) || [0, 0])[1]] },
            category: {
                selector: 'td:nth-child(2) > i',
                attr: 'href',
                filters: [
                    (q) => (q.split(' ') || ['', 'Other'])[1].replace('zqf-', '')
                ]
            }
        }
    }
};


/***/ }),
/* 276 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AvistaZ; });
/* harmony import */ var _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _shared_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);
/* harmony import */ var sizzle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sizzle__WEBPACK_IMPORTED_MODULE_3__);




class AvistaZ extends _schema_AbstractPrivateSite__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super(...arguments);
        this.initConfig = {
            search: {
                keywordsParam: 'search',
                requestConfig: {
                    url: '/torrents',
                    params: {
                        in: 1
                    }
                }
            },
            userInfo: {
                pickLast: ['id', 'name', 'joinTime'],
                process: [
                    {
                        requestConfig: { url: '/' },
                        fields: ['name']
                    },
                    {
                        requestConfig: { url: '/profile/$userName$' },
                        assertion: { name: 'userName' },
                        fields: ['messageCount', 'id', 'uploaded', 'downloaded', 'ratio', 'levelName', 'bonus', 'joinTime', 'seeding']
                    }
                ]
            },
            selector: {
                search: {
                    rows: { selector: 'table.table:first > tbody > tr:has(a[href*="/torrent/"])' },
                    id: {
                        selector: 'a.torrent-filename',
                        attr: 'href',
                        filters: [(query) => {
                                const queryMatch = query.match(/\/torrent\/(\d+)/);
                                return queryMatch && queryMatch.length >= 2 ? parseInt(queryMatch[1]) : 0;
                            }]
                    },
                    title: {
                        selector: 'a.torrent-filename',
                        attr: 'title',
                        filters: [
                            (query) => query.replace('Torrent Details - ', '')
                        ]
                    },
                    url: { selector: 'a.torrent-filename', attr: 'href' },
                    link: { selector: 'a.torrent-download-icon', attr: 'href' },
                    time: { selector: '> td:nth-child(4) > span', attr: 'title' },
                    size: { selector: '> td:nth-child(6)' },
                    author: { selector: 'span.pull-right:has( > i.fa-upload) > span.badge-user' },
                    category: {
                        selector: '> td:nth-child(1) > i',
                        attr: 'title',
                        filters: [
                            (query) => query.replace(' Torrent', '')
                        ]
                    },
                    seeders: { selector: ' > td:nth-child(7)' },
                    leechers: { selector: '> td:nth-child(8)' },
                    completed: { selector: '> td:nth-child(9)' },
                    comments: { selector: '> td:nth-child(5)' },
                    tags: [
                        { name: 'Free', selector: 'i.fa-star' },
                        { name: '2xUp', selector: 'i.fa-diamond' },
                        { name: '50%', selector: 'i.fa-star-half-o' }
                    ]
                },
                userInfo: {
                    // url: '/',
                    name: {
                        selector: ["a[href*='/profile/']:first"],
                        attr: 'href',
                        filters: [
                            (query) => {
                                const queryMatch = query.match(/profile\/(.+)/);
                                return (queryMatch && queryMatch.length >= 2) ? queryMatch[1] : '';
                            }
                        ]
                    },
                    // url: '/profile/$userName$'
                    messageCount: {
                        selector: ['a[title=Messages] span.message-count.badge'],
                        filters: [parseInt]
                    },
                    id: {
                        selector: ["td:contains('User ID') + td"],
                        filters: [parseInt]
                    },
                    uploaded: {
                        selector: ["td:contains('Uploaded') + td"],
                        filters: [{ name: 'parseSize' }]
                    },
                    downloaded: {
                        selector: ["td:contains('Downloaded') + td"],
                        filters: [{ name: 'parseSize' }]
                    },
                    ratio: {
                        selector: "td:contains('Ratio') + td",
                        filters: [{ name: 'parseNumber' }]
                    },
                    levelName: {
                        selector: "td:contains('Rank') + td"
                    },
                    bonus: {
                        selector: ["td:contains('Bonus Points') + td"],
                        filters: [{ name: 'parseNumber' }]
                    },
                    joinTime: {
                        selector: "td:contains('Joined') + td",
                        filters: [
                            (query) => {
                                const timeString = query.split(' (')[0];
                                return Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(timeString).isValid() ? Object(_shared_dayjs__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(timeString).valueOf() : timeString;
                            }
                        ]
                    },
                    seeding: {
                        selector: ["li:contains('Seeding'):first", "li:contains('Seeds'):first"],
                        filters: [{ name: 'parseNumber' }]
                    }
                }
            }
        };
    }
    async flushUserInfo(lastUserInfo = {}) {
        let baseUserInfo = await super.flushUserInfo();
        if (baseUserInfo.name && !baseUserInfo.seedingSize) {
            baseUserInfo = { seedingSize: 0, ...baseUserInfo }; // 基底属性
            // 生成页面信息
            for (const pageInfo = { count: 1, current: 1 }; pageInfo.current <= pageInfo.count; pageInfo.current++) {
                const { data: TListDocument } = await this.request({
                    url: `/profile/${baseUserInfo.name}/active`,
                    params: { order: 'progress', sort: 'desc', page: pageInfo.current },
                    responseType: 'document'
                });
                if (pageInfo.count === 1) {
                    pageInfo.count = this.getFieldData(TListDocument, {
                        text: 1,
                        selector: 'ul.pagination:first > li:has(a[href*="/active?page="]):nth-last-child(2) > a',
                        attr: 'href',
                        filters: [(query) => parseInt(url_parse__WEBPACK_IMPORTED_MODULE_2___default()(query, true).query.page) || 1]
                    });
                }
                const trAnothers = sizzle__WEBPACK_IMPORTED_MODULE_3___default()('table.table.table-condensed > tbody > tr', TListDocument);
                trAnothers.forEach(trAnother => {
                    const statusAnother = sizzle__WEBPACK_IMPORTED_MODULE_3___default()('> td:eq(3)', trAnother)[0];
                    if (statusAnother && statusAnother.innerText.includes('seed')) { // 只统计做种状态的
                        baseUserInfo.seedingSize += this.getFieldData(trAnother, {
                            selector: 'span[title="File Size"]',
                            filters: [{ name: 'parseSize' }]
                        });
                    }
                });
            }
        }
        return baseUserInfo;
    }
}


/***/ }),
/* 277 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "siteMetadata", function() { return /* binding */ siteMetadata; });
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ hdai_hdai; });

// EXTERNAL MODULE: ./src/userscript/sites/schema/NexusPHP.ts
var NexusPHP = __webpack_require__(16);

// EXTERNAL MODULE: ./node_modules/lodash-es/_isPrototype.js
var _isPrototype = __webpack_require__(24);

// EXTERNAL MODULE: ./node_modules/lodash-es/_overArg.js
var _overArg = __webpack_require__(53);

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeKeys.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = Object(_overArg["a" /* default */])(Object.keys, Object);

/* harmony default export */ var _nativeKeys = (nativeKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseKeys.js



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseKeys_hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!Object(_isPrototype["a" /* default */])(object)) {
    return _nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (_baseKeys_hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _baseKeys = (baseKeys);

// EXTERNAL MODULE: ./node_modules/lodash-es/_getNative.js + 4 modules
var _getNative = __webpack_require__(12);

// EXTERNAL MODULE: ./node_modules/lodash-es/_root.js
var _root = __webpack_require__(7);

// CONCATENATED MODULE: ./node_modules/lodash-es/_DataView.js



/* Built-in method references that are verified to be native. */
var DataView = Object(_getNative["a" /* default */])(_root["a" /* default */], 'DataView');

/* harmony default export */ var _DataView = (DataView);

// EXTERNAL MODULE: ./node_modules/lodash-es/_Map.js
var _Map = __webpack_require__(29);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Promise.js



/* Built-in method references that are verified to be native. */
var Promise = Object(_getNative["a" /* default */])(_root["a" /* default */], 'Promise');

/* harmony default export */ var _Promise = (Promise);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Set.js



/* Built-in method references that are verified to be native. */
var Set = Object(_getNative["a" /* default */])(_root["a" /* default */], 'Set');

/* harmony default export */ var _Set = (Set);

// CONCATENATED MODULE: ./node_modules/lodash-es/_WeakMap.js



/* Built-in method references that are verified to be native. */
var WeakMap = Object(_getNative["a" /* default */])(_root["a" /* default */], 'WeakMap');

/* harmony default export */ var _WeakMap = (WeakMap);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseGetTag.js + 2 modules
var _baseGetTag = __webpack_require__(13);

// EXTERNAL MODULE: ./node_modules/lodash-es/_toSource.js
var _toSource = __webpack_require__(19);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getTag.js








/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = Object(_toSource["a" /* default */])(_DataView),
    mapCtorString = Object(_toSource["a" /* default */])(_Map["a" /* default */]),
    promiseCtorString = Object(_toSource["a" /* default */])(_Promise),
    setCtorString = Object(_toSource["a" /* default */])(_Set),
    weakMapCtorString = Object(_toSource["a" /* default */])(_WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag["a" /* default */];

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (_Map["a" /* default */] && getTag(new _Map["a" /* default */]) != mapTag) ||
    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||
    (_Set && getTag(new _Set) != setTag) ||
    (_WeakMap && getTag(new _WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = Object(_baseGetTag["a" /* default */])(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? Object(_toSource["a" /* default */])(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/* harmony default export */ var _getTag = (getTag);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArguments.js + 1 modules
var isArguments = __webpack_require__(17);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArray.js
var isArray = __webpack_require__(10);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArrayLike.js
var isArrayLike = __webpack_require__(21);

// EXTERNAL MODULE: ./node_modules/lodash-es/isBuffer.js
var isBuffer = __webpack_require__(42);

// EXTERNAL MODULE: ./node_modules/lodash-es/isTypedArray.js + 1 modules
var isTypedArray = __webpack_require__(45);

// CONCATENATED MODULE: ./node_modules/lodash-es/isEmpty.js









/** `Object#toString` result references. */
var isEmpty_mapTag = '[object Map]',
    isEmpty_setTag = '[object Set]';

/** Used for built-in method references. */
var isEmpty_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var isEmpty_hasOwnProperty = isEmpty_objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (Object(isArrayLike["a" /* default */])(value) &&
      (Object(isArray["a" /* default */])(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        Object(isBuffer["a" /* default */])(value) || Object(isTypedArray["a" /* default */])(value) || Object(isArguments["a" /* default */])(value))) {
    return !value.length;
  }
  var tag = _getTag(value);
  if (tag == isEmpty_mapTag || tag == isEmpty_setTag) {
    return !value.size;
  }
  if (Object(_isPrototype["a" /* default */])(value)) {
    return !_baseKeys(value).length;
  }
  for (var key in value) {
    if (isEmpty_hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ var lodash_es_isEmpty = (isEmpty);

// CONCATENATED MODULE: ./src/userscript/sites/private/hdai.ts


const categoriesMap = {
    1: '电影Movies',
    2: '电视剧TV Series',
    3: '综艺TV Shows',
    4: '纪录片Documentaries',
    5: '动漫Animations',
    6: '音乐视频Music Videos',
    7: '体育Sports',
    8: '音乐Music',
    9: '电子书Ebook',
    10: '软件Software',
    11: '游戏Game',
    12: '资料Education',
    13: '旅游Travel',
    14: '美食Food',
    15: '其他Misc'
};
const siteMetadata = {
    name: 'HDAI',
    timezoneOffset: '+0800',
    schema: 'NexusPHP',
    url: 'https://www.hd.ai/',
    tags: ['影视'],
    collaborator: ['indeedsi'],
    search: {
        requestConfig: {
            method: 'POST',
            url: '/Torrents.tableList',
            responseType: 'json'
        }
    },
    selector: {
        search: {
            rows: { selector: 'data.items' },
            id: { selector: 'id', filters: [] },
            title: { selector: 'name' },
            subTitle: { selector: 'small_descr' },
            url: { selector: 'details', filters: [] },
            link: { selector: 'download', filters: [] },
            time: { selector: 'added' },
            size: { selector: 'size' },
            author: {
                selector: '_owner',
                filters: [
                    (query) => /<a/.test(query) ? (query.match(/>(.+?)</) || ['', ''])[1] : query
                ]
            },
            category: {
                selector: 'category',
                // elementProcess: () => {},  // 这里不需要，因为JSON返回不调用 elementProcess，直接进入 filters 处理
                filters: [
                    // @ts-ignore
                    (query) => categoriesMap[query]
                ]
            },
            seeders: { selector: 'seeders' },
            leechers: { selector: 'leechers' },
            completed: { selector: 'times_completed' },
            comments: { selector: 'comments' }
        }
    }
};
class hdai_hdai extends NexusPHP["default"] {
    // FIXME 此处仅处理了 keywords，对于其他信息未作处理（因为未为该站添加 category 信息
    async transformSearchFilter(filter) {
        const config = {};
        const searchParams = {};
        if (filter.keywords) {
            searchParams.keyword = filter.keywords;
        }
        // 将其转到 config.params 中
        const params = new URLSearchParams([['page', '1'], ['limit', '100']]);
        if (!lodash_es_isEmpty(searchParams)) {
            params.set('searchParams', JSON.stringify(searchParams));
        }
        config.data = params;
        return config;
    }
}


/***/ }),
/* 278 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./src/userscript/lib/sites.ts
const supportList = {};
const context = __webpack_require__(87);
context.keys().forEach(async (value) => {
    const moduleName = value.replace(/^\.\//, '').replace(/\.ts$/, '');
    if (!moduleName.startsWith('schema')) { // 'schema/Abstract' 不应该被任何形式的导入和引用，也不会被构造
        supportList[moduleName] = await context(value);
    }
});
class Sites {
    get ctx() {
        return context;
    }
    get supportList() {
        return supportList;
    }
    get allSiteMetaData() {
        return Object.keys(supportList).map(key => this.getSiteMetaData(key));
    }
    get enabledSite() {
        return new Set(GM_getValue('enable_sites', []));
    }
    getSiteMetaData(key) {
        return { ...supportList[key].siteMetadata, type: key.split('/')[0], key };
    }
    flushEnabledSite(enabledSites) {
        GM_setValue('enable_sites', Array.from(enabledSites));
    }
    enableSite(siteName) {
        const site = this.enabledSite;
        site.add(siteName);
        this.flushEnabledSite(site);
    }
    disableSite(siteName) {
        const site = this.enabledSite;
        site.delete(siteName);
        this.flushEnabledSite(site);
    }
    async getSite(siteName) {
        const siteModule = supportList[siteName];
        // eslint-disable-next-line prefer-const
        let { siteMetadata: siteMetaData, default: SiteClass } = siteModule;
        if (!siteMetaData.schema) {
            siteMetaData.schema = siteName.includes('private') ? 'AbstractPrivateSite' : 'AbstractBittorrentSite';
        }
        /**
         * 如果该模块没有导出 default class，那么我们认为我们需要从基类继承
         * 并覆写基类的的 siteMetaData 信息
         */
        if (!SiteClass) {
            const schemaModule = await context(`./schema/${siteMetaData.schema}.ts`);
            SiteClass = schemaModule.default;
        }
        // @ts-ignore
        return new SiteClass({}, siteMetaData);
    }
}

// CONCATENATED MODULE: ./src/userscript/lib/application.ts

class application_Application {
    constructor() {
        // 脚本应用中外抛的对象
        this.sites = new Sites();
        this.info = GM_info;
        this.isInit = false;
    }
    async init() {
        // 首先 判断是不是在install页面，如果是的话，重定向到安装后的首页，即 '#/'
        if (location.hash.search('#/install') >= 0) {
            location.hash = '#/';
        }
        this.isInit = true;
        console.log('Insert PTM on Manager Page');
    }
}

// EXTERNAL MODULE: ./src/userscript/lib/axios.ts
var axios = __webpack_require__(36);

// CONCATENATED MODULE: ./src/userscript/main.ts


// 检查用户脚本平台
if (typeof GM_xmlhttpRequest === 'undefined') {
    throw new Error('不支持Greasemonkey 4.x，请换用暴力猴或Tampermonkey');
}
// 注入脚本应用
const app = new application_Application();
Object.seal(app);
app.init().then(() => {
    Object.assign(unsafeWindow, {
        __PTM_APP__: app,
        __PTM_AXIOS__: axios["a" /* default */]
    });
}).catch(e => {
    console.log(e);
});


/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _baseMerge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);
/* harmony import */ var _createAssigner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/**
 * This method is like `_.merge` except that it accepts `customizer` which
 * is invoked to produce the merged values of the destination and source
 * properties. If `customizer` returns `undefined`, merging is handled by the
 * method instead. The `customizer` is invoked with six arguments:
 * (objValue, srcValue, key, object, source, stack).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} customizer The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   if (_.isArray(objValue)) {
 *     return objValue.concat(srcValue);
 *   }
 * }
 *
 * var object = { 'a': [1], 'b': [2] };
 * var other = { 'a': [3], 'b': [4] };
 *
 * _.mergeWith(object, other, customizer);
 * // => { 'a': [1, 3], 'b': [2, 4] }
 */
var mergeWith = Object(_createAssigner_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(function(object, source, srcIndex, customizer) {
  Object(_baseMerge_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(object, source, srcIndex, customizer);
});

/* harmony default export */ __webpack_exports__["a"] = (mergeWith);


/***/ }),
/* 280 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseGet.js
var _baseGet = __webpack_require__(55);

// EXTERNAL MODULE: ./node_modules/lodash-es/_assignValue.js
var _assignValue = __webpack_require__(54);

// EXTERNAL MODULE: ./node_modules/lodash-es/_castPath.js + 6 modules
var _castPath = __webpack_require__(27);

// EXTERNAL MODULE: ./node_modules/lodash-es/_isIndex.js
var _isIndex = __webpack_require__(22);

// EXTERNAL MODULE: ./node_modules/lodash-es/isObject.js
var isObject = __webpack_require__(8);

// EXTERNAL MODULE: ./node_modules/lodash-es/_toKey.js
var _toKey = __webpack_require__(44);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSet.js






/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!Object(isObject["a" /* default */])(object)) {
    return object;
  }
  path = Object(_castPath["a" /* default */])(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = Object(_toKey["a" /* default */])(path[index]),
        newValue = value;

    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = Object(isObject["a" /* default */])(objValue)
          ? objValue
          : (Object(_isIndex["a" /* default */])(path[index + 1]) ? [] : {});
      }
    }
    Object(_assignValue["a" /* default */])(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

/* harmony default export */ var _baseSet = (baseSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_basePickBy.js




/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = Object(_baseGet["a" /* default */])(object, path);

    if (predicate(value, path)) {
      _baseSet(result, Object(_castPath["a" /* default */])(path, object), value);
    }
  }
  return result;
}

/* harmony default export */ var _basePickBy = (basePickBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseHasIn.js
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

/* harmony default export */ var _baseHasIn = (baseHasIn);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArguments.js + 1 modules
var isArguments = __webpack_require__(17);

// EXTERNAL MODULE: ./node_modules/lodash-es/isArray.js
var isArray = __webpack_require__(10);

// EXTERNAL MODULE: ./node_modules/lodash-es/isLength.js
var isLength = __webpack_require__(40);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hasPath.js







/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = Object(_castPath["a" /* default */])(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = Object(_toKey["a" /* default */])(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && Object(isLength["a" /* default */])(length) && Object(_isIndex["a" /* default */])(key, length) &&
    (Object(isArray["a" /* default */])(object) || Object(isArguments["a" /* default */])(object));
}

/* harmony default export */ var _hasPath = (hasPath);

// CONCATENATED MODULE: ./node_modules/lodash-es/hasIn.js



/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && _hasPath(object, path, _baseHasIn);
}

/* harmony default export */ var lodash_es_hasIn = (hasIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_basePick.js



/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return _basePickBy(object, paths, function(value, path) {
    return lodash_es_hasIn(object, path);
  });
}

/* harmony default export */ var _basePick = (basePick);

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseFlatten.js + 2 modules
var _baseFlatten = __webpack_require__(58);

// CONCATENATED MODULE: ./node_modules/lodash-es/flatten.js


/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? Object(_baseFlatten["a" /* default */])(array, 1) : [];
}

/* harmony default export */ var lodash_es_flatten = (flatten);

// EXTERNAL MODULE: ./node_modules/lodash-es/_overRest.js + 1 modules
var _overRest = __webpack_require__(59);

// EXTERNAL MODULE: ./node_modules/lodash-es/_setToString.js + 3 modules
var _setToString = __webpack_require__(57);

// CONCATENATED MODULE: ./node_modules/lodash-es/_flatRest.js




/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return Object(_setToString["a" /* default */])(Object(_overRest["a" /* default */])(func, undefined, lodash_es_flatten), func + '');
}

/* harmony default export */ var _flatRest = (flatRest);

// CONCATENATED MODULE: ./node_modules/lodash-es/pick.js



/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = _flatRest(function(object, paths) {
  return object == null ? {} : _basePick(object, paths);
});

/* harmony default export */ var lodash_es_pick = __webpack_exports__["a"] = (pick);


/***/ })
/******/ ]);